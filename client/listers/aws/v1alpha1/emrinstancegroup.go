/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"
)

// EmrInstanceGroupLister helps list EmrInstanceGroups.
type EmrInstanceGroupLister interface {
	// List lists all EmrInstanceGroups in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.EmrInstanceGroup, err error)
	// EmrInstanceGroups returns an object that can list and get EmrInstanceGroups.
	EmrInstanceGroups(namespace string) EmrInstanceGroupNamespaceLister
	EmrInstanceGroupListerExpansion
}

// emrInstanceGroupLister implements the EmrInstanceGroupLister interface.
type emrInstanceGroupLister struct {
	indexer cache.Indexer
}

// NewEmrInstanceGroupLister returns a new EmrInstanceGroupLister.
func NewEmrInstanceGroupLister(indexer cache.Indexer) EmrInstanceGroupLister {
	return &emrInstanceGroupLister{indexer: indexer}
}

// List lists all EmrInstanceGroups in the indexer.
func (s *emrInstanceGroupLister) List(selector labels.Selector) (ret []*v1alpha1.EmrInstanceGroup, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.EmrInstanceGroup))
	})
	return ret, err
}

// EmrInstanceGroups returns an object that can list and get EmrInstanceGroups.
func (s *emrInstanceGroupLister) EmrInstanceGroups(namespace string) EmrInstanceGroupNamespaceLister {
	return emrInstanceGroupNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// EmrInstanceGroupNamespaceLister helps list and get EmrInstanceGroups.
type EmrInstanceGroupNamespaceLister interface {
	// List lists all EmrInstanceGroups in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.EmrInstanceGroup, err error)
	// Get retrieves the EmrInstanceGroup from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.EmrInstanceGroup, error)
	EmrInstanceGroupNamespaceListerExpansion
}

// emrInstanceGroupNamespaceLister implements the EmrInstanceGroupNamespaceLister
// interface.
type emrInstanceGroupNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all EmrInstanceGroups in the indexer for a given namespace.
func (s emrInstanceGroupNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.EmrInstanceGroup, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.EmrInstanceGroup))
	})
	return ret, err
}

// Get retrieves the EmrInstanceGroup from the indexer for a given namespace and name.
func (s emrInstanceGroupNamespaceLister) Get(name string) (*v1alpha1.EmrInstanceGroup, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("emrinstancegroup"), name)
	}
	return obj.(*v1alpha1.EmrInstanceGroup), nil
}
