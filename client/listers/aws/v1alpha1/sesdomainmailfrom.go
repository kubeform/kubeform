/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SesDomainMailFromLister helps list SesDomainMailFroms.
type SesDomainMailFromLister interface {
	// List lists all SesDomainMailFroms in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.SesDomainMailFrom, err error)
	// SesDomainMailFroms returns an object that can list and get SesDomainMailFroms.
	SesDomainMailFroms(namespace string) SesDomainMailFromNamespaceLister
	SesDomainMailFromListerExpansion
}

// sesDomainMailFromLister implements the SesDomainMailFromLister interface.
type sesDomainMailFromLister struct {
	indexer cache.Indexer
}

// NewSesDomainMailFromLister returns a new SesDomainMailFromLister.
func NewSesDomainMailFromLister(indexer cache.Indexer) SesDomainMailFromLister {
	return &sesDomainMailFromLister{indexer: indexer}
}

// List lists all SesDomainMailFroms in the indexer.
func (s *sesDomainMailFromLister) List(selector labels.Selector) (ret []*v1alpha1.SesDomainMailFrom, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SesDomainMailFrom))
	})
	return ret, err
}

// SesDomainMailFroms returns an object that can list and get SesDomainMailFroms.
func (s *sesDomainMailFromLister) SesDomainMailFroms(namespace string) SesDomainMailFromNamespaceLister {
	return sesDomainMailFromNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SesDomainMailFromNamespaceLister helps list and get SesDomainMailFroms.
type SesDomainMailFromNamespaceLister interface {
	// List lists all SesDomainMailFroms in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.SesDomainMailFrom, err error)
	// Get retrieves the SesDomainMailFrom from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.SesDomainMailFrom, error)
	SesDomainMailFromNamespaceListerExpansion
}

// sesDomainMailFromNamespaceLister implements the SesDomainMailFromNamespaceLister
// interface.
type sesDomainMailFromNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SesDomainMailFroms in the indexer for a given namespace.
func (s sesDomainMailFromNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SesDomainMailFrom, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SesDomainMailFrom))
	})
	return ret, err
}

// Get retrieves the SesDomainMailFrom from the indexer for a given namespace and name.
func (s sesDomainMailFromNamespaceLister) Get(name string) (*v1alpha1.SesDomainMailFrom, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("sesdomainmailfrom"), name)
	}
	return obj.(*v1alpha1.SesDomainMailFrom), nil
}
