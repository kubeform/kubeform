/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"
)

// GuarddutyThreatintelsetLister helps list GuarddutyThreatintelsets.
type GuarddutyThreatintelsetLister interface {
	// List lists all GuarddutyThreatintelsets in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.GuarddutyThreatintelset, err error)
	// GuarddutyThreatintelsets returns an object that can list and get GuarddutyThreatintelsets.
	GuarddutyThreatintelsets(namespace string) GuarddutyThreatintelsetNamespaceLister
	GuarddutyThreatintelsetListerExpansion
}

// guarddutyThreatintelsetLister implements the GuarddutyThreatintelsetLister interface.
type guarddutyThreatintelsetLister struct {
	indexer cache.Indexer
}

// NewGuarddutyThreatintelsetLister returns a new GuarddutyThreatintelsetLister.
func NewGuarddutyThreatintelsetLister(indexer cache.Indexer) GuarddutyThreatintelsetLister {
	return &guarddutyThreatintelsetLister{indexer: indexer}
}

// List lists all GuarddutyThreatintelsets in the indexer.
func (s *guarddutyThreatintelsetLister) List(selector labels.Selector) (ret []*v1alpha1.GuarddutyThreatintelset, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.GuarddutyThreatintelset))
	})
	return ret, err
}

// GuarddutyThreatintelsets returns an object that can list and get GuarddutyThreatintelsets.
func (s *guarddutyThreatintelsetLister) GuarddutyThreatintelsets(namespace string) GuarddutyThreatintelsetNamespaceLister {
	return guarddutyThreatintelsetNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// GuarddutyThreatintelsetNamespaceLister helps list and get GuarddutyThreatintelsets.
type GuarddutyThreatintelsetNamespaceLister interface {
	// List lists all GuarddutyThreatintelsets in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.GuarddutyThreatintelset, err error)
	// Get retrieves the GuarddutyThreatintelset from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.GuarddutyThreatintelset, error)
	GuarddutyThreatintelsetNamespaceListerExpansion
}

// guarddutyThreatintelsetNamespaceLister implements the GuarddutyThreatintelsetNamespaceLister
// interface.
type guarddutyThreatintelsetNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all GuarddutyThreatintelsets in the indexer for a given namespace.
func (s guarddutyThreatintelsetNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.GuarddutyThreatintelset, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.GuarddutyThreatintelset))
	})
	return ret, err
}

// Get retrieves the GuarddutyThreatintelset from the indexer for a given namespace and name.
func (s guarddutyThreatintelsetNamespaceLister) Get(name string) (*v1alpha1.GuarddutyThreatintelset, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("guarddutythreatintelset"), name)
	}
	return obj.(*v1alpha1.GuarddutyThreatintelset), nil
}
