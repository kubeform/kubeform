/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// LightsailDomainLister helps list LightsailDomains.
type LightsailDomainLister interface {
	// List lists all LightsailDomains in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.LightsailDomain, err error)
	// LightsailDomains returns an object that can list and get LightsailDomains.
	LightsailDomains(namespace string) LightsailDomainNamespaceLister
	LightsailDomainListerExpansion
}

// lightsailDomainLister implements the LightsailDomainLister interface.
type lightsailDomainLister struct {
	indexer cache.Indexer
}

// NewLightsailDomainLister returns a new LightsailDomainLister.
func NewLightsailDomainLister(indexer cache.Indexer) LightsailDomainLister {
	return &lightsailDomainLister{indexer: indexer}
}

// List lists all LightsailDomains in the indexer.
func (s *lightsailDomainLister) List(selector labels.Selector) (ret []*v1alpha1.LightsailDomain, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.LightsailDomain))
	})
	return ret, err
}

// LightsailDomains returns an object that can list and get LightsailDomains.
func (s *lightsailDomainLister) LightsailDomains(namespace string) LightsailDomainNamespaceLister {
	return lightsailDomainNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// LightsailDomainNamespaceLister helps list and get LightsailDomains.
type LightsailDomainNamespaceLister interface {
	// List lists all LightsailDomains in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.LightsailDomain, err error)
	// Get retrieves the LightsailDomain from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.LightsailDomain, error)
	LightsailDomainNamespaceListerExpansion
}

// lightsailDomainNamespaceLister implements the LightsailDomainNamespaceLister
// interface.
type lightsailDomainNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all LightsailDomains in the indexer for a given namespace.
func (s lightsailDomainNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.LightsailDomain, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.LightsailDomain))
	})
	return ret, err
}

// Get retrieves the LightsailDomain from the indexer for a given namespace and name.
func (s lightsailDomainNamespaceLister) Get(name string) (*v1alpha1.LightsailDomain, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("lightsaildomain"), name)
	}
	return obj.(*v1alpha1.LightsailDomain), nil
}
