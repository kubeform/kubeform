/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"
)

// NetworkInterfaceSgAttachmentLister helps list NetworkInterfaceSgAttachments.
type NetworkInterfaceSgAttachmentLister interface {
	// List lists all NetworkInterfaceSgAttachments in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.NetworkInterfaceSgAttachment, err error)
	// NetworkInterfaceSgAttachments returns an object that can list and get NetworkInterfaceSgAttachments.
	NetworkInterfaceSgAttachments(namespace string) NetworkInterfaceSgAttachmentNamespaceLister
	NetworkInterfaceSgAttachmentListerExpansion
}

// networkInterfaceSgAttachmentLister implements the NetworkInterfaceSgAttachmentLister interface.
type networkInterfaceSgAttachmentLister struct {
	indexer cache.Indexer
}

// NewNetworkInterfaceSgAttachmentLister returns a new NetworkInterfaceSgAttachmentLister.
func NewNetworkInterfaceSgAttachmentLister(indexer cache.Indexer) NetworkInterfaceSgAttachmentLister {
	return &networkInterfaceSgAttachmentLister{indexer: indexer}
}

// List lists all NetworkInterfaceSgAttachments in the indexer.
func (s *networkInterfaceSgAttachmentLister) List(selector labels.Selector) (ret []*v1alpha1.NetworkInterfaceSgAttachment, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.NetworkInterfaceSgAttachment))
	})
	return ret, err
}

// NetworkInterfaceSgAttachments returns an object that can list and get NetworkInterfaceSgAttachments.
func (s *networkInterfaceSgAttachmentLister) NetworkInterfaceSgAttachments(namespace string) NetworkInterfaceSgAttachmentNamespaceLister {
	return networkInterfaceSgAttachmentNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// NetworkInterfaceSgAttachmentNamespaceLister helps list and get NetworkInterfaceSgAttachments.
type NetworkInterfaceSgAttachmentNamespaceLister interface {
	// List lists all NetworkInterfaceSgAttachments in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.NetworkInterfaceSgAttachment, err error)
	// Get retrieves the NetworkInterfaceSgAttachment from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.NetworkInterfaceSgAttachment, error)
	NetworkInterfaceSgAttachmentNamespaceListerExpansion
}

// networkInterfaceSgAttachmentNamespaceLister implements the NetworkInterfaceSgAttachmentNamespaceLister
// interface.
type networkInterfaceSgAttachmentNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all NetworkInterfaceSgAttachments in the indexer for a given namespace.
func (s networkInterfaceSgAttachmentNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.NetworkInterfaceSgAttachment, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.NetworkInterfaceSgAttachment))
	})
	return ret, err
}

// Get retrieves the NetworkInterfaceSgAttachment from the indexer for a given namespace and name.
func (s networkInterfaceSgAttachmentNamespaceLister) Get(name string) (*v1alpha1.NetworkInterfaceSgAttachment, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("networkinterfacesgattachment"), name)
	}
	return obj.(*v1alpha1.NetworkInterfaceSgAttachment), nil
}
