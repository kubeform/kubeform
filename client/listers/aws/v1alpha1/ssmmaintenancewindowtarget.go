/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SsmMaintenanceWindowTargetLister helps list SsmMaintenanceWindowTargets.
type SsmMaintenanceWindowTargetLister interface {
	// List lists all SsmMaintenanceWindowTargets in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.SsmMaintenanceWindowTarget, err error)
	// SsmMaintenanceWindowTargets returns an object that can list and get SsmMaintenanceWindowTargets.
	SsmMaintenanceWindowTargets(namespace string) SsmMaintenanceWindowTargetNamespaceLister
	SsmMaintenanceWindowTargetListerExpansion
}

// ssmMaintenanceWindowTargetLister implements the SsmMaintenanceWindowTargetLister interface.
type ssmMaintenanceWindowTargetLister struct {
	indexer cache.Indexer
}

// NewSsmMaintenanceWindowTargetLister returns a new SsmMaintenanceWindowTargetLister.
func NewSsmMaintenanceWindowTargetLister(indexer cache.Indexer) SsmMaintenanceWindowTargetLister {
	return &ssmMaintenanceWindowTargetLister{indexer: indexer}
}

// List lists all SsmMaintenanceWindowTargets in the indexer.
func (s *ssmMaintenanceWindowTargetLister) List(selector labels.Selector) (ret []*v1alpha1.SsmMaintenanceWindowTarget, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SsmMaintenanceWindowTarget))
	})
	return ret, err
}

// SsmMaintenanceWindowTargets returns an object that can list and get SsmMaintenanceWindowTargets.
func (s *ssmMaintenanceWindowTargetLister) SsmMaintenanceWindowTargets(namespace string) SsmMaintenanceWindowTargetNamespaceLister {
	return ssmMaintenanceWindowTargetNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SsmMaintenanceWindowTargetNamespaceLister helps list and get SsmMaintenanceWindowTargets.
type SsmMaintenanceWindowTargetNamespaceLister interface {
	// List lists all SsmMaintenanceWindowTargets in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.SsmMaintenanceWindowTarget, err error)
	// Get retrieves the SsmMaintenanceWindowTarget from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.SsmMaintenanceWindowTarget, error)
	SsmMaintenanceWindowTargetNamespaceListerExpansion
}

// ssmMaintenanceWindowTargetNamespaceLister implements the SsmMaintenanceWindowTargetNamespaceLister
// interface.
type ssmMaintenanceWindowTargetNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SsmMaintenanceWindowTargets in the indexer for a given namespace.
func (s ssmMaintenanceWindowTargetNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SsmMaintenanceWindowTarget, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SsmMaintenanceWindowTarget))
	})
	return ret, err
}

// Get retrieves the SsmMaintenanceWindowTarget from the indexer for a given namespace and name.
func (s ssmMaintenanceWindowTargetNamespaceLister) Get(name string) (*v1alpha1.SsmMaintenanceWindowTarget, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("ssmmaintenancewindowtarget"), name)
	}
	return obj.(*v1alpha1.SsmMaintenanceWindowTarget), nil
}
