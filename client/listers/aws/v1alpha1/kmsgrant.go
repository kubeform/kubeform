/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"
)

// KmsGrantLister helps list KmsGrants.
type KmsGrantLister interface {
	// List lists all KmsGrants in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.KmsGrant, err error)
	// KmsGrants returns an object that can list and get KmsGrants.
	KmsGrants(namespace string) KmsGrantNamespaceLister
	KmsGrantListerExpansion
}

// kmsGrantLister implements the KmsGrantLister interface.
type kmsGrantLister struct {
	indexer cache.Indexer
}

// NewKmsGrantLister returns a new KmsGrantLister.
func NewKmsGrantLister(indexer cache.Indexer) KmsGrantLister {
	return &kmsGrantLister{indexer: indexer}
}

// List lists all KmsGrants in the indexer.
func (s *kmsGrantLister) List(selector labels.Selector) (ret []*v1alpha1.KmsGrant, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.KmsGrant))
	})
	return ret, err
}

// KmsGrants returns an object that can list and get KmsGrants.
func (s *kmsGrantLister) KmsGrants(namespace string) KmsGrantNamespaceLister {
	return kmsGrantNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// KmsGrantNamespaceLister helps list and get KmsGrants.
type KmsGrantNamespaceLister interface {
	// List lists all KmsGrants in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.KmsGrant, err error)
	// Get retrieves the KmsGrant from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.KmsGrant, error)
	KmsGrantNamespaceListerExpansion
}

// kmsGrantNamespaceLister implements the KmsGrantNamespaceLister
// interface.
type kmsGrantNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all KmsGrants in the indexer for a given namespace.
func (s kmsGrantNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.KmsGrant, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.KmsGrant))
	})
	return ret, err
}

// Get retrieves the KmsGrant from the indexer for a given namespace and name.
func (s kmsGrantNamespaceLister) Get(name string) (*v1alpha1.KmsGrant, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("kmsgrant"), name)
	}
	return obj.(*v1alpha1.KmsGrant), nil
}
