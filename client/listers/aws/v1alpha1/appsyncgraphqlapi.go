/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AppsyncGraphqlAPILister helps list AppsyncGraphqlAPIs.
type AppsyncGraphqlAPILister interface {
	// List lists all AppsyncGraphqlAPIs in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.AppsyncGraphqlAPI, err error)
	// AppsyncGraphqlAPIs returns an object that can list and get AppsyncGraphqlAPIs.
	AppsyncGraphqlAPIs(namespace string) AppsyncGraphqlAPINamespaceLister
	AppsyncGraphqlAPIListerExpansion
}

// appsyncGraphqlAPILister implements the AppsyncGraphqlAPILister interface.
type appsyncGraphqlAPILister struct {
	indexer cache.Indexer
}

// NewAppsyncGraphqlAPILister returns a new AppsyncGraphqlAPILister.
func NewAppsyncGraphqlAPILister(indexer cache.Indexer) AppsyncGraphqlAPILister {
	return &appsyncGraphqlAPILister{indexer: indexer}
}

// List lists all AppsyncGraphqlAPIs in the indexer.
func (s *appsyncGraphqlAPILister) List(selector labels.Selector) (ret []*v1alpha1.AppsyncGraphqlAPI, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AppsyncGraphqlAPI))
	})
	return ret, err
}

// AppsyncGraphqlAPIs returns an object that can list and get AppsyncGraphqlAPIs.
func (s *appsyncGraphqlAPILister) AppsyncGraphqlAPIs(namespace string) AppsyncGraphqlAPINamespaceLister {
	return appsyncGraphqlAPINamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AppsyncGraphqlAPINamespaceLister helps list and get AppsyncGraphqlAPIs.
type AppsyncGraphqlAPINamespaceLister interface {
	// List lists all AppsyncGraphqlAPIs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.AppsyncGraphqlAPI, err error)
	// Get retrieves the AppsyncGraphqlAPI from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.AppsyncGraphqlAPI, error)
	AppsyncGraphqlAPINamespaceListerExpansion
}

// appsyncGraphqlAPINamespaceLister implements the AppsyncGraphqlAPINamespaceLister
// interface.
type appsyncGraphqlAPINamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AppsyncGraphqlAPIs in the indexer for a given namespace.
func (s appsyncGraphqlAPINamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AppsyncGraphqlAPI, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AppsyncGraphqlAPI))
	})
	return ret, err
}

// Get retrieves the AppsyncGraphqlAPI from the indexer for a given namespace and name.
func (s appsyncGraphqlAPINamespaceLister) Get(name string) (*v1alpha1.AppsyncGraphqlAPI, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("appsyncgraphqlapi"), name)
	}
	return obj.(*v1alpha1.AppsyncGraphqlAPI), nil
}
