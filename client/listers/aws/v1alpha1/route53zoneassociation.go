/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// Route53ZoneAssociationLister helps list Route53ZoneAssociations.
type Route53ZoneAssociationLister interface {
	// List lists all Route53ZoneAssociations in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.Route53ZoneAssociation, err error)
	// Route53ZoneAssociations returns an object that can list and get Route53ZoneAssociations.
	Route53ZoneAssociations(namespace string) Route53ZoneAssociationNamespaceLister
	Route53ZoneAssociationListerExpansion
}

// route53ZoneAssociationLister implements the Route53ZoneAssociationLister interface.
type route53ZoneAssociationLister struct {
	indexer cache.Indexer
}

// NewRoute53ZoneAssociationLister returns a new Route53ZoneAssociationLister.
func NewRoute53ZoneAssociationLister(indexer cache.Indexer) Route53ZoneAssociationLister {
	return &route53ZoneAssociationLister{indexer: indexer}
}

// List lists all Route53ZoneAssociations in the indexer.
func (s *route53ZoneAssociationLister) List(selector labels.Selector) (ret []*v1alpha1.Route53ZoneAssociation, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Route53ZoneAssociation))
	})
	return ret, err
}

// Route53ZoneAssociations returns an object that can list and get Route53ZoneAssociations.
func (s *route53ZoneAssociationLister) Route53ZoneAssociations(namespace string) Route53ZoneAssociationNamespaceLister {
	return route53ZoneAssociationNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// Route53ZoneAssociationNamespaceLister helps list and get Route53ZoneAssociations.
type Route53ZoneAssociationNamespaceLister interface {
	// List lists all Route53ZoneAssociations in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.Route53ZoneAssociation, err error)
	// Get retrieves the Route53ZoneAssociation from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.Route53ZoneAssociation, error)
	Route53ZoneAssociationNamespaceListerExpansion
}

// route53ZoneAssociationNamespaceLister implements the Route53ZoneAssociationNamespaceLister
// interface.
type route53ZoneAssociationNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Route53ZoneAssociations in the indexer for a given namespace.
func (s route53ZoneAssociationNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Route53ZoneAssociation, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Route53ZoneAssociation))
	})
	return ret, err
}

// Get retrieves the Route53ZoneAssociation from the indexer for a given namespace and name.
func (s route53ZoneAssociationNamespaceLister) Get(name string) (*v1alpha1.Route53ZoneAssociation, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("route53zoneassociation"), name)
	}
	return obj.(*v1alpha1.Route53ZoneAssociation), nil
}
