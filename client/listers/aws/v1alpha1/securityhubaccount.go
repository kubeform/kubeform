/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SecurityhubAccountLister helps list SecurityhubAccounts.
type SecurityhubAccountLister interface {
	// List lists all SecurityhubAccounts in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.SecurityhubAccount, err error)
	// SecurityhubAccounts returns an object that can list and get SecurityhubAccounts.
	SecurityhubAccounts(namespace string) SecurityhubAccountNamespaceLister
	SecurityhubAccountListerExpansion
}

// securityhubAccountLister implements the SecurityhubAccountLister interface.
type securityhubAccountLister struct {
	indexer cache.Indexer
}

// NewSecurityhubAccountLister returns a new SecurityhubAccountLister.
func NewSecurityhubAccountLister(indexer cache.Indexer) SecurityhubAccountLister {
	return &securityhubAccountLister{indexer: indexer}
}

// List lists all SecurityhubAccounts in the indexer.
func (s *securityhubAccountLister) List(selector labels.Selector) (ret []*v1alpha1.SecurityhubAccount, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SecurityhubAccount))
	})
	return ret, err
}

// SecurityhubAccounts returns an object that can list and get SecurityhubAccounts.
func (s *securityhubAccountLister) SecurityhubAccounts(namespace string) SecurityhubAccountNamespaceLister {
	return securityhubAccountNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SecurityhubAccountNamespaceLister helps list and get SecurityhubAccounts.
type SecurityhubAccountNamespaceLister interface {
	// List lists all SecurityhubAccounts in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.SecurityhubAccount, err error)
	// Get retrieves the SecurityhubAccount from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.SecurityhubAccount, error)
	SecurityhubAccountNamespaceListerExpansion
}

// securityhubAccountNamespaceLister implements the SecurityhubAccountNamespaceLister
// interface.
type securityhubAccountNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SecurityhubAccounts in the indexer for a given namespace.
func (s securityhubAccountNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SecurityhubAccount, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SecurityhubAccount))
	})
	return ret, err
}

// Get retrieves the SecurityhubAccount from the indexer for a given namespace and name.
func (s securityhubAccountNamespaceLister) Get(name string) (*v1alpha1.SecurityhubAccount, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("securityhubaccount"), name)
	}
	return obj.(*v1alpha1.SecurityhubAccount), nil
}
