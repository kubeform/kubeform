/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// WafGeoMatchSetLister helps list WafGeoMatchSets.
type WafGeoMatchSetLister interface {
	// List lists all WafGeoMatchSets in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.WafGeoMatchSet, err error)
	// WafGeoMatchSets returns an object that can list and get WafGeoMatchSets.
	WafGeoMatchSets(namespace string) WafGeoMatchSetNamespaceLister
	WafGeoMatchSetListerExpansion
}

// wafGeoMatchSetLister implements the WafGeoMatchSetLister interface.
type wafGeoMatchSetLister struct {
	indexer cache.Indexer
}

// NewWafGeoMatchSetLister returns a new WafGeoMatchSetLister.
func NewWafGeoMatchSetLister(indexer cache.Indexer) WafGeoMatchSetLister {
	return &wafGeoMatchSetLister{indexer: indexer}
}

// List lists all WafGeoMatchSets in the indexer.
func (s *wafGeoMatchSetLister) List(selector labels.Selector) (ret []*v1alpha1.WafGeoMatchSet, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.WafGeoMatchSet))
	})
	return ret, err
}

// WafGeoMatchSets returns an object that can list and get WafGeoMatchSets.
func (s *wafGeoMatchSetLister) WafGeoMatchSets(namespace string) WafGeoMatchSetNamespaceLister {
	return wafGeoMatchSetNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// WafGeoMatchSetNamespaceLister helps list and get WafGeoMatchSets.
type WafGeoMatchSetNamespaceLister interface {
	// List lists all WafGeoMatchSets in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.WafGeoMatchSet, err error)
	// Get retrieves the WafGeoMatchSet from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.WafGeoMatchSet, error)
	WafGeoMatchSetNamespaceListerExpansion
}

// wafGeoMatchSetNamespaceLister implements the WafGeoMatchSetNamespaceLister
// interface.
type wafGeoMatchSetNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all WafGeoMatchSets in the indexer for a given namespace.
func (s wafGeoMatchSetNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.WafGeoMatchSet, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.WafGeoMatchSet))
	})
	return ret, err
}

// Get retrieves the WafGeoMatchSet from the indexer for a given namespace and name.
func (s wafGeoMatchSetNamespaceLister) Get(name string) (*v1alpha1.WafGeoMatchSet, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("wafgeomatchset"), name)
	}
	return obj.(*v1alpha1.WafGeoMatchSet), nil
}
