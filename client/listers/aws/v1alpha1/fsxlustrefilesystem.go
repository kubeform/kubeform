/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// FsxLustreFileSystemLister helps list FsxLustreFileSystems.
type FsxLustreFileSystemLister interface {
	// List lists all FsxLustreFileSystems in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.FsxLustreFileSystem, err error)
	// FsxLustreFileSystems returns an object that can list and get FsxLustreFileSystems.
	FsxLustreFileSystems(namespace string) FsxLustreFileSystemNamespaceLister
	FsxLustreFileSystemListerExpansion
}

// fsxLustreFileSystemLister implements the FsxLustreFileSystemLister interface.
type fsxLustreFileSystemLister struct {
	indexer cache.Indexer
}

// NewFsxLustreFileSystemLister returns a new FsxLustreFileSystemLister.
func NewFsxLustreFileSystemLister(indexer cache.Indexer) FsxLustreFileSystemLister {
	return &fsxLustreFileSystemLister{indexer: indexer}
}

// List lists all FsxLustreFileSystems in the indexer.
func (s *fsxLustreFileSystemLister) List(selector labels.Selector) (ret []*v1alpha1.FsxLustreFileSystem, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FsxLustreFileSystem))
	})
	return ret, err
}

// FsxLustreFileSystems returns an object that can list and get FsxLustreFileSystems.
func (s *fsxLustreFileSystemLister) FsxLustreFileSystems(namespace string) FsxLustreFileSystemNamespaceLister {
	return fsxLustreFileSystemNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// FsxLustreFileSystemNamespaceLister helps list and get FsxLustreFileSystems.
type FsxLustreFileSystemNamespaceLister interface {
	// List lists all FsxLustreFileSystems in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.FsxLustreFileSystem, err error)
	// Get retrieves the FsxLustreFileSystem from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.FsxLustreFileSystem, error)
	FsxLustreFileSystemNamespaceListerExpansion
}

// fsxLustreFileSystemNamespaceLister implements the FsxLustreFileSystemNamespaceLister
// interface.
type fsxLustreFileSystemNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all FsxLustreFileSystems in the indexer for a given namespace.
func (s fsxLustreFileSystemNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.FsxLustreFileSystem, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FsxLustreFileSystem))
	})
	return ret, err
}

// Get retrieves the FsxLustreFileSystem from the indexer for a given namespace and name.
func (s fsxLustreFileSystemNamespaceLister) Get(name string) (*v1alpha1.FsxLustreFileSystem, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("fsxlustrefilesystem"), name)
	}
	return obj.(*v1alpha1.FsxLustreFileSystem), nil
}
