/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ApiGatewayDomainNameLister helps list ApiGatewayDomainNames.
type ApiGatewayDomainNameLister interface {
	// List lists all ApiGatewayDomainNames in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ApiGatewayDomainName, err error)
	// ApiGatewayDomainNames returns an object that can list and get ApiGatewayDomainNames.
	ApiGatewayDomainNames(namespace string) ApiGatewayDomainNameNamespaceLister
	ApiGatewayDomainNameListerExpansion
}

// apiGatewayDomainNameLister implements the ApiGatewayDomainNameLister interface.
type apiGatewayDomainNameLister struct {
	indexer cache.Indexer
}

// NewApiGatewayDomainNameLister returns a new ApiGatewayDomainNameLister.
func NewApiGatewayDomainNameLister(indexer cache.Indexer) ApiGatewayDomainNameLister {
	return &apiGatewayDomainNameLister{indexer: indexer}
}

// List lists all ApiGatewayDomainNames in the indexer.
func (s *apiGatewayDomainNameLister) List(selector labels.Selector) (ret []*v1alpha1.ApiGatewayDomainName, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ApiGatewayDomainName))
	})
	return ret, err
}

// ApiGatewayDomainNames returns an object that can list and get ApiGatewayDomainNames.
func (s *apiGatewayDomainNameLister) ApiGatewayDomainNames(namespace string) ApiGatewayDomainNameNamespaceLister {
	return apiGatewayDomainNameNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ApiGatewayDomainNameNamespaceLister helps list and get ApiGatewayDomainNames.
type ApiGatewayDomainNameNamespaceLister interface {
	// List lists all ApiGatewayDomainNames in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ApiGatewayDomainName, err error)
	// Get retrieves the ApiGatewayDomainName from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ApiGatewayDomainName, error)
	ApiGatewayDomainNameNamespaceListerExpansion
}

// apiGatewayDomainNameNamespaceLister implements the ApiGatewayDomainNameNamespaceLister
// interface.
type apiGatewayDomainNameNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ApiGatewayDomainNames in the indexer for a given namespace.
func (s apiGatewayDomainNameNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ApiGatewayDomainName, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ApiGatewayDomainName))
	})
	return ret, err
}

// Get retrieves the ApiGatewayDomainName from the indexer for a given namespace and name.
func (s apiGatewayDomainNameNamespaceLister) Get(name string) (*v1alpha1.ApiGatewayDomainName, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("apigatewaydomainname"), name)
	}
	return obj.(*v1alpha1.ApiGatewayDomainName), nil
}
