/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CloudfrontDistributionLister helps list CloudfrontDistributions.
type CloudfrontDistributionLister interface {
	// List lists all CloudfrontDistributions in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.CloudfrontDistribution, err error)
	// CloudfrontDistributions returns an object that can list and get CloudfrontDistributions.
	CloudfrontDistributions(namespace string) CloudfrontDistributionNamespaceLister
	CloudfrontDistributionListerExpansion
}

// cloudfrontDistributionLister implements the CloudfrontDistributionLister interface.
type cloudfrontDistributionLister struct {
	indexer cache.Indexer
}

// NewCloudfrontDistributionLister returns a new CloudfrontDistributionLister.
func NewCloudfrontDistributionLister(indexer cache.Indexer) CloudfrontDistributionLister {
	return &cloudfrontDistributionLister{indexer: indexer}
}

// List lists all CloudfrontDistributions in the indexer.
func (s *cloudfrontDistributionLister) List(selector labels.Selector) (ret []*v1alpha1.CloudfrontDistribution, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CloudfrontDistribution))
	})
	return ret, err
}

// CloudfrontDistributions returns an object that can list and get CloudfrontDistributions.
func (s *cloudfrontDistributionLister) CloudfrontDistributions(namespace string) CloudfrontDistributionNamespaceLister {
	return cloudfrontDistributionNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CloudfrontDistributionNamespaceLister helps list and get CloudfrontDistributions.
type CloudfrontDistributionNamespaceLister interface {
	// List lists all CloudfrontDistributions in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.CloudfrontDistribution, err error)
	// Get retrieves the CloudfrontDistribution from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.CloudfrontDistribution, error)
	CloudfrontDistributionNamespaceListerExpansion
}

// cloudfrontDistributionNamespaceLister implements the CloudfrontDistributionNamespaceLister
// interface.
type cloudfrontDistributionNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CloudfrontDistributions in the indexer for a given namespace.
func (s cloudfrontDistributionNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.CloudfrontDistribution, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CloudfrontDistribution))
	})
	return ret, err
}

// Get retrieves the CloudfrontDistribution from the indexer for a given namespace and name.
func (s cloudfrontDistributionNamespaceLister) Get(name string) (*v1alpha1.CloudfrontDistribution, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("cloudfrontdistribution"), name)
	}
	return obj.(*v1alpha1.CloudfrontDistribution), nil
}
