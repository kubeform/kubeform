/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SsmResourceDataSyncLister helps list SsmResourceDataSyncs.
type SsmResourceDataSyncLister interface {
	// List lists all SsmResourceDataSyncs in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.SsmResourceDataSync, err error)
	// SsmResourceDataSyncs returns an object that can list and get SsmResourceDataSyncs.
	SsmResourceDataSyncs(namespace string) SsmResourceDataSyncNamespaceLister
	SsmResourceDataSyncListerExpansion
}

// ssmResourceDataSyncLister implements the SsmResourceDataSyncLister interface.
type ssmResourceDataSyncLister struct {
	indexer cache.Indexer
}

// NewSsmResourceDataSyncLister returns a new SsmResourceDataSyncLister.
func NewSsmResourceDataSyncLister(indexer cache.Indexer) SsmResourceDataSyncLister {
	return &ssmResourceDataSyncLister{indexer: indexer}
}

// List lists all SsmResourceDataSyncs in the indexer.
func (s *ssmResourceDataSyncLister) List(selector labels.Selector) (ret []*v1alpha1.SsmResourceDataSync, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SsmResourceDataSync))
	})
	return ret, err
}

// SsmResourceDataSyncs returns an object that can list and get SsmResourceDataSyncs.
func (s *ssmResourceDataSyncLister) SsmResourceDataSyncs(namespace string) SsmResourceDataSyncNamespaceLister {
	return ssmResourceDataSyncNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SsmResourceDataSyncNamespaceLister helps list and get SsmResourceDataSyncs.
type SsmResourceDataSyncNamespaceLister interface {
	// List lists all SsmResourceDataSyncs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.SsmResourceDataSync, err error)
	// Get retrieves the SsmResourceDataSync from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.SsmResourceDataSync, error)
	SsmResourceDataSyncNamespaceListerExpansion
}

// ssmResourceDataSyncNamespaceLister implements the SsmResourceDataSyncNamespaceLister
// interface.
type ssmResourceDataSyncNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SsmResourceDataSyncs in the indexer for a given namespace.
func (s ssmResourceDataSyncNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SsmResourceDataSync, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SsmResourceDataSync))
	})
	return ret, err
}

// Get retrieves the SsmResourceDataSync from the indexer for a given namespace and name.
func (s ssmResourceDataSyncNamespaceLister) Get(name string) (*v1alpha1.SsmResourceDataSync, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("ssmresourcedatasync"), name)
	}
	return obj.(*v1alpha1.SsmResourceDataSync), nil
}
