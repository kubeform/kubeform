/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// DbInstanceRoleAssociationLister helps list DbInstanceRoleAssociations.
type DbInstanceRoleAssociationLister interface {
	// List lists all DbInstanceRoleAssociations in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.DbInstanceRoleAssociation, err error)
	// DbInstanceRoleAssociations returns an object that can list and get DbInstanceRoleAssociations.
	DbInstanceRoleAssociations(namespace string) DbInstanceRoleAssociationNamespaceLister
	DbInstanceRoleAssociationListerExpansion
}

// dbInstanceRoleAssociationLister implements the DbInstanceRoleAssociationLister interface.
type dbInstanceRoleAssociationLister struct {
	indexer cache.Indexer
}

// NewDbInstanceRoleAssociationLister returns a new DbInstanceRoleAssociationLister.
func NewDbInstanceRoleAssociationLister(indexer cache.Indexer) DbInstanceRoleAssociationLister {
	return &dbInstanceRoleAssociationLister{indexer: indexer}
}

// List lists all DbInstanceRoleAssociations in the indexer.
func (s *dbInstanceRoleAssociationLister) List(selector labels.Selector) (ret []*v1alpha1.DbInstanceRoleAssociation, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DbInstanceRoleAssociation))
	})
	return ret, err
}

// DbInstanceRoleAssociations returns an object that can list and get DbInstanceRoleAssociations.
func (s *dbInstanceRoleAssociationLister) DbInstanceRoleAssociations(namespace string) DbInstanceRoleAssociationNamespaceLister {
	return dbInstanceRoleAssociationNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DbInstanceRoleAssociationNamespaceLister helps list and get DbInstanceRoleAssociations.
type DbInstanceRoleAssociationNamespaceLister interface {
	// List lists all DbInstanceRoleAssociations in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.DbInstanceRoleAssociation, err error)
	// Get retrieves the DbInstanceRoleAssociation from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.DbInstanceRoleAssociation, error)
	DbInstanceRoleAssociationNamespaceListerExpansion
}

// dbInstanceRoleAssociationNamespaceLister implements the DbInstanceRoleAssociationNamespaceLister
// interface.
type dbInstanceRoleAssociationNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DbInstanceRoleAssociations in the indexer for a given namespace.
func (s dbInstanceRoleAssociationNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.DbInstanceRoleAssociation, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DbInstanceRoleAssociation))
	})
	return ret, err
}

// Get retrieves the DbInstanceRoleAssociation from the indexer for a given namespace and name.
func (s dbInstanceRoleAssociationNamespaceLister) Get(name string) (*v1alpha1.DbInstanceRoleAssociation, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("dbinstanceroleassociation"), name)
	}
	return obj.(*v1alpha1.DbInstanceRoleAssociation), nil
}
