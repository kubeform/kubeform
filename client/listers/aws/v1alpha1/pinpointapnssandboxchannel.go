/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PinpointApnsSandboxChannelLister helps list PinpointApnsSandboxChannels.
type PinpointApnsSandboxChannelLister interface {
	// List lists all PinpointApnsSandboxChannels in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.PinpointApnsSandboxChannel, err error)
	// PinpointApnsSandboxChannels returns an object that can list and get PinpointApnsSandboxChannels.
	PinpointApnsSandboxChannels(namespace string) PinpointApnsSandboxChannelNamespaceLister
	PinpointApnsSandboxChannelListerExpansion
}

// pinpointApnsSandboxChannelLister implements the PinpointApnsSandboxChannelLister interface.
type pinpointApnsSandboxChannelLister struct {
	indexer cache.Indexer
}

// NewPinpointApnsSandboxChannelLister returns a new PinpointApnsSandboxChannelLister.
func NewPinpointApnsSandboxChannelLister(indexer cache.Indexer) PinpointApnsSandboxChannelLister {
	return &pinpointApnsSandboxChannelLister{indexer: indexer}
}

// List lists all PinpointApnsSandboxChannels in the indexer.
func (s *pinpointApnsSandboxChannelLister) List(selector labels.Selector) (ret []*v1alpha1.PinpointApnsSandboxChannel, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PinpointApnsSandboxChannel))
	})
	return ret, err
}

// PinpointApnsSandboxChannels returns an object that can list and get PinpointApnsSandboxChannels.
func (s *pinpointApnsSandboxChannelLister) PinpointApnsSandboxChannels(namespace string) PinpointApnsSandboxChannelNamespaceLister {
	return pinpointApnsSandboxChannelNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PinpointApnsSandboxChannelNamespaceLister helps list and get PinpointApnsSandboxChannels.
type PinpointApnsSandboxChannelNamespaceLister interface {
	// List lists all PinpointApnsSandboxChannels in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.PinpointApnsSandboxChannel, err error)
	// Get retrieves the PinpointApnsSandboxChannel from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.PinpointApnsSandboxChannel, error)
	PinpointApnsSandboxChannelNamespaceListerExpansion
}

// pinpointApnsSandboxChannelNamespaceLister implements the PinpointApnsSandboxChannelNamespaceLister
// interface.
type pinpointApnsSandboxChannelNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all PinpointApnsSandboxChannels in the indexer for a given namespace.
func (s pinpointApnsSandboxChannelNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.PinpointApnsSandboxChannel, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PinpointApnsSandboxChannel))
	})
	return ret, err
}

// Get retrieves the PinpointApnsSandboxChannel from the indexer for a given namespace and name.
func (s pinpointApnsSandboxChannelNamespaceLister) Get(name string) (*v1alpha1.PinpointApnsSandboxChannel, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("pinpointapnssandboxchannel"), name)
	}
	return obj.(*v1alpha1.PinpointApnsSandboxChannel), nil
}
