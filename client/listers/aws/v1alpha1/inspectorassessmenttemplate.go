/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// InspectorAssessmentTemplateLister helps list InspectorAssessmentTemplates.
type InspectorAssessmentTemplateLister interface {
	// List lists all InspectorAssessmentTemplates in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.InspectorAssessmentTemplate, err error)
	// InspectorAssessmentTemplates returns an object that can list and get InspectorAssessmentTemplates.
	InspectorAssessmentTemplates(namespace string) InspectorAssessmentTemplateNamespaceLister
	InspectorAssessmentTemplateListerExpansion
}

// inspectorAssessmentTemplateLister implements the InspectorAssessmentTemplateLister interface.
type inspectorAssessmentTemplateLister struct {
	indexer cache.Indexer
}

// NewInspectorAssessmentTemplateLister returns a new InspectorAssessmentTemplateLister.
func NewInspectorAssessmentTemplateLister(indexer cache.Indexer) InspectorAssessmentTemplateLister {
	return &inspectorAssessmentTemplateLister{indexer: indexer}
}

// List lists all InspectorAssessmentTemplates in the indexer.
func (s *inspectorAssessmentTemplateLister) List(selector labels.Selector) (ret []*v1alpha1.InspectorAssessmentTemplate, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.InspectorAssessmentTemplate))
	})
	return ret, err
}

// InspectorAssessmentTemplates returns an object that can list and get InspectorAssessmentTemplates.
func (s *inspectorAssessmentTemplateLister) InspectorAssessmentTemplates(namespace string) InspectorAssessmentTemplateNamespaceLister {
	return inspectorAssessmentTemplateNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// InspectorAssessmentTemplateNamespaceLister helps list and get InspectorAssessmentTemplates.
type InspectorAssessmentTemplateNamespaceLister interface {
	// List lists all InspectorAssessmentTemplates in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.InspectorAssessmentTemplate, err error)
	// Get retrieves the InspectorAssessmentTemplate from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.InspectorAssessmentTemplate, error)
	InspectorAssessmentTemplateNamespaceListerExpansion
}

// inspectorAssessmentTemplateNamespaceLister implements the InspectorAssessmentTemplateNamespaceLister
// interface.
type inspectorAssessmentTemplateNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all InspectorAssessmentTemplates in the indexer for a given namespace.
func (s inspectorAssessmentTemplateNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.InspectorAssessmentTemplate, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.InspectorAssessmentTemplate))
	})
	return ret, err
}

// Get retrieves the InspectorAssessmentTemplate from the indexer for a given namespace and name.
func (s inspectorAssessmentTemplateNamespaceLister) Get(name string) (*v1alpha1.InspectorAssessmentTemplate, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("inspectorassessmenttemplate"), name)
	}
	return obj.(*v1alpha1.InspectorAssessmentTemplate), nil
}
