/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SesDomainIdentityVerificationLister helps list SesDomainIdentityVerifications.
type SesDomainIdentityVerificationLister interface {
	// List lists all SesDomainIdentityVerifications in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.SesDomainIdentityVerification, err error)
	// SesDomainIdentityVerifications returns an object that can list and get SesDomainIdentityVerifications.
	SesDomainIdentityVerifications(namespace string) SesDomainIdentityVerificationNamespaceLister
	SesDomainIdentityVerificationListerExpansion
}

// sesDomainIdentityVerificationLister implements the SesDomainIdentityVerificationLister interface.
type sesDomainIdentityVerificationLister struct {
	indexer cache.Indexer
}

// NewSesDomainIdentityVerificationLister returns a new SesDomainIdentityVerificationLister.
func NewSesDomainIdentityVerificationLister(indexer cache.Indexer) SesDomainIdentityVerificationLister {
	return &sesDomainIdentityVerificationLister{indexer: indexer}
}

// List lists all SesDomainIdentityVerifications in the indexer.
func (s *sesDomainIdentityVerificationLister) List(selector labels.Selector) (ret []*v1alpha1.SesDomainIdentityVerification, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SesDomainIdentityVerification))
	})
	return ret, err
}

// SesDomainIdentityVerifications returns an object that can list and get SesDomainIdentityVerifications.
func (s *sesDomainIdentityVerificationLister) SesDomainIdentityVerifications(namespace string) SesDomainIdentityVerificationNamespaceLister {
	return sesDomainIdentityVerificationNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SesDomainIdentityVerificationNamespaceLister helps list and get SesDomainIdentityVerifications.
type SesDomainIdentityVerificationNamespaceLister interface {
	// List lists all SesDomainIdentityVerifications in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.SesDomainIdentityVerification, err error)
	// Get retrieves the SesDomainIdentityVerification from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.SesDomainIdentityVerification, error)
	SesDomainIdentityVerificationNamespaceListerExpansion
}

// sesDomainIdentityVerificationNamespaceLister implements the SesDomainIdentityVerificationNamespaceLister
// interface.
type sesDomainIdentityVerificationNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SesDomainIdentityVerifications in the indexer for a given namespace.
func (s sesDomainIdentityVerificationNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SesDomainIdentityVerification, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SesDomainIdentityVerification))
	})
	return ret, err
}

// Get retrieves the SesDomainIdentityVerification from the indexer for a given namespace and name.
func (s sesDomainIdentityVerificationNamespaceLister) Get(name string) (*v1alpha1.SesDomainIdentityVerification, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("sesdomainidentityverification"), name)
	}
	return obj.(*v1alpha1.SesDomainIdentityVerification), nil
}
