/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AutoscalingScheduleLister helps list AutoscalingSchedules.
type AutoscalingScheduleLister interface {
	// List lists all AutoscalingSchedules in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.AutoscalingSchedule, err error)
	// AutoscalingSchedules returns an object that can list and get AutoscalingSchedules.
	AutoscalingSchedules(namespace string) AutoscalingScheduleNamespaceLister
	AutoscalingScheduleListerExpansion
}

// autoscalingScheduleLister implements the AutoscalingScheduleLister interface.
type autoscalingScheduleLister struct {
	indexer cache.Indexer
}

// NewAutoscalingScheduleLister returns a new AutoscalingScheduleLister.
func NewAutoscalingScheduleLister(indexer cache.Indexer) AutoscalingScheduleLister {
	return &autoscalingScheduleLister{indexer: indexer}
}

// List lists all AutoscalingSchedules in the indexer.
func (s *autoscalingScheduleLister) List(selector labels.Selector) (ret []*v1alpha1.AutoscalingSchedule, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AutoscalingSchedule))
	})
	return ret, err
}

// AutoscalingSchedules returns an object that can list and get AutoscalingSchedules.
func (s *autoscalingScheduleLister) AutoscalingSchedules(namespace string) AutoscalingScheduleNamespaceLister {
	return autoscalingScheduleNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AutoscalingScheduleNamespaceLister helps list and get AutoscalingSchedules.
type AutoscalingScheduleNamespaceLister interface {
	// List lists all AutoscalingSchedules in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.AutoscalingSchedule, err error)
	// Get retrieves the AutoscalingSchedule from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.AutoscalingSchedule, error)
	AutoscalingScheduleNamespaceListerExpansion
}

// autoscalingScheduleNamespaceLister implements the AutoscalingScheduleNamespaceLister
// interface.
type autoscalingScheduleNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AutoscalingSchedules in the indexer for a given namespace.
func (s autoscalingScheduleNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AutoscalingSchedule, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AutoscalingSchedule))
	})
	return ret, err
}

// Get retrieves the AutoscalingSchedule from the indexer for a given namespace and name.
func (s autoscalingScheduleNamespaceLister) Get(name string) (*v1alpha1.AutoscalingSchedule, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("autoscalingschedule"), name)
	}
	return obj.(*v1alpha1.AutoscalingSchedule), nil
}
