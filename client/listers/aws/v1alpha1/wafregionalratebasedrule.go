/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// WafregionalRateBasedRuleLister helps list WafregionalRateBasedRules.
type WafregionalRateBasedRuleLister interface {
	// List lists all WafregionalRateBasedRules in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.WafregionalRateBasedRule, err error)
	// WafregionalRateBasedRules returns an object that can list and get WafregionalRateBasedRules.
	WafregionalRateBasedRules(namespace string) WafregionalRateBasedRuleNamespaceLister
	WafregionalRateBasedRuleListerExpansion
}

// wafregionalRateBasedRuleLister implements the WafregionalRateBasedRuleLister interface.
type wafregionalRateBasedRuleLister struct {
	indexer cache.Indexer
}

// NewWafregionalRateBasedRuleLister returns a new WafregionalRateBasedRuleLister.
func NewWafregionalRateBasedRuleLister(indexer cache.Indexer) WafregionalRateBasedRuleLister {
	return &wafregionalRateBasedRuleLister{indexer: indexer}
}

// List lists all WafregionalRateBasedRules in the indexer.
func (s *wafregionalRateBasedRuleLister) List(selector labels.Selector) (ret []*v1alpha1.WafregionalRateBasedRule, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.WafregionalRateBasedRule))
	})
	return ret, err
}

// WafregionalRateBasedRules returns an object that can list and get WafregionalRateBasedRules.
func (s *wafregionalRateBasedRuleLister) WafregionalRateBasedRules(namespace string) WafregionalRateBasedRuleNamespaceLister {
	return wafregionalRateBasedRuleNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// WafregionalRateBasedRuleNamespaceLister helps list and get WafregionalRateBasedRules.
type WafregionalRateBasedRuleNamespaceLister interface {
	// List lists all WafregionalRateBasedRules in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.WafregionalRateBasedRule, err error)
	// Get retrieves the WafregionalRateBasedRule from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.WafregionalRateBasedRule, error)
	WafregionalRateBasedRuleNamespaceListerExpansion
}

// wafregionalRateBasedRuleNamespaceLister implements the WafregionalRateBasedRuleNamespaceLister
// interface.
type wafregionalRateBasedRuleNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all WafregionalRateBasedRules in the indexer for a given namespace.
func (s wafregionalRateBasedRuleNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.WafregionalRateBasedRule, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.WafregionalRateBasedRule))
	})
	return ret, err
}

// Get retrieves the WafregionalRateBasedRule from the indexer for a given namespace and name.
func (s wafregionalRateBasedRuleNamespaceLister) Get(name string) (*v1alpha1.WafregionalRateBasedRule, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("wafregionalratebasedrule"), name)
	}
	return obj.(*v1alpha1.WafregionalRateBasedRule), nil
}
