/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"
)

// WafregionalSizeConstraintSetLister helps list WafregionalSizeConstraintSets.
type WafregionalSizeConstraintSetLister interface {
	// List lists all WafregionalSizeConstraintSets in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.WafregionalSizeConstraintSet, err error)
	// WafregionalSizeConstraintSets returns an object that can list and get WafregionalSizeConstraintSets.
	WafregionalSizeConstraintSets(namespace string) WafregionalSizeConstraintSetNamespaceLister
	WafregionalSizeConstraintSetListerExpansion
}

// wafregionalSizeConstraintSetLister implements the WafregionalSizeConstraintSetLister interface.
type wafregionalSizeConstraintSetLister struct {
	indexer cache.Indexer
}

// NewWafregionalSizeConstraintSetLister returns a new WafregionalSizeConstraintSetLister.
func NewWafregionalSizeConstraintSetLister(indexer cache.Indexer) WafregionalSizeConstraintSetLister {
	return &wafregionalSizeConstraintSetLister{indexer: indexer}
}

// List lists all WafregionalSizeConstraintSets in the indexer.
func (s *wafregionalSizeConstraintSetLister) List(selector labels.Selector) (ret []*v1alpha1.WafregionalSizeConstraintSet, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.WafregionalSizeConstraintSet))
	})
	return ret, err
}

// WafregionalSizeConstraintSets returns an object that can list and get WafregionalSizeConstraintSets.
func (s *wafregionalSizeConstraintSetLister) WafregionalSizeConstraintSets(namespace string) WafregionalSizeConstraintSetNamespaceLister {
	return wafregionalSizeConstraintSetNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// WafregionalSizeConstraintSetNamespaceLister helps list and get WafregionalSizeConstraintSets.
type WafregionalSizeConstraintSetNamespaceLister interface {
	// List lists all WafregionalSizeConstraintSets in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.WafregionalSizeConstraintSet, err error)
	// Get retrieves the WafregionalSizeConstraintSet from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.WafregionalSizeConstraintSet, error)
	WafregionalSizeConstraintSetNamespaceListerExpansion
}

// wafregionalSizeConstraintSetNamespaceLister implements the WafregionalSizeConstraintSetNamespaceLister
// interface.
type wafregionalSizeConstraintSetNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all WafregionalSizeConstraintSets in the indexer for a given namespace.
func (s wafregionalSizeConstraintSetNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.WafregionalSizeConstraintSet, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.WafregionalSizeConstraintSet))
	})
	return ret, err
}

// Get retrieves the WafregionalSizeConstraintSet from the indexer for a given namespace and name.
func (s wafregionalSizeConstraintSetNamespaceLister) Get(name string) (*v1alpha1.WafregionalSizeConstraintSet, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("wafregionalsizeconstraintset"), name)
	}
	return obj.(*v1alpha1.WafregionalSizeConstraintSet), nil
}
