/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// VpnGatewayRoutePropagationLister helps list VpnGatewayRoutePropagations.
type VpnGatewayRoutePropagationLister interface {
	// List lists all VpnGatewayRoutePropagations in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.VpnGatewayRoutePropagation, err error)
	// VpnGatewayRoutePropagations returns an object that can list and get VpnGatewayRoutePropagations.
	VpnGatewayRoutePropagations(namespace string) VpnGatewayRoutePropagationNamespaceLister
	VpnGatewayRoutePropagationListerExpansion
}

// vpnGatewayRoutePropagationLister implements the VpnGatewayRoutePropagationLister interface.
type vpnGatewayRoutePropagationLister struct {
	indexer cache.Indexer
}

// NewVpnGatewayRoutePropagationLister returns a new VpnGatewayRoutePropagationLister.
func NewVpnGatewayRoutePropagationLister(indexer cache.Indexer) VpnGatewayRoutePropagationLister {
	return &vpnGatewayRoutePropagationLister{indexer: indexer}
}

// List lists all VpnGatewayRoutePropagations in the indexer.
func (s *vpnGatewayRoutePropagationLister) List(selector labels.Selector) (ret []*v1alpha1.VpnGatewayRoutePropagation, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.VpnGatewayRoutePropagation))
	})
	return ret, err
}

// VpnGatewayRoutePropagations returns an object that can list and get VpnGatewayRoutePropagations.
func (s *vpnGatewayRoutePropagationLister) VpnGatewayRoutePropagations(namespace string) VpnGatewayRoutePropagationNamespaceLister {
	return vpnGatewayRoutePropagationNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// VpnGatewayRoutePropagationNamespaceLister helps list and get VpnGatewayRoutePropagations.
type VpnGatewayRoutePropagationNamespaceLister interface {
	// List lists all VpnGatewayRoutePropagations in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.VpnGatewayRoutePropagation, err error)
	// Get retrieves the VpnGatewayRoutePropagation from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.VpnGatewayRoutePropagation, error)
	VpnGatewayRoutePropagationNamespaceListerExpansion
}

// vpnGatewayRoutePropagationNamespaceLister implements the VpnGatewayRoutePropagationNamespaceLister
// interface.
type vpnGatewayRoutePropagationNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all VpnGatewayRoutePropagations in the indexer for a given namespace.
func (s vpnGatewayRoutePropagationNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.VpnGatewayRoutePropagation, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.VpnGatewayRoutePropagation))
	})
	return ret, err
}

// Get retrieves the VpnGatewayRoutePropagation from the indexer for a given namespace and name.
func (s vpnGatewayRoutePropagationNamespaceLister) Get(name string) (*v1alpha1.VpnGatewayRoutePropagation, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("vpngatewayroutepropagation"), name)
	}
	return obj.(*v1alpha1.VpnGatewayRoutePropagation), nil
}
