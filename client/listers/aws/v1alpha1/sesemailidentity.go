/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SesEmailIdentityLister helps list SesEmailIdentities.
type SesEmailIdentityLister interface {
	// List lists all SesEmailIdentities in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.SesEmailIdentity, err error)
	// SesEmailIdentities returns an object that can list and get SesEmailIdentities.
	SesEmailIdentities(namespace string) SesEmailIdentityNamespaceLister
	SesEmailIdentityListerExpansion
}

// sesEmailIdentityLister implements the SesEmailIdentityLister interface.
type sesEmailIdentityLister struct {
	indexer cache.Indexer
}

// NewSesEmailIdentityLister returns a new SesEmailIdentityLister.
func NewSesEmailIdentityLister(indexer cache.Indexer) SesEmailIdentityLister {
	return &sesEmailIdentityLister{indexer: indexer}
}

// List lists all SesEmailIdentities in the indexer.
func (s *sesEmailIdentityLister) List(selector labels.Selector) (ret []*v1alpha1.SesEmailIdentity, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SesEmailIdentity))
	})
	return ret, err
}

// SesEmailIdentities returns an object that can list and get SesEmailIdentities.
func (s *sesEmailIdentityLister) SesEmailIdentities(namespace string) SesEmailIdentityNamespaceLister {
	return sesEmailIdentityNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SesEmailIdentityNamespaceLister helps list and get SesEmailIdentities.
type SesEmailIdentityNamespaceLister interface {
	// List lists all SesEmailIdentities in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.SesEmailIdentity, err error)
	// Get retrieves the SesEmailIdentity from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.SesEmailIdentity, error)
	SesEmailIdentityNamespaceListerExpansion
}

// sesEmailIdentityNamespaceLister implements the SesEmailIdentityNamespaceLister
// interface.
type sesEmailIdentityNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SesEmailIdentities in the indexer for a given namespace.
func (s sesEmailIdentityNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SesEmailIdentity, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SesEmailIdentity))
	})
	return ret, err
}

// Get retrieves the SesEmailIdentity from the indexer for a given namespace and name.
func (s sesEmailIdentityNamespaceLister) Get(name string) (*v1alpha1.SesEmailIdentity, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("sesemailidentity"), name)
	}
	return obj.(*v1alpha1.SesEmailIdentity), nil
}
