/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// WafSizeConstraintSetLister helps list WafSizeConstraintSets.
type WafSizeConstraintSetLister interface {
	// List lists all WafSizeConstraintSets in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.WafSizeConstraintSet, err error)
	// WafSizeConstraintSets returns an object that can list and get WafSizeConstraintSets.
	WafSizeConstraintSets(namespace string) WafSizeConstraintSetNamespaceLister
	WafSizeConstraintSetListerExpansion
}

// wafSizeConstraintSetLister implements the WafSizeConstraintSetLister interface.
type wafSizeConstraintSetLister struct {
	indexer cache.Indexer
}

// NewWafSizeConstraintSetLister returns a new WafSizeConstraintSetLister.
func NewWafSizeConstraintSetLister(indexer cache.Indexer) WafSizeConstraintSetLister {
	return &wafSizeConstraintSetLister{indexer: indexer}
}

// List lists all WafSizeConstraintSets in the indexer.
func (s *wafSizeConstraintSetLister) List(selector labels.Selector) (ret []*v1alpha1.WafSizeConstraintSet, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.WafSizeConstraintSet))
	})
	return ret, err
}

// WafSizeConstraintSets returns an object that can list and get WafSizeConstraintSets.
func (s *wafSizeConstraintSetLister) WafSizeConstraintSets(namespace string) WafSizeConstraintSetNamespaceLister {
	return wafSizeConstraintSetNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// WafSizeConstraintSetNamespaceLister helps list and get WafSizeConstraintSets.
type WafSizeConstraintSetNamespaceLister interface {
	// List lists all WafSizeConstraintSets in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.WafSizeConstraintSet, err error)
	// Get retrieves the WafSizeConstraintSet from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.WafSizeConstraintSet, error)
	WafSizeConstraintSetNamespaceListerExpansion
}

// wafSizeConstraintSetNamespaceLister implements the WafSizeConstraintSetNamespaceLister
// interface.
type wafSizeConstraintSetNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all WafSizeConstraintSets in the indexer for a given namespace.
func (s wafSizeConstraintSetNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.WafSizeConstraintSet, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.WafSizeConstraintSet))
	})
	return ret, err
}

// Get retrieves the WafSizeConstraintSet from the indexer for a given namespace and name.
func (s wafSizeConstraintSetNamespaceLister) Get(name string) (*v1alpha1.WafSizeConstraintSet, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("wafsizeconstraintset"), name)
	}
	return obj.(*v1alpha1.WafSizeConstraintSet), nil
}
