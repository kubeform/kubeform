/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// EbsVolumeLister helps list EbsVolumes.
type EbsVolumeLister interface {
	// List lists all EbsVolumes in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.EbsVolume, err error)
	// EbsVolumes returns an object that can list and get EbsVolumes.
	EbsVolumes(namespace string) EbsVolumeNamespaceLister
	EbsVolumeListerExpansion
}

// ebsVolumeLister implements the EbsVolumeLister interface.
type ebsVolumeLister struct {
	indexer cache.Indexer
}

// NewEbsVolumeLister returns a new EbsVolumeLister.
func NewEbsVolumeLister(indexer cache.Indexer) EbsVolumeLister {
	return &ebsVolumeLister{indexer: indexer}
}

// List lists all EbsVolumes in the indexer.
func (s *ebsVolumeLister) List(selector labels.Selector) (ret []*v1alpha1.EbsVolume, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.EbsVolume))
	})
	return ret, err
}

// EbsVolumes returns an object that can list and get EbsVolumes.
func (s *ebsVolumeLister) EbsVolumes(namespace string) EbsVolumeNamespaceLister {
	return ebsVolumeNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// EbsVolumeNamespaceLister helps list and get EbsVolumes.
type EbsVolumeNamespaceLister interface {
	// List lists all EbsVolumes in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.EbsVolume, err error)
	// Get retrieves the EbsVolume from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.EbsVolume, error)
	EbsVolumeNamespaceListerExpansion
}

// ebsVolumeNamespaceLister implements the EbsVolumeNamespaceLister
// interface.
type ebsVolumeNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all EbsVolumes in the indexer for a given namespace.
func (s ebsVolumeNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.EbsVolume, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.EbsVolume))
	})
	return ret, err
}

// Get retrieves the EbsVolume from the indexer for a given namespace and name.
func (s ebsVolumeNamespaceLister) Get(name string) (*v1alpha1.EbsVolume, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("ebsvolume"), name)
	}
	return obj.(*v1alpha1.EbsVolume), nil
}
