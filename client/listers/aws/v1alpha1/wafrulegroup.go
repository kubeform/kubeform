/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// WafRuleGroupLister helps list WafRuleGroups.
type WafRuleGroupLister interface {
	// List lists all WafRuleGroups in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.WafRuleGroup, err error)
	// WafRuleGroups returns an object that can list and get WafRuleGroups.
	WafRuleGroups(namespace string) WafRuleGroupNamespaceLister
	WafRuleGroupListerExpansion
}

// wafRuleGroupLister implements the WafRuleGroupLister interface.
type wafRuleGroupLister struct {
	indexer cache.Indexer
}

// NewWafRuleGroupLister returns a new WafRuleGroupLister.
func NewWafRuleGroupLister(indexer cache.Indexer) WafRuleGroupLister {
	return &wafRuleGroupLister{indexer: indexer}
}

// List lists all WafRuleGroups in the indexer.
func (s *wafRuleGroupLister) List(selector labels.Selector) (ret []*v1alpha1.WafRuleGroup, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.WafRuleGroup))
	})
	return ret, err
}

// WafRuleGroups returns an object that can list and get WafRuleGroups.
func (s *wafRuleGroupLister) WafRuleGroups(namespace string) WafRuleGroupNamespaceLister {
	return wafRuleGroupNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// WafRuleGroupNamespaceLister helps list and get WafRuleGroups.
type WafRuleGroupNamespaceLister interface {
	// List lists all WafRuleGroups in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.WafRuleGroup, err error)
	// Get retrieves the WafRuleGroup from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.WafRuleGroup, error)
	WafRuleGroupNamespaceListerExpansion
}

// wafRuleGroupNamespaceLister implements the WafRuleGroupNamespaceLister
// interface.
type wafRuleGroupNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all WafRuleGroups in the indexer for a given namespace.
func (s wafRuleGroupNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.WafRuleGroup, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.WafRuleGroup))
	})
	return ret, err
}

// Get retrieves the WafRuleGroup from the indexer for a given namespace and name.
func (s wafRuleGroupNamespaceLister) Get(name string) (*v1alpha1.WafRuleGroup, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("wafrulegroup"), name)
	}
	return obj.(*v1alpha1.WafRuleGroup), nil
}
