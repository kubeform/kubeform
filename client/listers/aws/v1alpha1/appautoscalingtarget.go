/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AppautoscalingTargetLister helps list AppautoscalingTargets.
type AppautoscalingTargetLister interface {
	// List lists all AppautoscalingTargets in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.AppautoscalingTarget, err error)
	// AppautoscalingTargets returns an object that can list and get AppautoscalingTargets.
	AppautoscalingTargets(namespace string) AppautoscalingTargetNamespaceLister
	AppautoscalingTargetListerExpansion
}

// appautoscalingTargetLister implements the AppautoscalingTargetLister interface.
type appautoscalingTargetLister struct {
	indexer cache.Indexer
}

// NewAppautoscalingTargetLister returns a new AppautoscalingTargetLister.
func NewAppautoscalingTargetLister(indexer cache.Indexer) AppautoscalingTargetLister {
	return &appautoscalingTargetLister{indexer: indexer}
}

// List lists all AppautoscalingTargets in the indexer.
func (s *appautoscalingTargetLister) List(selector labels.Selector) (ret []*v1alpha1.AppautoscalingTarget, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AppautoscalingTarget))
	})
	return ret, err
}

// AppautoscalingTargets returns an object that can list and get AppautoscalingTargets.
func (s *appautoscalingTargetLister) AppautoscalingTargets(namespace string) AppautoscalingTargetNamespaceLister {
	return appautoscalingTargetNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AppautoscalingTargetNamespaceLister helps list and get AppautoscalingTargets.
type AppautoscalingTargetNamespaceLister interface {
	// List lists all AppautoscalingTargets in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.AppautoscalingTarget, err error)
	// Get retrieves the AppautoscalingTarget from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.AppautoscalingTarget, error)
	AppautoscalingTargetNamespaceListerExpansion
}

// appautoscalingTargetNamespaceLister implements the AppautoscalingTargetNamespaceLister
// interface.
type appautoscalingTargetNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AppautoscalingTargets in the indexer for a given namespace.
func (s appautoscalingTargetNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AppautoscalingTarget, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AppautoscalingTarget))
	})
	return ret, err
}

// Get retrieves the AppautoscalingTarget from the indexer for a given namespace and name.
func (s appautoscalingTargetNamespaceLister) Get(name string) (*v1alpha1.AppautoscalingTarget, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("appautoscalingtarget"), name)
	}
	return obj.(*v1alpha1.AppautoscalingTarget), nil
}
