/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// OpsworksHaproxyLayerLister helps list OpsworksHaproxyLayers.
type OpsworksHaproxyLayerLister interface {
	// List lists all OpsworksHaproxyLayers in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.OpsworksHaproxyLayer, err error)
	// OpsworksHaproxyLayers returns an object that can list and get OpsworksHaproxyLayers.
	OpsworksHaproxyLayers(namespace string) OpsworksHaproxyLayerNamespaceLister
	OpsworksHaproxyLayerListerExpansion
}

// opsworksHaproxyLayerLister implements the OpsworksHaproxyLayerLister interface.
type opsworksHaproxyLayerLister struct {
	indexer cache.Indexer
}

// NewOpsworksHaproxyLayerLister returns a new OpsworksHaproxyLayerLister.
func NewOpsworksHaproxyLayerLister(indexer cache.Indexer) OpsworksHaproxyLayerLister {
	return &opsworksHaproxyLayerLister{indexer: indexer}
}

// List lists all OpsworksHaproxyLayers in the indexer.
func (s *opsworksHaproxyLayerLister) List(selector labels.Selector) (ret []*v1alpha1.OpsworksHaproxyLayer, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.OpsworksHaproxyLayer))
	})
	return ret, err
}

// OpsworksHaproxyLayers returns an object that can list and get OpsworksHaproxyLayers.
func (s *opsworksHaproxyLayerLister) OpsworksHaproxyLayers(namespace string) OpsworksHaproxyLayerNamespaceLister {
	return opsworksHaproxyLayerNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// OpsworksHaproxyLayerNamespaceLister helps list and get OpsworksHaproxyLayers.
type OpsworksHaproxyLayerNamespaceLister interface {
	// List lists all OpsworksHaproxyLayers in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.OpsworksHaproxyLayer, err error)
	// Get retrieves the OpsworksHaproxyLayer from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.OpsworksHaproxyLayer, error)
	OpsworksHaproxyLayerNamespaceListerExpansion
}

// opsworksHaproxyLayerNamespaceLister implements the OpsworksHaproxyLayerNamespaceLister
// interface.
type opsworksHaproxyLayerNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all OpsworksHaproxyLayers in the indexer for a given namespace.
func (s opsworksHaproxyLayerNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.OpsworksHaproxyLayer, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.OpsworksHaproxyLayer))
	})
	return ret, err
}

// Get retrieves the OpsworksHaproxyLayer from the indexer for a given namespace and name.
func (s opsworksHaproxyLayerNamespaceLister) Get(name string) (*v1alpha1.OpsworksHaproxyLayer, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("opsworkshaproxylayer"), name)
	}
	return obj.(*v1alpha1.OpsworksHaproxyLayer), nil
}
