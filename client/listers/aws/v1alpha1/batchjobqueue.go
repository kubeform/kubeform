/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// BatchJobQueueLister helps list BatchJobQueues.
type BatchJobQueueLister interface {
	// List lists all BatchJobQueues in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.BatchJobQueue, err error)
	// BatchJobQueues returns an object that can list and get BatchJobQueues.
	BatchJobQueues(namespace string) BatchJobQueueNamespaceLister
	BatchJobQueueListerExpansion
}

// batchJobQueueLister implements the BatchJobQueueLister interface.
type batchJobQueueLister struct {
	indexer cache.Indexer
}

// NewBatchJobQueueLister returns a new BatchJobQueueLister.
func NewBatchJobQueueLister(indexer cache.Indexer) BatchJobQueueLister {
	return &batchJobQueueLister{indexer: indexer}
}

// List lists all BatchJobQueues in the indexer.
func (s *batchJobQueueLister) List(selector labels.Selector) (ret []*v1alpha1.BatchJobQueue, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.BatchJobQueue))
	})
	return ret, err
}

// BatchJobQueues returns an object that can list and get BatchJobQueues.
func (s *batchJobQueueLister) BatchJobQueues(namespace string) BatchJobQueueNamespaceLister {
	return batchJobQueueNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// BatchJobQueueNamespaceLister helps list and get BatchJobQueues.
type BatchJobQueueNamespaceLister interface {
	// List lists all BatchJobQueues in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.BatchJobQueue, err error)
	// Get retrieves the BatchJobQueue from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.BatchJobQueue, error)
	BatchJobQueueNamespaceListerExpansion
}

// batchJobQueueNamespaceLister implements the BatchJobQueueNamespaceLister
// interface.
type batchJobQueueNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all BatchJobQueues in the indexer for a given namespace.
func (s batchJobQueueNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.BatchJobQueue, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.BatchJobQueue))
	})
	return ret, err
}

// Get retrieves the BatchJobQueue from the indexer for a given namespace and name.
func (s batchJobQueueNamespaceLister) Get(name string) (*v1alpha1.BatchJobQueue, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("batchjobqueue"), name)
	}
	return obj.(*v1alpha1.BatchJobQueue), nil
}
