/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CloudwatchLogMetricFilterLister helps list CloudwatchLogMetricFilters.
type CloudwatchLogMetricFilterLister interface {
	// List lists all CloudwatchLogMetricFilters in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.CloudwatchLogMetricFilter, err error)
	// CloudwatchLogMetricFilters returns an object that can list and get CloudwatchLogMetricFilters.
	CloudwatchLogMetricFilters(namespace string) CloudwatchLogMetricFilterNamespaceLister
	CloudwatchLogMetricFilterListerExpansion
}

// cloudwatchLogMetricFilterLister implements the CloudwatchLogMetricFilterLister interface.
type cloudwatchLogMetricFilterLister struct {
	indexer cache.Indexer
}

// NewCloudwatchLogMetricFilterLister returns a new CloudwatchLogMetricFilterLister.
func NewCloudwatchLogMetricFilterLister(indexer cache.Indexer) CloudwatchLogMetricFilterLister {
	return &cloudwatchLogMetricFilterLister{indexer: indexer}
}

// List lists all CloudwatchLogMetricFilters in the indexer.
func (s *cloudwatchLogMetricFilterLister) List(selector labels.Selector) (ret []*v1alpha1.CloudwatchLogMetricFilter, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CloudwatchLogMetricFilter))
	})
	return ret, err
}

// CloudwatchLogMetricFilters returns an object that can list and get CloudwatchLogMetricFilters.
func (s *cloudwatchLogMetricFilterLister) CloudwatchLogMetricFilters(namespace string) CloudwatchLogMetricFilterNamespaceLister {
	return cloudwatchLogMetricFilterNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CloudwatchLogMetricFilterNamespaceLister helps list and get CloudwatchLogMetricFilters.
type CloudwatchLogMetricFilterNamespaceLister interface {
	// List lists all CloudwatchLogMetricFilters in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.CloudwatchLogMetricFilter, err error)
	// Get retrieves the CloudwatchLogMetricFilter from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.CloudwatchLogMetricFilter, error)
	CloudwatchLogMetricFilterNamespaceListerExpansion
}

// cloudwatchLogMetricFilterNamespaceLister implements the CloudwatchLogMetricFilterNamespaceLister
// interface.
type cloudwatchLogMetricFilterNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CloudwatchLogMetricFilters in the indexer for a given namespace.
func (s cloudwatchLogMetricFilterNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.CloudwatchLogMetricFilter, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CloudwatchLogMetricFilter))
	})
	return ret, err
}

// Get retrieves the CloudwatchLogMetricFilter from the indexer for a given namespace and name.
func (s cloudwatchLogMetricFilterNamespaceLister) Get(name string) (*v1alpha1.CloudwatchLogMetricFilter, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("cloudwatchlogmetricfilter"), name)
	}
	return obj.(*v1alpha1.CloudwatchLogMetricFilter), nil
}
