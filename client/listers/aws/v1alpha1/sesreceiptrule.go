/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SesReceiptRuleLister helps list SesReceiptRules.
type SesReceiptRuleLister interface {
	// List lists all SesReceiptRules in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.SesReceiptRule, err error)
	// SesReceiptRules returns an object that can list and get SesReceiptRules.
	SesReceiptRules(namespace string) SesReceiptRuleNamespaceLister
	SesReceiptRuleListerExpansion
}

// sesReceiptRuleLister implements the SesReceiptRuleLister interface.
type sesReceiptRuleLister struct {
	indexer cache.Indexer
}

// NewSesReceiptRuleLister returns a new SesReceiptRuleLister.
func NewSesReceiptRuleLister(indexer cache.Indexer) SesReceiptRuleLister {
	return &sesReceiptRuleLister{indexer: indexer}
}

// List lists all SesReceiptRules in the indexer.
func (s *sesReceiptRuleLister) List(selector labels.Selector) (ret []*v1alpha1.SesReceiptRule, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SesReceiptRule))
	})
	return ret, err
}

// SesReceiptRules returns an object that can list and get SesReceiptRules.
func (s *sesReceiptRuleLister) SesReceiptRules(namespace string) SesReceiptRuleNamespaceLister {
	return sesReceiptRuleNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SesReceiptRuleNamespaceLister helps list and get SesReceiptRules.
type SesReceiptRuleNamespaceLister interface {
	// List lists all SesReceiptRules in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.SesReceiptRule, err error)
	// Get retrieves the SesReceiptRule from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.SesReceiptRule, error)
	SesReceiptRuleNamespaceListerExpansion
}

// sesReceiptRuleNamespaceLister implements the SesReceiptRuleNamespaceLister
// interface.
type sesReceiptRuleNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SesReceiptRules in the indexer for a given namespace.
func (s sesReceiptRuleNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SesReceiptRule, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SesReceiptRule))
	})
	return ret, err
}

// Get retrieves the SesReceiptRule from the indexer for a given namespace and name.
func (s sesReceiptRuleNamespaceLister) Get(name string) (*v1alpha1.SesReceiptRule, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("sesreceiptrule"), name)
	}
	return obj.(*v1alpha1.SesReceiptRule), nil
}
