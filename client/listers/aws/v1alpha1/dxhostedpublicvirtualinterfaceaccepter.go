/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"
)

// DxHostedPublicVirtualInterfaceAccepterLister helps list DxHostedPublicVirtualInterfaceAccepters.
type DxHostedPublicVirtualInterfaceAccepterLister interface {
	// List lists all DxHostedPublicVirtualInterfaceAccepters in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.DxHostedPublicVirtualInterfaceAccepter, err error)
	// DxHostedPublicVirtualInterfaceAccepters returns an object that can list and get DxHostedPublicVirtualInterfaceAccepters.
	DxHostedPublicVirtualInterfaceAccepters(namespace string) DxHostedPublicVirtualInterfaceAccepterNamespaceLister
	DxHostedPublicVirtualInterfaceAccepterListerExpansion
}

// dxHostedPublicVirtualInterfaceAccepterLister implements the DxHostedPublicVirtualInterfaceAccepterLister interface.
type dxHostedPublicVirtualInterfaceAccepterLister struct {
	indexer cache.Indexer
}

// NewDxHostedPublicVirtualInterfaceAccepterLister returns a new DxHostedPublicVirtualInterfaceAccepterLister.
func NewDxHostedPublicVirtualInterfaceAccepterLister(indexer cache.Indexer) DxHostedPublicVirtualInterfaceAccepterLister {
	return &dxHostedPublicVirtualInterfaceAccepterLister{indexer: indexer}
}

// List lists all DxHostedPublicVirtualInterfaceAccepters in the indexer.
func (s *dxHostedPublicVirtualInterfaceAccepterLister) List(selector labels.Selector) (ret []*v1alpha1.DxHostedPublicVirtualInterfaceAccepter, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DxHostedPublicVirtualInterfaceAccepter))
	})
	return ret, err
}

// DxHostedPublicVirtualInterfaceAccepters returns an object that can list and get DxHostedPublicVirtualInterfaceAccepters.
func (s *dxHostedPublicVirtualInterfaceAccepterLister) DxHostedPublicVirtualInterfaceAccepters(namespace string) DxHostedPublicVirtualInterfaceAccepterNamespaceLister {
	return dxHostedPublicVirtualInterfaceAccepterNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DxHostedPublicVirtualInterfaceAccepterNamespaceLister helps list and get DxHostedPublicVirtualInterfaceAccepters.
type DxHostedPublicVirtualInterfaceAccepterNamespaceLister interface {
	// List lists all DxHostedPublicVirtualInterfaceAccepters in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.DxHostedPublicVirtualInterfaceAccepter, err error)
	// Get retrieves the DxHostedPublicVirtualInterfaceAccepter from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.DxHostedPublicVirtualInterfaceAccepter, error)
	DxHostedPublicVirtualInterfaceAccepterNamespaceListerExpansion
}

// dxHostedPublicVirtualInterfaceAccepterNamespaceLister implements the DxHostedPublicVirtualInterfaceAccepterNamespaceLister
// interface.
type dxHostedPublicVirtualInterfaceAccepterNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DxHostedPublicVirtualInterfaceAccepters in the indexer for a given namespace.
func (s dxHostedPublicVirtualInterfaceAccepterNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.DxHostedPublicVirtualInterfaceAccepter, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DxHostedPublicVirtualInterfaceAccepter))
	})
	return ret, err
}

// Get retrieves the DxHostedPublicVirtualInterfaceAccepter from the indexer for a given namespace and name.
func (s dxHostedPublicVirtualInterfaceAccepterNamespaceLister) Get(name string) (*v1alpha1.DxHostedPublicVirtualInterfaceAccepter, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("dxhostedpublicvirtualinterfaceaccepter"), name)
	}
	return obj.(*v1alpha1.DxHostedPublicVirtualInterfaceAccepter), nil
}
