/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ConfigOrganizationManagedRuleLister helps list ConfigOrganizationManagedRules.
type ConfigOrganizationManagedRuleLister interface {
	// List lists all ConfigOrganizationManagedRules in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ConfigOrganizationManagedRule, err error)
	// ConfigOrganizationManagedRules returns an object that can list and get ConfigOrganizationManagedRules.
	ConfigOrganizationManagedRules(namespace string) ConfigOrganizationManagedRuleNamespaceLister
	ConfigOrganizationManagedRuleListerExpansion
}

// configOrganizationManagedRuleLister implements the ConfigOrganizationManagedRuleLister interface.
type configOrganizationManagedRuleLister struct {
	indexer cache.Indexer
}

// NewConfigOrganizationManagedRuleLister returns a new ConfigOrganizationManagedRuleLister.
func NewConfigOrganizationManagedRuleLister(indexer cache.Indexer) ConfigOrganizationManagedRuleLister {
	return &configOrganizationManagedRuleLister{indexer: indexer}
}

// List lists all ConfigOrganizationManagedRules in the indexer.
func (s *configOrganizationManagedRuleLister) List(selector labels.Selector) (ret []*v1alpha1.ConfigOrganizationManagedRule, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ConfigOrganizationManagedRule))
	})
	return ret, err
}

// ConfigOrganizationManagedRules returns an object that can list and get ConfigOrganizationManagedRules.
func (s *configOrganizationManagedRuleLister) ConfigOrganizationManagedRules(namespace string) ConfigOrganizationManagedRuleNamespaceLister {
	return configOrganizationManagedRuleNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ConfigOrganizationManagedRuleNamespaceLister helps list and get ConfigOrganizationManagedRules.
type ConfigOrganizationManagedRuleNamespaceLister interface {
	// List lists all ConfigOrganizationManagedRules in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ConfigOrganizationManagedRule, err error)
	// Get retrieves the ConfigOrganizationManagedRule from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ConfigOrganizationManagedRule, error)
	ConfigOrganizationManagedRuleNamespaceListerExpansion
}

// configOrganizationManagedRuleNamespaceLister implements the ConfigOrganizationManagedRuleNamespaceLister
// interface.
type configOrganizationManagedRuleNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ConfigOrganizationManagedRules in the indexer for a given namespace.
func (s configOrganizationManagedRuleNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ConfigOrganizationManagedRule, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ConfigOrganizationManagedRule))
	})
	return ret, err
}

// Get retrieves the ConfigOrganizationManagedRule from the indexer for a given namespace and name.
func (s configOrganizationManagedRuleNamespaceLister) Get(name string) (*v1alpha1.ConfigOrganizationManagedRule, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("configorganizationmanagedrule"), name)
	}
	return obj.(*v1alpha1.ConfigOrganizationManagedRule), nil
}
