/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"
)

// SsmDocumentLister helps list SsmDocuments.
type SsmDocumentLister interface {
	// List lists all SsmDocuments in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.SsmDocument, err error)
	// SsmDocuments returns an object that can list and get SsmDocuments.
	SsmDocuments(namespace string) SsmDocumentNamespaceLister
	SsmDocumentListerExpansion
}

// ssmDocumentLister implements the SsmDocumentLister interface.
type ssmDocumentLister struct {
	indexer cache.Indexer
}

// NewSsmDocumentLister returns a new SsmDocumentLister.
func NewSsmDocumentLister(indexer cache.Indexer) SsmDocumentLister {
	return &ssmDocumentLister{indexer: indexer}
}

// List lists all SsmDocuments in the indexer.
func (s *ssmDocumentLister) List(selector labels.Selector) (ret []*v1alpha1.SsmDocument, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SsmDocument))
	})
	return ret, err
}

// SsmDocuments returns an object that can list and get SsmDocuments.
func (s *ssmDocumentLister) SsmDocuments(namespace string) SsmDocumentNamespaceLister {
	return ssmDocumentNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SsmDocumentNamespaceLister helps list and get SsmDocuments.
type SsmDocumentNamespaceLister interface {
	// List lists all SsmDocuments in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.SsmDocument, err error)
	// Get retrieves the SsmDocument from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.SsmDocument, error)
	SsmDocumentNamespaceListerExpansion
}

// ssmDocumentNamespaceLister implements the SsmDocumentNamespaceLister
// interface.
type ssmDocumentNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SsmDocuments in the indexer for a given namespace.
func (s ssmDocumentNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SsmDocument, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SsmDocument))
	})
	return ret, err
}

// Get retrieves the SsmDocument from the indexer for a given namespace and name.
func (s ssmDocumentNamespaceLister) Get(name string) (*v1alpha1.SsmDocument, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("ssmdocument"), name)
	}
	return obj.(*v1alpha1.SsmDocument), nil
}
