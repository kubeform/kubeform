/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// DxHostedPublicVirtualInterfaceLister helps list DxHostedPublicVirtualInterfaces.
type DxHostedPublicVirtualInterfaceLister interface {
	// List lists all DxHostedPublicVirtualInterfaces in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.DxHostedPublicVirtualInterface, err error)
	// DxHostedPublicVirtualInterfaces returns an object that can list and get DxHostedPublicVirtualInterfaces.
	DxHostedPublicVirtualInterfaces(namespace string) DxHostedPublicVirtualInterfaceNamespaceLister
	DxHostedPublicVirtualInterfaceListerExpansion
}

// dxHostedPublicVirtualInterfaceLister implements the DxHostedPublicVirtualInterfaceLister interface.
type dxHostedPublicVirtualInterfaceLister struct {
	indexer cache.Indexer
}

// NewDxHostedPublicVirtualInterfaceLister returns a new DxHostedPublicVirtualInterfaceLister.
func NewDxHostedPublicVirtualInterfaceLister(indexer cache.Indexer) DxHostedPublicVirtualInterfaceLister {
	return &dxHostedPublicVirtualInterfaceLister{indexer: indexer}
}

// List lists all DxHostedPublicVirtualInterfaces in the indexer.
func (s *dxHostedPublicVirtualInterfaceLister) List(selector labels.Selector) (ret []*v1alpha1.DxHostedPublicVirtualInterface, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DxHostedPublicVirtualInterface))
	})
	return ret, err
}

// DxHostedPublicVirtualInterfaces returns an object that can list and get DxHostedPublicVirtualInterfaces.
func (s *dxHostedPublicVirtualInterfaceLister) DxHostedPublicVirtualInterfaces(namespace string) DxHostedPublicVirtualInterfaceNamespaceLister {
	return dxHostedPublicVirtualInterfaceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DxHostedPublicVirtualInterfaceNamespaceLister helps list and get DxHostedPublicVirtualInterfaces.
type DxHostedPublicVirtualInterfaceNamespaceLister interface {
	// List lists all DxHostedPublicVirtualInterfaces in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.DxHostedPublicVirtualInterface, err error)
	// Get retrieves the DxHostedPublicVirtualInterface from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.DxHostedPublicVirtualInterface, error)
	DxHostedPublicVirtualInterfaceNamespaceListerExpansion
}

// dxHostedPublicVirtualInterfaceNamespaceLister implements the DxHostedPublicVirtualInterfaceNamespaceLister
// interface.
type dxHostedPublicVirtualInterfaceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DxHostedPublicVirtualInterfaces in the indexer for a given namespace.
func (s dxHostedPublicVirtualInterfaceNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.DxHostedPublicVirtualInterface, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DxHostedPublicVirtualInterface))
	})
	return ret, err
}

// Get retrieves the DxHostedPublicVirtualInterface from the indexer for a given namespace and name.
func (s dxHostedPublicVirtualInterfaceNamespaceLister) Get(name string) (*v1alpha1.DxHostedPublicVirtualInterface, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("dxhostedpublicvirtualinterface"), name)
	}
	return obj.(*v1alpha1.DxHostedPublicVirtualInterface), nil
}
