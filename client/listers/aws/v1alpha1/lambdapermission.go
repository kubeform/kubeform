/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"
)

// LambdaPermissionLister helps list LambdaPermissions.
type LambdaPermissionLister interface {
	// List lists all LambdaPermissions in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.LambdaPermission, err error)
	// LambdaPermissions returns an object that can list and get LambdaPermissions.
	LambdaPermissions(namespace string) LambdaPermissionNamespaceLister
	LambdaPermissionListerExpansion
}

// lambdaPermissionLister implements the LambdaPermissionLister interface.
type lambdaPermissionLister struct {
	indexer cache.Indexer
}

// NewLambdaPermissionLister returns a new LambdaPermissionLister.
func NewLambdaPermissionLister(indexer cache.Indexer) LambdaPermissionLister {
	return &lambdaPermissionLister{indexer: indexer}
}

// List lists all LambdaPermissions in the indexer.
func (s *lambdaPermissionLister) List(selector labels.Selector) (ret []*v1alpha1.LambdaPermission, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.LambdaPermission))
	})
	return ret, err
}

// LambdaPermissions returns an object that can list and get LambdaPermissions.
func (s *lambdaPermissionLister) LambdaPermissions(namespace string) LambdaPermissionNamespaceLister {
	return lambdaPermissionNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// LambdaPermissionNamespaceLister helps list and get LambdaPermissions.
type LambdaPermissionNamespaceLister interface {
	// List lists all LambdaPermissions in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.LambdaPermission, err error)
	// Get retrieves the LambdaPermission from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.LambdaPermission, error)
	LambdaPermissionNamespaceListerExpansion
}

// lambdaPermissionNamespaceLister implements the LambdaPermissionNamespaceLister
// interface.
type lambdaPermissionNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all LambdaPermissions in the indexer for a given namespace.
func (s lambdaPermissionNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.LambdaPermission, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.LambdaPermission))
	})
	return ret, err
}

// Get retrieves the LambdaPermission from the indexer for a given namespace and name.
func (s lambdaPermissionNamespaceLister) Get(name string) (*v1alpha1.LambdaPermission, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("lambdapermission"), name)
	}
	return obj.(*v1alpha1.LambdaPermission), nil
}
