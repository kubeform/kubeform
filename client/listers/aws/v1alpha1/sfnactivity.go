/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SfnActivityLister helps list SfnActivities.
type SfnActivityLister interface {
	// List lists all SfnActivities in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.SfnActivity, err error)
	// SfnActivities returns an object that can list and get SfnActivities.
	SfnActivities(namespace string) SfnActivityNamespaceLister
	SfnActivityListerExpansion
}

// sfnActivityLister implements the SfnActivityLister interface.
type sfnActivityLister struct {
	indexer cache.Indexer
}

// NewSfnActivityLister returns a new SfnActivityLister.
func NewSfnActivityLister(indexer cache.Indexer) SfnActivityLister {
	return &sfnActivityLister{indexer: indexer}
}

// List lists all SfnActivities in the indexer.
func (s *sfnActivityLister) List(selector labels.Selector) (ret []*v1alpha1.SfnActivity, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SfnActivity))
	})
	return ret, err
}

// SfnActivities returns an object that can list and get SfnActivities.
func (s *sfnActivityLister) SfnActivities(namespace string) SfnActivityNamespaceLister {
	return sfnActivityNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SfnActivityNamespaceLister helps list and get SfnActivities.
type SfnActivityNamespaceLister interface {
	// List lists all SfnActivities in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.SfnActivity, err error)
	// Get retrieves the SfnActivity from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.SfnActivity, error)
	SfnActivityNamespaceListerExpansion
}

// sfnActivityNamespaceLister implements the SfnActivityNamespaceLister
// interface.
type sfnActivityNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SfnActivities in the indexer for a given namespace.
func (s sfnActivityNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SfnActivity, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SfnActivity))
	})
	return ret, err
}

// Get retrieves the SfnActivity from the indexer for a given namespace and name.
func (s sfnActivityNamespaceLister) Get(name string) (*v1alpha1.SfnActivity, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("sfnactivity"), name)
	}
	return obj.(*v1alpha1.SfnActivity), nil
}
