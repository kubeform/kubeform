/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"
)

// RdsClusterParameterGroupLister helps list RdsClusterParameterGroups.
type RdsClusterParameterGroupLister interface {
	// List lists all RdsClusterParameterGroups in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.RdsClusterParameterGroup, err error)
	// RdsClusterParameterGroups returns an object that can list and get RdsClusterParameterGroups.
	RdsClusterParameterGroups(namespace string) RdsClusterParameterGroupNamespaceLister
	RdsClusterParameterGroupListerExpansion
}

// rdsClusterParameterGroupLister implements the RdsClusterParameterGroupLister interface.
type rdsClusterParameterGroupLister struct {
	indexer cache.Indexer
}

// NewRdsClusterParameterGroupLister returns a new RdsClusterParameterGroupLister.
func NewRdsClusterParameterGroupLister(indexer cache.Indexer) RdsClusterParameterGroupLister {
	return &rdsClusterParameterGroupLister{indexer: indexer}
}

// List lists all RdsClusterParameterGroups in the indexer.
func (s *rdsClusterParameterGroupLister) List(selector labels.Selector) (ret []*v1alpha1.RdsClusterParameterGroup, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RdsClusterParameterGroup))
	})
	return ret, err
}

// RdsClusterParameterGroups returns an object that can list and get RdsClusterParameterGroups.
func (s *rdsClusterParameterGroupLister) RdsClusterParameterGroups(namespace string) RdsClusterParameterGroupNamespaceLister {
	return rdsClusterParameterGroupNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// RdsClusterParameterGroupNamespaceLister helps list and get RdsClusterParameterGroups.
type RdsClusterParameterGroupNamespaceLister interface {
	// List lists all RdsClusterParameterGroups in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.RdsClusterParameterGroup, err error)
	// Get retrieves the RdsClusterParameterGroup from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.RdsClusterParameterGroup, error)
	RdsClusterParameterGroupNamespaceListerExpansion
}

// rdsClusterParameterGroupNamespaceLister implements the RdsClusterParameterGroupNamespaceLister
// interface.
type rdsClusterParameterGroupNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all RdsClusterParameterGroups in the indexer for a given namespace.
func (s rdsClusterParameterGroupNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.RdsClusterParameterGroup, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RdsClusterParameterGroup))
	})
	return ret, err
}

// Get retrieves the RdsClusterParameterGroup from the indexer for a given namespace and name.
func (s rdsClusterParameterGroupNamespaceLister) Get(name string) (*v1alpha1.RdsClusterParameterGroup, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("rdsclusterparametergroup"), name)
	}
	return obj.(*v1alpha1.RdsClusterParameterGroup), nil
}
