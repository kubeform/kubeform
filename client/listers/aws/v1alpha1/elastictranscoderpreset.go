/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"
)

// ElastictranscoderPresetLister helps list ElastictranscoderPresets.
type ElastictranscoderPresetLister interface {
	// List lists all ElastictranscoderPresets in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ElastictranscoderPreset, err error)
	// ElastictranscoderPresets returns an object that can list and get ElastictranscoderPresets.
	ElastictranscoderPresets(namespace string) ElastictranscoderPresetNamespaceLister
	ElastictranscoderPresetListerExpansion
}

// elastictranscoderPresetLister implements the ElastictranscoderPresetLister interface.
type elastictranscoderPresetLister struct {
	indexer cache.Indexer
}

// NewElastictranscoderPresetLister returns a new ElastictranscoderPresetLister.
func NewElastictranscoderPresetLister(indexer cache.Indexer) ElastictranscoderPresetLister {
	return &elastictranscoderPresetLister{indexer: indexer}
}

// List lists all ElastictranscoderPresets in the indexer.
func (s *elastictranscoderPresetLister) List(selector labels.Selector) (ret []*v1alpha1.ElastictranscoderPreset, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ElastictranscoderPreset))
	})
	return ret, err
}

// ElastictranscoderPresets returns an object that can list and get ElastictranscoderPresets.
func (s *elastictranscoderPresetLister) ElastictranscoderPresets(namespace string) ElastictranscoderPresetNamespaceLister {
	return elastictranscoderPresetNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ElastictranscoderPresetNamespaceLister helps list and get ElastictranscoderPresets.
type ElastictranscoderPresetNamespaceLister interface {
	// List lists all ElastictranscoderPresets in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ElastictranscoderPreset, err error)
	// Get retrieves the ElastictranscoderPreset from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ElastictranscoderPreset, error)
	ElastictranscoderPresetNamespaceListerExpansion
}

// elastictranscoderPresetNamespaceLister implements the ElastictranscoderPresetNamespaceLister
// interface.
type elastictranscoderPresetNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ElastictranscoderPresets in the indexer for a given namespace.
func (s elastictranscoderPresetNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ElastictranscoderPreset, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ElastictranscoderPreset))
	})
	return ret, err
}

// Get retrieves the ElastictranscoderPreset from the indexer for a given namespace and name.
func (s elastictranscoderPresetNamespaceLister) Get(name string) (*v1alpha1.ElastictranscoderPreset, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("elastictranscoderpreset"), name)
	}
	return obj.(*v1alpha1.ElastictranscoderPreset), nil
}
