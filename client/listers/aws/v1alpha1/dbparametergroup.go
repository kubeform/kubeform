/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"
)

// DbParameterGroupLister helps list DbParameterGroups.
type DbParameterGroupLister interface {
	// List lists all DbParameterGroups in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.DbParameterGroup, err error)
	// DbParameterGroups returns an object that can list and get DbParameterGroups.
	DbParameterGroups(namespace string) DbParameterGroupNamespaceLister
	DbParameterGroupListerExpansion
}

// dbParameterGroupLister implements the DbParameterGroupLister interface.
type dbParameterGroupLister struct {
	indexer cache.Indexer
}

// NewDbParameterGroupLister returns a new DbParameterGroupLister.
func NewDbParameterGroupLister(indexer cache.Indexer) DbParameterGroupLister {
	return &dbParameterGroupLister{indexer: indexer}
}

// List lists all DbParameterGroups in the indexer.
func (s *dbParameterGroupLister) List(selector labels.Selector) (ret []*v1alpha1.DbParameterGroup, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DbParameterGroup))
	})
	return ret, err
}

// DbParameterGroups returns an object that can list and get DbParameterGroups.
func (s *dbParameterGroupLister) DbParameterGroups(namespace string) DbParameterGroupNamespaceLister {
	return dbParameterGroupNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DbParameterGroupNamespaceLister helps list and get DbParameterGroups.
type DbParameterGroupNamespaceLister interface {
	// List lists all DbParameterGroups in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.DbParameterGroup, err error)
	// Get retrieves the DbParameterGroup from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.DbParameterGroup, error)
	DbParameterGroupNamespaceListerExpansion
}

// dbParameterGroupNamespaceLister implements the DbParameterGroupNamespaceLister
// interface.
type dbParameterGroupNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DbParameterGroups in the indexer for a given namespace.
func (s dbParameterGroupNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.DbParameterGroup, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DbParameterGroup))
	})
	return ret, err
}

// Get retrieves the DbParameterGroup from the indexer for a given namespace and name.
func (s dbParameterGroupNamespaceLister) Get(name string) (*v1alpha1.DbParameterGroup, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("dbparametergroup"), name)
	}
	return obj.(*v1alpha1.DbParameterGroup), nil
}
