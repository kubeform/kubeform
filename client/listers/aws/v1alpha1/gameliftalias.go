/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// GameliftAliasLister helps list GameliftAliases.
type GameliftAliasLister interface {
	// List lists all GameliftAliases in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.GameliftAlias, err error)
	// GameliftAliases returns an object that can list and get GameliftAliases.
	GameliftAliases(namespace string) GameliftAliasNamespaceLister
	GameliftAliasListerExpansion
}

// gameliftAliasLister implements the GameliftAliasLister interface.
type gameliftAliasLister struct {
	indexer cache.Indexer
}

// NewGameliftAliasLister returns a new GameliftAliasLister.
func NewGameliftAliasLister(indexer cache.Indexer) GameliftAliasLister {
	return &gameliftAliasLister{indexer: indexer}
}

// List lists all GameliftAliases in the indexer.
func (s *gameliftAliasLister) List(selector labels.Selector) (ret []*v1alpha1.GameliftAlias, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.GameliftAlias))
	})
	return ret, err
}

// GameliftAliases returns an object that can list and get GameliftAliases.
func (s *gameliftAliasLister) GameliftAliases(namespace string) GameliftAliasNamespaceLister {
	return gameliftAliasNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// GameliftAliasNamespaceLister helps list and get GameliftAliases.
type GameliftAliasNamespaceLister interface {
	// List lists all GameliftAliases in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.GameliftAlias, err error)
	// Get retrieves the GameliftAlias from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.GameliftAlias, error)
	GameliftAliasNamespaceListerExpansion
}

// gameliftAliasNamespaceLister implements the GameliftAliasNamespaceLister
// interface.
type gameliftAliasNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all GameliftAliases in the indexer for a given namespace.
func (s gameliftAliasNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.GameliftAlias, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.GameliftAlias))
	})
	return ret, err
}

// Get retrieves the GameliftAlias from the indexer for a given namespace and name.
func (s gameliftAliasNamespaceLister) Get(name string) (*v1alpha1.GameliftAlias, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("gameliftalias"), name)
	}
	return obj.(*v1alpha1.GameliftAlias), nil
}
