/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ConfigConfigRuleLister helps list ConfigConfigRules.
type ConfigConfigRuleLister interface {
	// List lists all ConfigConfigRules in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ConfigConfigRule, err error)
	// ConfigConfigRules returns an object that can list and get ConfigConfigRules.
	ConfigConfigRules(namespace string) ConfigConfigRuleNamespaceLister
	ConfigConfigRuleListerExpansion
}

// configConfigRuleLister implements the ConfigConfigRuleLister interface.
type configConfigRuleLister struct {
	indexer cache.Indexer
}

// NewConfigConfigRuleLister returns a new ConfigConfigRuleLister.
func NewConfigConfigRuleLister(indexer cache.Indexer) ConfigConfigRuleLister {
	return &configConfigRuleLister{indexer: indexer}
}

// List lists all ConfigConfigRules in the indexer.
func (s *configConfigRuleLister) List(selector labels.Selector) (ret []*v1alpha1.ConfigConfigRule, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ConfigConfigRule))
	})
	return ret, err
}

// ConfigConfigRules returns an object that can list and get ConfigConfigRules.
func (s *configConfigRuleLister) ConfigConfigRules(namespace string) ConfigConfigRuleNamespaceLister {
	return configConfigRuleNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ConfigConfigRuleNamespaceLister helps list and get ConfigConfigRules.
type ConfigConfigRuleNamespaceLister interface {
	// List lists all ConfigConfigRules in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ConfigConfigRule, err error)
	// Get retrieves the ConfigConfigRule from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ConfigConfigRule, error)
	ConfigConfigRuleNamespaceListerExpansion
}

// configConfigRuleNamespaceLister implements the ConfigConfigRuleNamespaceLister
// interface.
type configConfigRuleNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ConfigConfigRules in the indexer for a given namespace.
func (s configConfigRuleNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ConfigConfigRule, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ConfigConfigRule))
	})
	return ret, err
}

// Get retrieves the ConfigConfigRule from the indexer for a given namespace and name.
func (s configConfigRuleNamespaceLister) Get(name string) (*v1alpha1.ConfigConfigRule, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("configconfigrule"), name)
	}
	return obj.(*v1alpha1.ConfigConfigRule), nil
}
