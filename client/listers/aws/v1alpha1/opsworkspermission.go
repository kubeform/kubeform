/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// OpsworksPermissionLister helps list OpsworksPermissions.
type OpsworksPermissionLister interface {
	// List lists all OpsworksPermissions in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.OpsworksPermission, err error)
	// OpsworksPermissions returns an object that can list and get OpsworksPermissions.
	OpsworksPermissions(namespace string) OpsworksPermissionNamespaceLister
	OpsworksPermissionListerExpansion
}

// opsworksPermissionLister implements the OpsworksPermissionLister interface.
type opsworksPermissionLister struct {
	indexer cache.Indexer
}

// NewOpsworksPermissionLister returns a new OpsworksPermissionLister.
func NewOpsworksPermissionLister(indexer cache.Indexer) OpsworksPermissionLister {
	return &opsworksPermissionLister{indexer: indexer}
}

// List lists all OpsworksPermissions in the indexer.
func (s *opsworksPermissionLister) List(selector labels.Selector) (ret []*v1alpha1.OpsworksPermission, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.OpsworksPermission))
	})
	return ret, err
}

// OpsworksPermissions returns an object that can list and get OpsworksPermissions.
func (s *opsworksPermissionLister) OpsworksPermissions(namespace string) OpsworksPermissionNamespaceLister {
	return opsworksPermissionNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// OpsworksPermissionNamespaceLister helps list and get OpsworksPermissions.
type OpsworksPermissionNamespaceLister interface {
	// List lists all OpsworksPermissions in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.OpsworksPermission, err error)
	// Get retrieves the OpsworksPermission from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.OpsworksPermission, error)
	OpsworksPermissionNamespaceListerExpansion
}

// opsworksPermissionNamespaceLister implements the OpsworksPermissionNamespaceLister
// interface.
type opsworksPermissionNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all OpsworksPermissions in the indexer for a given namespace.
func (s opsworksPermissionNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.OpsworksPermission, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.OpsworksPermission))
	})
	return ret, err
}

// Get retrieves the OpsworksPermission from the indexer for a given namespace and name.
func (s opsworksPermissionNamespaceLister) Get(name string) (*v1alpha1.OpsworksPermission, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("opsworkspermission"), name)
	}
	return obj.(*v1alpha1.OpsworksPermission), nil
}
