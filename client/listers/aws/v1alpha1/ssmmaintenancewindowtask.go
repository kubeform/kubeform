/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SsmMaintenanceWindowTaskLister helps list SsmMaintenanceWindowTasks.
type SsmMaintenanceWindowTaskLister interface {
	// List lists all SsmMaintenanceWindowTasks in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.SsmMaintenanceWindowTask, err error)
	// SsmMaintenanceWindowTasks returns an object that can list and get SsmMaintenanceWindowTasks.
	SsmMaintenanceWindowTasks(namespace string) SsmMaintenanceWindowTaskNamespaceLister
	SsmMaintenanceWindowTaskListerExpansion
}

// ssmMaintenanceWindowTaskLister implements the SsmMaintenanceWindowTaskLister interface.
type ssmMaintenanceWindowTaskLister struct {
	indexer cache.Indexer
}

// NewSsmMaintenanceWindowTaskLister returns a new SsmMaintenanceWindowTaskLister.
func NewSsmMaintenanceWindowTaskLister(indexer cache.Indexer) SsmMaintenanceWindowTaskLister {
	return &ssmMaintenanceWindowTaskLister{indexer: indexer}
}

// List lists all SsmMaintenanceWindowTasks in the indexer.
func (s *ssmMaintenanceWindowTaskLister) List(selector labels.Selector) (ret []*v1alpha1.SsmMaintenanceWindowTask, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SsmMaintenanceWindowTask))
	})
	return ret, err
}

// SsmMaintenanceWindowTasks returns an object that can list and get SsmMaintenanceWindowTasks.
func (s *ssmMaintenanceWindowTaskLister) SsmMaintenanceWindowTasks(namespace string) SsmMaintenanceWindowTaskNamespaceLister {
	return ssmMaintenanceWindowTaskNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SsmMaintenanceWindowTaskNamespaceLister helps list and get SsmMaintenanceWindowTasks.
type SsmMaintenanceWindowTaskNamespaceLister interface {
	// List lists all SsmMaintenanceWindowTasks in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.SsmMaintenanceWindowTask, err error)
	// Get retrieves the SsmMaintenanceWindowTask from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.SsmMaintenanceWindowTask, error)
	SsmMaintenanceWindowTaskNamespaceListerExpansion
}

// ssmMaintenanceWindowTaskNamespaceLister implements the SsmMaintenanceWindowTaskNamespaceLister
// interface.
type ssmMaintenanceWindowTaskNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SsmMaintenanceWindowTasks in the indexer for a given namespace.
func (s ssmMaintenanceWindowTaskNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SsmMaintenanceWindowTask, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SsmMaintenanceWindowTask))
	})
	return ret, err
}

// Get retrieves the SsmMaintenanceWindowTask from the indexer for a given namespace and name.
func (s ssmMaintenanceWindowTaskNamespaceLister) Get(name string) (*v1alpha1.SsmMaintenanceWindowTask, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("ssmmaintenancewindowtask"), name)
	}
	return obj.(*v1alpha1.SsmMaintenanceWindowTask), nil
}
