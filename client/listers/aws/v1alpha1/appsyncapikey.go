/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AppsyncAPIKeyLister helps list AppsyncAPIKeys.
type AppsyncAPIKeyLister interface {
	// List lists all AppsyncAPIKeys in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.AppsyncAPIKey, err error)
	// AppsyncAPIKeys returns an object that can list and get AppsyncAPIKeys.
	AppsyncAPIKeys(namespace string) AppsyncAPIKeyNamespaceLister
	AppsyncAPIKeyListerExpansion
}

// appsyncAPIKeyLister implements the AppsyncAPIKeyLister interface.
type appsyncAPIKeyLister struct {
	indexer cache.Indexer
}

// NewAppsyncAPIKeyLister returns a new AppsyncAPIKeyLister.
func NewAppsyncAPIKeyLister(indexer cache.Indexer) AppsyncAPIKeyLister {
	return &appsyncAPIKeyLister{indexer: indexer}
}

// List lists all AppsyncAPIKeys in the indexer.
func (s *appsyncAPIKeyLister) List(selector labels.Selector) (ret []*v1alpha1.AppsyncAPIKey, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AppsyncAPIKey))
	})
	return ret, err
}

// AppsyncAPIKeys returns an object that can list and get AppsyncAPIKeys.
func (s *appsyncAPIKeyLister) AppsyncAPIKeys(namespace string) AppsyncAPIKeyNamespaceLister {
	return appsyncAPIKeyNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AppsyncAPIKeyNamespaceLister helps list and get AppsyncAPIKeys.
type AppsyncAPIKeyNamespaceLister interface {
	// List lists all AppsyncAPIKeys in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.AppsyncAPIKey, err error)
	// Get retrieves the AppsyncAPIKey from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.AppsyncAPIKey, error)
	AppsyncAPIKeyNamespaceListerExpansion
}

// appsyncAPIKeyNamespaceLister implements the AppsyncAPIKeyNamespaceLister
// interface.
type appsyncAPIKeyNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AppsyncAPIKeys in the indexer for a given namespace.
func (s appsyncAPIKeyNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AppsyncAPIKey, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AppsyncAPIKey))
	})
	return ret, err
}

// Get retrieves the AppsyncAPIKey from the indexer for a given namespace and name.
func (s appsyncAPIKeyNamespaceLister) Get(name string) (*v1alpha1.AppsyncAPIKey, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("appsyncapikey"), name)
	}
	return obj.(*v1alpha1.AppsyncAPIKey), nil
}
