/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SesReceiptFilterLister helps list SesReceiptFilters.
type SesReceiptFilterLister interface {
	// List lists all SesReceiptFilters in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.SesReceiptFilter, err error)
	// SesReceiptFilters returns an object that can list and get SesReceiptFilters.
	SesReceiptFilters(namespace string) SesReceiptFilterNamespaceLister
	SesReceiptFilterListerExpansion
}

// sesReceiptFilterLister implements the SesReceiptFilterLister interface.
type sesReceiptFilterLister struct {
	indexer cache.Indexer
}

// NewSesReceiptFilterLister returns a new SesReceiptFilterLister.
func NewSesReceiptFilterLister(indexer cache.Indexer) SesReceiptFilterLister {
	return &sesReceiptFilterLister{indexer: indexer}
}

// List lists all SesReceiptFilters in the indexer.
func (s *sesReceiptFilterLister) List(selector labels.Selector) (ret []*v1alpha1.SesReceiptFilter, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SesReceiptFilter))
	})
	return ret, err
}

// SesReceiptFilters returns an object that can list and get SesReceiptFilters.
func (s *sesReceiptFilterLister) SesReceiptFilters(namespace string) SesReceiptFilterNamespaceLister {
	return sesReceiptFilterNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SesReceiptFilterNamespaceLister helps list and get SesReceiptFilters.
type SesReceiptFilterNamespaceLister interface {
	// List lists all SesReceiptFilters in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.SesReceiptFilter, err error)
	// Get retrieves the SesReceiptFilter from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.SesReceiptFilter, error)
	SesReceiptFilterNamespaceListerExpansion
}

// sesReceiptFilterNamespaceLister implements the SesReceiptFilterNamespaceLister
// interface.
type sesReceiptFilterNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SesReceiptFilters in the indexer for a given namespace.
func (s sesReceiptFilterNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SesReceiptFilter, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SesReceiptFilter))
	})
	return ret, err
}

// Get retrieves the SesReceiptFilter from the indexer for a given namespace and name.
func (s sesReceiptFilterNamespaceLister) Get(name string) (*v1alpha1.SesReceiptFilter, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("sesreceiptfilter"), name)
	}
	return obj.(*v1alpha1.SesReceiptFilter), nil
}
