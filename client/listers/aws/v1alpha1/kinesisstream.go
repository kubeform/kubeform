/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"
)

// KinesisStreamLister helps list KinesisStreams.
type KinesisStreamLister interface {
	// List lists all KinesisStreams in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.KinesisStream, err error)
	// KinesisStreams returns an object that can list and get KinesisStreams.
	KinesisStreams(namespace string) KinesisStreamNamespaceLister
	KinesisStreamListerExpansion
}

// kinesisStreamLister implements the KinesisStreamLister interface.
type kinesisStreamLister struct {
	indexer cache.Indexer
}

// NewKinesisStreamLister returns a new KinesisStreamLister.
func NewKinesisStreamLister(indexer cache.Indexer) KinesisStreamLister {
	return &kinesisStreamLister{indexer: indexer}
}

// List lists all KinesisStreams in the indexer.
func (s *kinesisStreamLister) List(selector labels.Selector) (ret []*v1alpha1.KinesisStream, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.KinesisStream))
	})
	return ret, err
}

// KinesisStreams returns an object that can list and get KinesisStreams.
func (s *kinesisStreamLister) KinesisStreams(namespace string) KinesisStreamNamespaceLister {
	return kinesisStreamNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// KinesisStreamNamespaceLister helps list and get KinesisStreams.
type KinesisStreamNamespaceLister interface {
	// List lists all KinesisStreams in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.KinesisStream, err error)
	// Get retrieves the KinesisStream from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.KinesisStream, error)
	KinesisStreamNamespaceListerExpansion
}

// kinesisStreamNamespaceLister implements the KinesisStreamNamespaceLister
// interface.
type kinesisStreamNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all KinesisStreams in the indexer for a given namespace.
func (s kinesisStreamNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.KinesisStream, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.KinesisStream))
	})
	return ret, err
}

// Get retrieves the KinesisStream from the indexer for a given namespace and name.
func (s kinesisStreamNamespaceLister) Get(name string) (*v1alpha1.KinesisStream, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("kinesisstream"), name)
	}
	return obj.(*v1alpha1.KinesisStream), nil
}
