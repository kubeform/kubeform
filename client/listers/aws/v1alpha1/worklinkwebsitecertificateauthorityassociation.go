/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"
)

// WorklinkWebsiteCertificateAuthorityAssociationLister helps list WorklinkWebsiteCertificateAuthorityAssociations.
type WorklinkWebsiteCertificateAuthorityAssociationLister interface {
	// List lists all WorklinkWebsiteCertificateAuthorityAssociations in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.WorklinkWebsiteCertificateAuthorityAssociation, err error)
	// WorklinkWebsiteCertificateAuthorityAssociations returns an object that can list and get WorklinkWebsiteCertificateAuthorityAssociations.
	WorklinkWebsiteCertificateAuthorityAssociations(namespace string) WorklinkWebsiteCertificateAuthorityAssociationNamespaceLister
	WorklinkWebsiteCertificateAuthorityAssociationListerExpansion
}

// worklinkWebsiteCertificateAuthorityAssociationLister implements the WorklinkWebsiteCertificateAuthorityAssociationLister interface.
type worklinkWebsiteCertificateAuthorityAssociationLister struct {
	indexer cache.Indexer
}

// NewWorklinkWebsiteCertificateAuthorityAssociationLister returns a new WorklinkWebsiteCertificateAuthorityAssociationLister.
func NewWorklinkWebsiteCertificateAuthorityAssociationLister(indexer cache.Indexer) WorklinkWebsiteCertificateAuthorityAssociationLister {
	return &worklinkWebsiteCertificateAuthorityAssociationLister{indexer: indexer}
}

// List lists all WorklinkWebsiteCertificateAuthorityAssociations in the indexer.
func (s *worklinkWebsiteCertificateAuthorityAssociationLister) List(selector labels.Selector) (ret []*v1alpha1.WorklinkWebsiteCertificateAuthorityAssociation, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.WorklinkWebsiteCertificateAuthorityAssociation))
	})
	return ret, err
}

// WorklinkWebsiteCertificateAuthorityAssociations returns an object that can list and get WorklinkWebsiteCertificateAuthorityAssociations.
func (s *worklinkWebsiteCertificateAuthorityAssociationLister) WorklinkWebsiteCertificateAuthorityAssociations(namespace string) WorklinkWebsiteCertificateAuthorityAssociationNamespaceLister {
	return worklinkWebsiteCertificateAuthorityAssociationNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// WorklinkWebsiteCertificateAuthorityAssociationNamespaceLister helps list and get WorklinkWebsiteCertificateAuthorityAssociations.
type WorklinkWebsiteCertificateAuthorityAssociationNamespaceLister interface {
	// List lists all WorklinkWebsiteCertificateAuthorityAssociations in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.WorklinkWebsiteCertificateAuthorityAssociation, err error)
	// Get retrieves the WorklinkWebsiteCertificateAuthorityAssociation from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.WorklinkWebsiteCertificateAuthorityAssociation, error)
	WorklinkWebsiteCertificateAuthorityAssociationNamespaceListerExpansion
}

// worklinkWebsiteCertificateAuthorityAssociationNamespaceLister implements the WorklinkWebsiteCertificateAuthorityAssociationNamespaceLister
// interface.
type worklinkWebsiteCertificateAuthorityAssociationNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all WorklinkWebsiteCertificateAuthorityAssociations in the indexer for a given namespace.
func (s worklinkWebsiteCertificateAuthorityAssociationNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.WorklinkWebsiteCertificateAuthorityAssociation, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.WorklinkWebsiteCertificateAuthorityAssociation))
	})
	return ret, err
}

// Get retrieves the WorklinkWebsiteCertificateAuthorityAssociation from the indexer for a given namespace and name.
func (s worklinkWebsiteCertificateAuthorityAssociationNamespaceLister) Get(name string) (*v1alpha1.WorklinkWebsiteCertificateAuthorityAssociation, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("worklinkwebsitecertificateauthorityassociation"), name)
	}
	return obj.(*v1alpha1.WorklinkWebsiteCertificateAuthorityAssociation), nil
}
