/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// LambdaFunctionLister helps list LambdaFunctions.
type LambdaFunctionLister interface {
	// List lists all LambdaFunctions in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.LambdaFunction, err error)
	// LambdaFunctions returns an object that can list and get LambdaFunctions.
	LambdaFunctions(namespace string) LambdaFunctionNamespaceLister
	LambdaFunctionListerExpansion
}

// lambdaFunctionLister implements the LambdaFunctionLister interface.
type lambdaFunctionLister struct {
	indexer cache.Indexer
}

// NewLambdaFunctionLister returns a new LambdaFunctionLister.
func NewLambdaFunctionLister(indexer cache.Indexer) LambdaFunctionLister {
	return &lambdaFunctionLister{indexer: indexer}
}

// List lists all LambdaFunctions in the indexer.
func (s *lambdaFunctionLister) List(selector labels.Selector) (ret []*v1alpha1.LambdaFunction, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.LambdaFunction))
	})
	return ret, err
}

// LambdaFunctions returns an object that can list and get LambdaFunctions.
func (s *lambdaFunctionLister) LambdaFunctions(namespace string) LambdaFunctionNamespaceLister {
	return lambdaFunctionNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// LambdaFunctionNamespaceLister helps list and get LambdaFunctions.
type LambdaFunctionNamespaceLister interface {
	// List lists all LambdaFunctions in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.LambdaFunction, err error)
	// Get retrieves the LambdaFunction from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.LambdaFunction, error)
	LambdaFunctionNamespaceListerExpansion
}

// lambdaFunctionNamespaceLister implements the LambdaFunctionNamespaceLister
// interface.
type lambdaFunctionNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all LambdaFunctions in the indexer for a given namespace.
func (s lambdaFunctionNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.LambdaFunction, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.LambdaFunction))
	})
	return ret, err
}

// Get retrieves the LambdaFunction from the indexer for a given namespace and name.
func (s lambdaFunctionNamespaceLister) Get(name string) (*v1alpha1.LambdaFunction, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("lambdafunction"), name)
	}
	return obj.(*v1alpha1.LambdaFunction), nil
}
