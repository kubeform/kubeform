/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// VpnGatewayAttachmentLister helps list VpnGatewayAttachments.
type VpnGatewayAttachmentLister interface {
	// List lists all VpnGatewayAttachments in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.VpnGatewayAttachment, err error)
	// VpnGatewayAttachments returns an object that can list and get VpnGatewayAttachments.
	VpnGatewayAttachments(namespace string) VpnGatewayAttachmentNamespaceLister
	VpnGatewayAttachmentListerExpansion
}

// vpnGatewayAttachmentLister implements the VpnGatewayAttachmentLister interface.
type vpnGatewayAttachmentLister struct {
	indexer cache.Indexer
}

// NewVpnGatewayAttachmentLister returns a new VpnGatewayAttachmentLister.
func NewVpnGatewayAttachmentLister(indexer cache.Indexer) VpnGatewayAttachmentLister {
	return &vpnGatewayAttachmentLister{indexer: indexer}
}

// List lists all VpnGatewayAttachments in the indexer.
func (s *vpnGatewayAttachmentLister) List(selector labels.Selector) (ret []*v1alpha1.VpnGatewayAttachment, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.VpnGatewayAttachment))
	})
	return ret, err
}

// VpnGatewayAttachments returns an object that can list and get VpnGatewayAttachments.
func (s *vpnGatewayAttachmentLister) VpnGatewayAttachments(namespace string) VpnGatewayAttachmentNamespaceLister {
	return vpnGatewayAttachmentNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// VpnGatewayAttachmentNamespaceLister helps list and get VpnGatewayAttachments.
type VpnGatewayAttachmentNamespaceLister interface {
	// List lists all VpnGatewayAttachments in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.VpnGatewayAttachment, err error)
	// Get retrieves the VpnGatewayAttachment from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.VpnGatewayAttachment, error)
	VpnGatewayAttachmentNamespaceListerExpansion
}

// vpnGatewayAttachmentNamespaceLister implements the VpnGatewayAttachmentNamespaceLister
// interface.
type vpnGatewayAttachmentNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all VpnGatewayAttachments in the indexer for a given namespace.
func (s vpnGatewayAttachmentNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.VpnGatewayAttachment, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.VpnGatewayAttachment))
	})
	return ret, err
}

// Get retrieves the VpnGatewayAttachment from the indexer for a given namespace and name.
func (s vpnGatewayAttachmentNamespaceLister) Get(name string) (*v1alpha1.VpnGatewayAttachment, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("vpngatewayattachment"), name)
	}
	return obj.(*v1alpha1.VpnGatewayAttachment), nil
}
