/*
Copyright 2019 The KubeDB Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"
)

// AwsRoute53HealthCheckLister helps list AwsRoute53HealthChecks.
type AwsRoute53HealthCheckLister interface {
	// List lists all AwsRoute53HealthChecks in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.AwsRoute53HealthCheck, err error)
	// Get retrieves the AwsRoute53HealthCheck from the index for a given name.
	Get(name string) (*v1alpha1.AwsRoute53HealthCheck, error)
	AwsRoute53HealthCheckListerExpansion
}

// awsRoute53HealthCheckLister implements the AwsRoute53HealthCheckLister interface.
type awsRoute53HealthCheckLister struct {
	indexer cache.Indexer
}

// NewAwsRoute53HealthCheckLister returns a new AwsRoute53HealthCheckLister.
func NewAwsRoute53HealthCheckLister(indexer cache.Indexer) AwsRoute53HealthCheckLister {
	return &awsRoute53HealthCheckLister{indexer: indexer}
}

// List lists all AwsRoute53HealthChecks in the indexer.
func (s *awsRoute53HealthCheckLister) List(selector labels.Selector) (ret []*v1alpha1.AwsRoute53HealthCheck, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AwsRoute53HealthCheck))
	})
	return ret, err
}

// Get retrieves the AwsRoute53HealthCheck from the index for a given name.
func (s *awsRoute53HealthCheckLister) Get(name string) (*v1alpha1.AwsRoute53HealthCheck, error) {
	obj, exists, err := s.indexer.GetByKey(name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("awsroute53healthcheck"), name)
	}
	return obj.(*v1alpha1.AwsRoute53HealthCheck), nil
}
