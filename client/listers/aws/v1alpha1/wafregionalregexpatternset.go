/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// WafregionalRegexPatternSetLister helps list WafregionalRegexPatternSets.
type WafregionalRegexPatternSetLister interface {
	// List lists all WafregionalRegexPatternSets in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.WafregionalRegexPatternSet, err error)
	// WafregionalRegexPatternSets returns an object that can list and get WafregionalRegexPatternSets.
	WafregionalRegexPatternSets(namespace string) WafregionalRegexPatternSetNamespaceLister
	WafregionalRegexPatternSetListerExpansion
}

// wafregionalRegexPatternSetLister implements the WafregionalRegexPatternSetLister interface.
type wafregionalRegexPatternSetLister struct {
	indexer cache.Indexer
}

// NewWafregionalRegexPatternSetLister returns a new WafregionalRegexPatternSetLister.
func NewWafregionalRegexPatternSetLister(indexer cache.Indexer) WafregionalRegexPatternSetLister {
	return &wafregionalRegexPatternSetLister{indexer: indexer}
}

// List lists all WafregionalRegexPatternSets in the indexer.
func (s *wafregionalRegexPatternSetLister) List(selector labels.Selector) (ret []*v1alpha1.WafregionalRegexPatternSet, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.WafregionalRegexPatternSet))
	})
	return ret, err
}

// WafregionalRegexPatternSets returns an object that can list and get WafregionalRegexPatternSets.
func (s *wafregionalRegexPatternSetLister) WafregionalRegexPatternSets(namespace string) WafregionalRegexPatternSetNamespaceLister {
	return wafregionalRegexPatternSetNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// WafregionalRegexPatternSetNamespaceLister helps list and get WafregionalRegexPatternSets.
type WafregionalRegexPatternSetNamespaceLister interface {
	// List lists all WafregionalRegexPatternSets in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.WafregionalRegexPatternSet, err error)
	// Get retrieves the WafregionalRegexPatternSet from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.WafregionalRegexPatternSet, error)
	WafregionalRegexPatternSetNamespaceListerExpansion
}

// wafregionalRegexPatternSetNamespaceLister implements the WafregionalRegexPatternSetNamespaceLister
// interface.
type wafregionalRegexPatternSetNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all WafregionalRegexPatternSets in the indexer for a given namespace.
func (s wafregionalRegexPatternSetNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.WafregionalRegexPatternSet, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.WafregionalRegexPatternSet))
	})
	return ret, err
}

// Get retrieves the WafregionalRegexPatternSet from the indexer for a given namespace and name.
func (s wafregionalRegexPatternSetNamespaceLister) Get(name string) (*v1alpha1.WafregionalRegexPatternSet, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("wafregionalregexpatternset"), name)
	}
	return obj.(*v1alpha1.WafregionalRegexPatternSet), nil
}
