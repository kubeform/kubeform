/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"
)

// EbsSnapshotCopyLister helps list EbsSnapshotCopies.
type EbsSnapshotCopyLister interface {
	// List lists all EbsSnapshotCopies in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.EbsSnapshotCopy, err error)
	// EbsSnapshotCopies returns an object that can list and get EbsSnapshotCopies.
	EbsSnapshotCopies(namespace string) EbsSnapshotCopyNamespaceLister
	EbsSnapshotCopyListerExpansion
}

// ebsSnapshotCopyLister implements the EbsSnapshotCopyLister interface.
type ebsSnapshotCopyLister struct {
	indexer cache.Indexer
}

// NewEbsSnapshotCopyLister returns a new EbsSnapshotCopyLister.
func NewEbsSnapshotCopyLister(indexer cache.Indexer) EbsSnapshotCopyLister {
	return &ebsSnapshotCopyLister{indexer: indexer}
}

// List lists all EbsSnapshotCopies in the indexer.
func (s *ebsSnapshotCopyLister) List(selector labels.Selector) (ret []*v1alpha1.EbsSnapshotCopy, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.EbsSnapshotCopy))
	})
	return ret, err
}

// EbsSnapshotCopies returns an object that can list and get EbsSnapshotCopies.
func (s *ebsSnapshotCopyLister) EbsSnapshotCopies(namespace string) EbsSnapshotCopyNamespaceLister {
	return ebsSnapshotCopyNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// EbsSnapshotCopyNamespaceLister helps list and get EbsSnapshotCopies.
type EbsSnapshotCopyNamespaceLister interface {
	// List lists all EbsSnapshotCopies in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.EbsSnapshotCopy, err error)
	// Get retrieves the EbsSnapshotCopy from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.EbsSnapshotCopy, error)
	EbsSnapshotCopyNamespaceListerExpansion
}

// ebsSnapshotCopyNamespaceLister implements the EbsSnapshotCopyNamespaceLister
// interface.
type ebsSnapshotCopyNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all EbsSnapshotCopies in the indexer for a given namespace.
func (s ebsSnapshotCopyNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.EbsSnapshotCopy, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.EbsSnapshotCopy))
	})
	return ret, err
}

// Get retrieves the EbsSnapshotCopy from the indexer for a given namespace and name.
func (s ebsSnapshotCopyNamespaceLister) Get(name string) (*v1alpha1.EbsSnapshotCopy, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("ebssnapshotcopy"), name)
	}
	return obj.(*v1alpha1.EbsSnapshotCopy), nil
}
