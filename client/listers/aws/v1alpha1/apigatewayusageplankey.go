/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"
)

// ApiGatewayUsagePlanKeyLister helps list ApiGatewayUsagePlanKeys.
type ApiGatewayUsagePlanKeyLister interface {
	// List lists all ApiGatewayUsagePlanKeys in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ApiGatewayUsagePlanKey, err error)
	// ApiGatewayUsagePlanKeys returns an object that can list and get ApiGatewayUsagePlanKeys.
	ApiGatewayUsagePlanKeys(namespace string) ApiGatewayUsagePlanKeyNamespaceLister
	ApiGatewayUsagePlanKeyListerExpansion
}

// apiGatewayUsagePlanKeyLister implements the ApiGatewayUsagePlanKeyLister interface.
type apiGatewayUsagePlanKeyLister struct {
	indexer cache.Indexer
}

// NewApiGatewayUsagePlanKeyLister returns a new ApiGatewayUsagePlanKeyLister.
func NewApiGatewayUsagePlanKeyLister(indexer cache.Indexer) ApiGatewayUsagePlanKeyLister {
	return &apiGatewayUsagePlanKeyLister{indexer: indexer}
}

// List lists all ApiGatewayUsagePlanKeys in the indexer.
func (s *apiGatewayUsagePlanKeyLister) List(selector labels.Selector) (ret []*v1alpha1.ApiGatewayUsagePlanKey, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ApiGatewayUsagePlanKey))
	})
	return ret, err
}

// ApiGatewayUsagePlanKeys returns an object that can list and get ApiGatewayUsagePlanKeys.
func (s *apiGatewayUsagePlanKeyLister) ApiGatewayUsagePlanKeys(namespace string) ApiGatewayUsagePlanKeyNamespaceLister {
	return apiGatewayUsagePlanKeyNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ApiGatewayUsagePlanKeyNamespaceLister helps list and get ApiGatewayUsagePlanKeys.
type ApiGatewayUsagePlanKeyNamespaceLister interface {
	// List lists all ApiGatewayUsagePlanKeys in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ApiGatewayUsagePlanKey, err error)
	// Get retrieves the ApiGatewayUsagePlanKey from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ApiGatewayUsagePlanKey, error)
	ApiGatewayUsagePlanKeyNamespaceListerExpansion
}

// apiGatewayUsagePlanKeyNamespaceLister implements the ApiGatewayUsagePlanKeyNamespaceLister
// interface.
type apiGatewayUsagePlanKeyNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ApiGatewayUsagePlanKeys in the indexer for a given namespace.
func (s apiGatewayUsagePlanKeyNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ApiGatewayUsagePlanKey, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ApiGatewayUsagePlanKey))
	})
	return ret, err
}

// Get retrieves the ApiGatewayUsagePlanKey from the indexer for a given namespace and name.
func (s apiGatewayUsagePlanKeyNamespaceLister) Get(name string) (*v1alpha1.ApiGatewayUsagePlanKey, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("apigatewayusageplankey"), name)
	}
	return obj.(*v1alpha1.ApiGatewayUsagePlanKey), nil
}
