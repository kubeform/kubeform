/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"
)

// GlueJobLister helps list GlueJobs.
type GlueJobLister interface {
	// List lists all GlueJobs in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.GlueJob, err error)
	// GlueJobs returns an object that can list and get GlueJobs.
	GlueJobs(namespace string) GlueJobNamespaceLister
	GlueJobListerExpansion
}

// glueJobLister implements the GlueJobLister interface.
type glueJobLister struct {
	indexer cache.Indexer
}

// NewGlueJobLister returns a new GlueJobLister.
func NewGlueJobLister(indexer cache.Indexer) GlueJobLister {
	return &glueJobLister{indexer: indexer}
}

// List lists all GlueJobs in the indexer.
func (s *glueJobLister) List(selector labels.Selector) (ret []*v1alpha1.GlueJob, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.GlueJob))
	})
	return ret, err
}

// GlueJobs returns an object that can list and get GlueJobs.
func (s *glueJobLister) GlueJobs(namespace string) GlueJobNamespaceLister {
	return glueJobNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// GlueJobNamespaceLister helps list and get GlueJobs.
type GlueJobNamespaceLister interface {
	// List lists all GlueJobs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.GlueJob, err error)
	// Get retrieves the GlueJob from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.GlueJob, error)
	GlueJobNamespaceListerExpansion
}

// glueJobNamespaceLister implements the GlueJobNamespaceLister
// interface.
type glueJobNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all GlueJobs in the indexer for a given namespace.
func (s glueJobNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.GlueJob, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.GlueJob))
	})
	return ret, err
}

// Get retrieves the GlueJob from the indexer for a given namespace and name.
func (s glueJobNamespaceLister) Get(name string) (*v1alpha1.GlueJob, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("gluejob"), name)
	}
	return obj.(*v1alpha1.GlueJob), nil
}
