/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ApiGatewayBasePathMappingLister helps list ApiGatewayBasePathMappings.
type ApiGatewayBasePathMappingLister interface {
	// List lists all ApiGatewayBasePathMappings in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ApiGatewayBasePathMapping, err error)
	// ApiGatewayBasePathMappings returns an object that can list and get ApiGatewayBasePathMappings.
	ApiGatewayBasePathMappings(namespace string) ApiGatewayBasePathMappingNamespaceLister
	ApiGatewayBasePathMappingListerExpansion
}

// apiGatewayBasePathMappingLister implements the ApiGatewayBasePathMappingLister interface.
type apiGatewayBasePathMappingLister struct {
	indexer cache.Indexer
}

// NewApiGatewayBasePathMappingLister returns a new ApiGatewayBasePathMappingLister.
func NewApiGatewayBasePathMappingLister(indexer cache.Indexer) ApiGatewayBasePathMappingLister {
	return &apiGatewayBasePathMappingLister{indexer: indexer}
}

// List lists all ApiGatewayBasePathMappings in the indexer.
func (s *apiGatewayBasePathMappingLister) List(selector labels.Selector) (ret []*v1alpha1.ApiGatewayBasePathMapping, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ApiGatewayBasePathMapping))
	})
	return ret, err
}

// ApiGatewayBasePathMappings returns an object that can list and get ApiGatewayBasePathMappings.
func (s *apiGatewayBasePathMappingLister) ApiGatewayBasePathMappings(namespace string) ApiGatewayBasePathMappingNamespaceLister {
	return apiGatewayBasePathMappingNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ApiGatewayBasePathMappingNamespaceLister helps list and get ApiGatewayBasePathMappings.
type ApiGatewayBasePathMappingNamespaceLister interface {
	// List lists all ApiGatewayBasePathMappings in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ApiGatewayBasePathMapping, err error)
	// Get retrieves the ApiGatewayBasePathMapping from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ApiGatewayBasePathMapping, error)
	ApiGatewayBasePathMappingNamespaceListerExpansion
}

// apiGatewayBasePathMappingNamespaceLister implements the ApiGatewayBasePathMappingNamespaceLister
// interface.
type apiGatewayBasePathMappingNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ApiGatewayBasePathMappings in the indexer for a given namespace.
func (s apiGatewayBasePathMappingNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ApiGatewayBasePathMapping, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ApiGatewayBasePathMapping))
	})
	return ret, err
}

// Get retrieves the ApiGatewayBasePathMapping from the indexer for a given namespace and name.
func (s apiGatewayBasePathMappingNamespaceLister) Get(name string) (*v1alpha1.ApiGatewayBasePathMapping, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("apigatewaybasepathmapping"), name)
	}
	return obj.(*v1alpha1.ApiGatewayBasePathMapping), nil
}
