/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/aws/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// OrganizationsAccountLister helps list OrganizationsAccounts.
type OrganizationsAccountLister interface {
	// List lists all OrganizationsAccounts in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.OrganizationsAccount, err error)
	// OrganizationsAccounts returns an object that can list and get OrganizationsAccounts.
	OrganizationsAccounts(namespace string) OrganizationsAccountNamespaceLister
	OrganizationsAccountListerExpansion
}

// organizationsAccountLister implements the OrganizationsAccountLister interface.
type organizationsAccountLister struct {
	indexer cache.Indexer
}

// NewOrganizationsAccountLister returns a new OrganizationsAccountLister.
func NewOrganizationsAccountLister(indexer cache.Indexer) OrganizationsAccountLister {
	return &organizationsAccountLister{indexer: indexer}
}

// List lists all OrganizationsAccounts in the indexer.
func (s *organizationsAccountLister) List(selector labels.Selector) (ret []*v1alpha1.OrganizationsAccount, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.OrganizationsAccount))
	})
	return ret, err
}

// OrganizationsAccounts returns an object that can list and get OrganizationsAccounts.
func (s *organizationsAccountLister) OrganizationsAccounts(namespace string) OrganizationsAccountNamespaceLister {
	return organizationsAccountNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// OrganizationsAccountNamespaceLister helps list and get OrganizationsAccounts.
type OrganizationsAccountNamespaceLister interface {
	// List lists all OrganizationsAccounts in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.OrganizationsAccount, err error)
	// Get retrieves the OrganizationsAccount from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.OrganizationsAccount, error)
	OrganizationsAccountNamespaceListerExpansion
}

// organizationsAccountNamespaceLister implements the OrganizationsAccountNamespaceLister
// interface.
type organizationsAccountNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all OrganizationsAccounts in the indexer for a given namespace.
func (s organizationsAccountNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.OrganizationsAccount, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.OrganizationsAccount))
	})
	return ret, err
}

// Get retrieves the OrganizationsAccount from the indexer for a given namespace and name.
func (s organizationsAccountNamespaceLister) Get(name string) (*v1alpha1.OrganizationsAccount, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("organizationsaccount"), name)
	}
	return obj.(*v1alpha1.OrganizationsAccount), nil
}
