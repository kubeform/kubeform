/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/google/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// KmsKeyRingLister helps list KmsKeyRings.
type KmsKeyRingLister interface {
	// List lists all KmsKeyRings in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.KmsKeyRing, err error)
	// KmsKeyRings returns an object that can list and get KmsKeyRings.
	KmsKeyRings(namespace string) KmsKeyRingNamespaceLister
	KmsKeyRingListerExpansion
}

// kmsKeyRingLister implements the KmsKeyRingLister interface.
type kmsKeyRingLister struct {
	indexer cache.Indexer
}

// NewKmsKeyRingLister returns a new KmsKeyRingLister.
func NewKmsKeyRingLister(indexer cache.Indexer) KmsKeyRingLister {
	return &kmsKeyRingLister{indexer: indexer}
}

// List lists all KmsKeyRings in the indexer.
func (s *kmsKeyRingLister) List(selector labels.Selector) (ret []*v1alpha1.KmsKeyRing, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.KmsKeyRing))
	})
	return ret, err
}

// KmsKeyRings returns an object that can list and get KmsKeyRings.
func (s *kmsKeyRingLister) KmsKeyRings(namespace string) KmsKeyRingNamespaceLister {
	return kmsKeyRingNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// KmsKeyRingNamespaceLister helps list and get KmsKeyRings.
type KmsKeyRingNamespaceLister interface {
	// List lists all KmsKeyRings in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.KmsKeyRing, err error)
	// Get retrieves the KmsKeyRing from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.KmsKeyRing, error)
	KmsKeyRingNamespaceListerExpansion
}

// kmsKeyRingNamespaceLister implements the KmsKeyRingNamespaceLister
// interface.
type kmsKeyRingNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all KmsKeyRings in the indexer for a given namespace.
func (s kmsKeyRingNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.KmsKeyRing, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.KmsKeyRing))
	})
	return ret, err
}

// Get retrieves the KmsKeyRing from the indexer for a given namespace and name.
func (s kmsKeyRingNamespaceLister) Get(name string) (*v1alpha1.KmsKeyRing, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("kmskeyring"), name)
	}
	return obj.(*v1alpha1.KmsKeyRing), nil
}
