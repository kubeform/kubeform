/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/kubeform/apis/google/v1alpha1"
)

// DataprocClusterLister helps list DataprocClusters.
type DataprocClusterLister interface {
	// List lists all DataprocClusters in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.DataprocCluster, err error)
	// DataprocClusters returns an object that can list and get DataprocClusters.
	DataprocClusters(namespace string) DataprocClusterNamespaceLister
	DataprocClusterListerExpansion
}

// dataprocClusterLister implements the DataprocClusterLister interface.
type dataprocClusterLister struct {
	indexer cache.Indexer
}

// NewDataprocClusterLister returns a new DataprocClusterLister.
func NewDataprocClusterLister(indexer cache.Indexer) DataprocClusterLister {
	return &dataprocClusterLister{indexer: indexer}
}

// List lists all DataprocClusters in the indexer.
func (s *dataprocClusterLister) List(selector labels.Selector) (ret []*v1alpha1.DataprocCluster, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DataprocCluster))
	})
	return ret, err
}

// DataprocClusters returns an object that can list and get DataprocClusters.
func (s *dataprocClusterLister) DataprocClusters(namespace string) DataprocClusterNamespaceLister {
	return dataprocClusterNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DataprocClusterNamespaceLister helps list and get DataprocClusters.
type DataprocClusterNamespaceLister interface {
	// List lists all DataprocClusters in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.DataprocCluster, err error)
	// Get retrieves the DataprocCluster from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.DataprocCluster, error)
	DataprocClusterNamespaceListerExpansion
}

// dataprocClusterNamespaceLister implements the DataprocClusterNamespaceLister
// interface.
type dataprocClusterNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DataprocClusters in the indexer for a given namespace.
func (s dataprocClusterNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.DataprocCluster, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DataprocCluster))
	})
	return ret, err
}

// Get retrieves the DataprocCluster from the indexer for a given namespace and name.
func (s dataprocClusterNamespaceLister) Get(name string) (*v1alpha1.DataprocCluster, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("dataproccluster"), name)
	}
	return obj.(*v1alpha1.DataprocCluster), nil
}
