/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/google/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CloudSchedulerJobLister helps list CloudSchedulerJobs.
type CloudSchedulerJobLister interface {
	// List lists all CloudSchedulerJobs in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.CloudSchedulerJob, err error)
	// CloudSchedulerJobs returns an object that can list and get CloudSchedulerJobs.
	CloudSchedulerJobs(namespace string) CloudSchedulerJobNamespaceLister
	CloudSchedulerJobListerExpansion
}

// cloudSchedulerJobLister implements the CloudSchedulerJobLister interface.
type cloudSchedulerJobLister struct {
	indexer cache.Indexer
}

// NewCloudSchedulerJobLister returns a new CloudSchedulerJobLister.
func NewCloudSchedulerJobLister(indexer cache.Indexer) CloudSchedulerJobLister {
	return &cloudSchedulerJobLister{indexer: indexer}
}

// List lists all CloudSchedulerJobs in the indexer.
func (s *cloudSchedulerJobLister) List(selector labels.Selector) (ret []*v1alpha1.CloudSchedulerJob, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CloudSchedulerJob))
	})
	return ret, err
}

// CloudSchedulerJobs returns an object that can list and get CloudSchedulerJobs.
func (s *cloudSchedulerJobLister) CloudSchedulerJobs(namespace string) CloudSchedulerJobNamespaceLister {
	return cloudSchedulerJobNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CloudSchedulerJobNamespaceLister helps list and get CloudSchedulerJobs.
type CloudSchedulerJobNamespaceLister interface {
	// List lists all CloudSchedulerJobs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.CloudSchedulerJob, err error)
	// Get retrieves the CloudSchedulerJob from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.CloudSchedulerJob, error)
	CloudSchedulerJobNamespaceListerExpansion
}

// cloudSchedulerJobNamespaceLister implements the CloudSchedulerJobNamespaceLister
// interface.
type cloudSchedulerJobNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CloudSchedulerJobs in the indexer for a given namespace.
func (s cloudSchedulerJobNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.CloudSchedulerJob, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CloudSchedulerJob))
	})
	return ret, err
}

// Get retrieves the CloudSchedulerJob from the indexer for a given namespace and name.
func (s cloudSchedulerJobNamespaceLister) Get(name string) (*v1alpha1.CloudSchedulerJob, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("cloudschedulerjob"), name)
	}
	return obj.(*v1alpha1.CloudSchedulerJob), nil
}
