/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/google/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// StorageTransferJobLister helps list StorageTransferJobs.
type StorageTransferJobLister interface {
	// List lists all StorageTransferJobs in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.StorageTransferJob, err error)
	// StorageTransferJobs returns an object that can list and get StorageTransferJobs.
	StorageTransferJobs(namespace string) StorageTransferJobNamespaceLister
	StorageTransferJobListerExpansion
}

// storageTransferJobLister implements the StorageTransferJobLister interface.
type storageTransferJobLister struct {
	indexer cache.Indexer
}

// NewStorageTransferJobLister returns a new StorageTransferJobLister.
func NewStorageTransferJobLister(indexer cache.Indexer) StorageTransferJobLister {
	return &storageTransferJobLister{indexer: indexer}
}

// List lists all StorageTransferJobs in the indexer.
func (s *storageTransferJobLister) List(selector labels.Selector) (ret []*v1alpha1.StorageTransferJob, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.StorageTransferJob))
	})
	return ret, err
}

// StorageTransferJobs returns an object that can list and get StorageTransferJobs.
func (s *storageTransferJobLister) StorageTransferJobs(namespace string) StorageTransferJobNamespaceLister {
	return storageTransferJobNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// StorageTransferJobNamespaceLister helps list and get StorageTransferJobs.
type StorageTransferJobNamespaceLister interface {
	// List lists all StorageTransferJobs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.StorageTransferJob, err error)
	// Get retrieves the StorageTransferJob from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.StorageTransferJob, error)
	StorageTransferJobNamespaceListerExpansion
}

// storageTransferJobNamespaceLister implements the StorageTransferJobNamespaceLister
// interface.
type storageTransferJobNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all StorageTransferJobs in the indexer for a given namespace.
func (s storageTransferJobNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.StorageTransferJob, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.StorageTransferJob))
	})
	return ret, err
}

// Get retrieves the StorageTransferJob from the indexer for a given namespace and name.
func (s storageTransferJobNamespaceLister) Get(name string) (*v1alpha1.StorageTransferJob, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("storagetransferjob"), name)
	}
	return obj.(*v1alpha1.StorageTransferJob), nil
}
