/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/google/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ComputeDiskResourcePolicyAttachmentLister helps list ComputeDiskResourcePolicyAttachments.
type ComputeDiskResourcePolicyAttachmentLister interface {
	// List lists all ComputeDiskResourcePolicyAttachments in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ComputeDiskResourcePolicyAttachment, err error)
	// ComputeDiskResourcePolicyAttachments returns an object that can list and get ComputeDiskResourcePolicyAttachments.
	ComputeDiskResourcePolicyAttachments(namespace string) ComputeDiskResourcePolicyAttachmentNamespaceLister
	ComputeDiskResourcePolicyAttachmentListerExpansion
}

// computeDiskResourcePolicyAttachmentLister implements the ComputeDiskResourcePolicyAttachmentLister interface.
type computeDiskResourcePolicyAttachmentLister struct {
	indexer cache.Indexer
}

// NewComputeDiskResourcePolicyAttachmentLister returns a new ComputeDiskResourcePolicyAttachmentLister.
func NewComputeDiskResourcePolicyAttachmentLister(indexer cache.Indexer) ComputeDiskResourcePolicyAttachmentLister {
	return &computeDiskResourcePolicyAttachmentLister{indexer: indexer}
}

// List lists all ComputeDiskResourcePolicyAttachments in the indexer.
func (s *computeDiskResourcePolicyAttachmentLister) List(selector labels.Selector) (ret []*v1alpha1.ComputeDiskResourcePolicyAttachment, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ComputeDiskResourcePolicyAttachment))
	})
	return ret, err
}

// ComputeDiskResourcePolicyAttachments returns an object that can list and get ComputeDiskResourcePolicyAttachments.
func (s *computeDiskResourcePolicyAttachmentLister) ComputeDiskResourcePolicyAttachments(namespace string) ComputeDiskResourcePolicyAttachmentNamespaceLister {
	return computeDiskResourcePolicyAttachmentNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ComputeDiskResourcePolicyAttachmentNamespaceLister helps list and get ComputeDiskResourcePolicyAttachments.
type ComputeDiskResourcePolicyAttachmentNamespaceLister interface {
	// List lists all ComputeDiskResourcePolicyAttachments in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ComputeDiskResourcePolicyAttachment, err error)
	// Get retrieves the ComputeDiskResourcePolicyAttachment from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ComputeDiskResourcePolicyAttachment, error)
	ComputeDiskResourcePolicyAttachmentNamespaceListerExpansion
}

// computeDiskResourcePolicyAttachmentNamespaceLister implements the ComputeDiskResourcePolicyAttachmentNamespaceLister
// interface.
type computeDiskResourcePolicyAttachmentNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ComputeDiskResourcePolicyAttachments in the indexer for a given namespace.
func (s computeDiskResourcePolicyAttachmentNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ComputeDiskResourcePolicyAttachment, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ComputeDiskResourcePolicyAttachment))
	})
	return ret, err
}

// Get retrieves the ComputeDiskResourcePolicyAttachment from the indexer for a given namespace and name.
func (s computeDiskResourcePolicyAttachmentNamespaceLister) Get(name string) (*v1alpha1.ComputeDiskResourcePolicyAttachment, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("computediskresourcepolicyattachment"), name)
	}
	return obj.(*v1alpha1.ComputeDiskResourcePolicyAttachment), nil
}
