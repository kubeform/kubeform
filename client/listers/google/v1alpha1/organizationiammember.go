/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/google/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// OrganizationIamMemberLister helps list OrganizationIamMembers.
type OrganizationIamMemberLister interface {
	// List lists all OrganizationIamMembers in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.OrganizationIamMember, err error)
	// OrganizationIamMembers returns an object that can list and get OrganizationIamMembers.
	OrganizationIamMembers(namespace string) OrganizationIamMemberNamespaceLister
	OrganizationIamMemberListerExpansion
}

// organizationIamMemberLister implements the OrganizationIamMemberLister interface.
type organizationIamMemberLister struct {
	indexer cache.Indexer
}

// NewOrganizationIamMemberLister returns a new OrganizationIamMemberLister.
func NewOrganizationIamMemberLister(indexer cache.Indexer) OrganizationIamMemberLister {
	return &organizationIamMemberLister{indexer: indexer}
}

// List lists all OrganizationIamMembers in the indexer.
func (s *organizationIamMemberLister) List(selector labels.Selector) (ret []*v1alpha1.OrganizationIamMember, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.OrganizationIamMember))
	})
	return ret, err
}

// OrganizationIamMembers returns an object that can list and get OrganizationIamMembers.
func (s *organizationIamMemberLister) OrganizationIamMembers(namespace string) OrganizationIamMemberNamespaceLister {
	return organizationIamMemberNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// OrganizationIamMemberNamespaceLister helps list and get OrganizationIamMembers.
type OrganizationIamMemberNamespaceLister interface {
	// List lists all OrganizationIamMembers in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.OrganizationIamMember, err error)
	// Get retrieves the OrganizationIamMember from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.OrganizationIamMember, error)
	OrganizationIamMemberNamespaceListerExpansion
}

// organizationIamMemberNamespaceLister implements the OrganizationIamMemberNamespaceLister
// interface.
type organizationIamMemberNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all OrganizationIamMembers in the indexer for a given namespace.
func (s organizationIamMemberNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.OrganizationIamMember, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.OrganizationIamMember))
	})
	return ret, err
}

// Get retrieves the OrganizationIamMember from the indexer for a given namespace and name.
func (s organizationIamMemberNamespaceLister) Get(name string) (*v1alpha1.OrganizationIamMember, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("organizationiammember"), name)
	}
	return obj.(*v1alpha1.OrganizationIamMember), nil
}
