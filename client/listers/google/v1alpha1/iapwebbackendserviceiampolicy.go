/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/google/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// IapWebBackendServiceIamPolicyLister helps list IapWebBackendServiceIamPolicies.
type IapWebBackendServiceIamPolicyLister interface {
	// List lists all IapWebBackendServiceIamPolicies in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.IapWebBackendServiceIamPolicy, err error)
	// IapWebBackendServiceIamPolicies returns an object that can list and get IapWebBackendServiceIamPolicies.
	IapWebBackendServiceIamPolicies(namespace string) IapWebBackendServiceIamPolicyNamespaceLister
	IapWebBackendServiceIamPolicyListerExpansion
}

// iapWebBackendServiceIamPolicyLister implements the IapWebBackendServiceIamPolicyLister interface.
type iapWebBackendServiceIamPolicyLister struct {
	indexer cache.Indexer
}

// NewIapWebBackendServiceIamPolicyLister returns a new IapWebBackendServiceIamPolicyLister.
func NewIapWebBackendServiceIamPolicyLister(indexer cache.Indexer) IapWebBackendServiceIamPolicyLister {
	return &iapWebBackendServiceIamPolicyLister{indexer: indexer}
}

// List lists all IapWebBackendServiceIamPolicies in the indexer.
func (s *iapWebBackendServiceIamPolicyLister) List(selector labels.Selector) (ret []*v1alpha1.IapWebBackendServiceIamPolicy, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.IapWebBackendServiceIamPolicy))
	})
	return ret, err
}

// IapWebBackendServiceIamPolicies returns an object that can list and get IapWebBackendServiceIamPolicies.
func (s *iapWebBackendServiceIamPolicyLister) IapWebBackendServiceIamPolicies(namespace string) IapWebBackendServiceIamPolicyNamespaceLister {
	return iapWebBackendServiceIamPolicyNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// IapWebBackendServiceIamPolicyNamespaceLister helps list and get IapWebBackendServiceIamPolicies.
type IapWebBackendServiceIamPolicyNamespaceLister interface {
	// List lists all IapWebBackendServiceIamPolicies in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.IapWebBackendServiceIamPolicy, err error)
	// Get retrieves the IapWebBackendServiceIamPolicy from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.IapWebBackendServiceIamPolicy, error)
	IapWebBackendServiceIamPolicyNamespaceListerExpansion
}

// iapWebBackendServiceIamPolicyNamespaceLister implements the IapWebBackendServiceIamPolicyNamespaceLister
// interface.
type iapWebBackendServiceIamPolicyNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all IapWebBackendServiceIamPolicies in the indexer for a given namespace.
func (s iapWebBackendServiceIamPolicyNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.IapWebBackendServiceIamPolicy, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.IapWebBackendServiceIamPolicy))
	})
	return ret, err
}

// Get retrieves the IapWebBackendServiceIamPolicy from the indexer for a given namespace and name.
func (s iapWebBackendServiceIamPolicyNamespaceLister) Get(name string) (*v1alpha1.IapWebBackendServiceIamPolicy, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("iapwebbackendserviceiampolicy"), name)
	}
	return obj.(*v1alpha1.IapWebBackendServiceIamPolicy), nil
}
