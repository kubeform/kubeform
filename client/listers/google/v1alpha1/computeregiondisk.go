/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/google/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ComputeRegionDiskLister helps list ComputeRegionDisks.
type ComputeRegionDiskLister interface {
	// List lists all ComputeRegionDisks in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ComputeRegionDisk, err error)
	// ComputeRegionDisks returns an object that can list and get ComputeRegionDisks.
	ComputeRegionDisks(namespace string) ComputeRegionDiskNamespaceLister
	ComputeRegionDiskListerExpansion
}

// computeRegionDiskLister implements the ComputeRegionDiskLister interface.
type computeRegionDiskLister struct {
	indexer cache.Indexer
}

// NewComputeRegionDiskLister returns a new ComputeRegionDiskLister.
func NewComputeRegionDiskLister(indexer cache.Indexer) ComputeRegionDiskLister {
	return &computeRegionDiskLister{indexer: indexer}
}

// List lists all ComputeRegionDisks in the indexer.
func (s *computeRegionDiskLister) List(selector labels.Selector) (ret []*v1alpha1.ComputeRegionDisk, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ComputeRegionDisk))
	})
	return ret, err
}

// ComputeRegionDisks returns an object that can list and get ComputeRegionDisks.
func (s *computeRegionDiskLister) ComputeRegionDisks(namespace string) ComputeRegionDiskNamespaceLister {
	return computeRegionDiskNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ComputeRegionDiskNamespaceLister helps list and get ComputeRegionDisks.
type ComputeRegionDiskNamespaceLister interface {
	// List lists all ComputeRegionDisks in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ComputeRegionDisk, err error)
	// Get retrieves the ComputeRegionDisk from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ComputeRegionDisk, error)
	ComputeRegionDiskNamespaceListerExpansion
}

// computeRegionDiskNamespaceLister implements the ComputeRegionDiskNamespaceLister
// interface.
type computeRegionDiskNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ComputeRegionDisks in the indexer for a given namespace.
func (s computeRegionDiskNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ComputeRegionDisk, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ComputeRegionDisk))
	})
	return ret, err
}

// Get retrieves the ComputeRegionDisk from the indexer for a given namespace and name.
func (s computeRegionDiskNamespaceLister) Get(name string) (*v1alpha1.ComputeRegionDisk, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("computeregiondisk"), name)
	}
	return obj.(*v1alpha1.ComputeRegionDisk), nil
}
