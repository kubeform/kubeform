/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/google/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ComputeNetworkEndpointGroupLister helps list ComputeNetworkEndpointGroups.
type ComputeNetworkEndpointGroupLister interface {
	// List lists all ComputeNetworkEndpointGroups in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ComputeNetworkEndpointGroup, err error)
	// ComputeNetworkEndpointGroups returns an object that can list and get ComputeNetworkEndpointGroups.
	ComputeNetworkEndpointGroups(namespace string) ComputeNetworkEndpointGroupNamespaceLister
	ComputeNetworkEndpointGroupListerExpansion
}

// computeNetworkEndpointGroupLister implements the ComputeNetworkEndpointGroupLister interface.
type computeNetworkEndpointGroupLister struct {
	indexer cache.Indexer
}

// NewComputeNetworkEndpointGroupLister returns a new ComputeNetworkEndpointGroupLister.
func NewComputeNetworkEndpointGroupLister(indexer cache.Indexer) ComputeNetworkEndpointGroupLister {
	return &computeNetworkEndpointGroupLister{indexer: indexer}
}

// List lists all ComputeNetworkEndpointGroups in the indexer.
func (s *computeNetworkEndpointGroupLister) List(selector labels.Selector) (ret []*v1alpha1.ComputeNetworkEndpointGroup, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ComputeNetworkEndpointGroup))
	})
	return ret, err
}

// ComputeNetworkEndpointGroups returns an object that can list and get ComputeNetworkEndpointGroups.
func (s *computeNetworkEndpointGroupLister) ComputeNetworkEndpointGroups(namespace string) ComputeNetworkEndpointGroupNamespaceLister {
	return computeNetworkEndpointGroupNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ComputeNetworkEndpointGroupNamespaceLister helps list and get ComputeNetworkEndpointGroups.
type ComputeNetworkEndpointGroupNamespaceLister interface {
	// List lists all ComputeNetworkEndpointGroups in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ComputeNetworkEndpointGroup, err error)
	// Get retrieves the ComputeNetworkEndpointGroup from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ComputeNetworkEndpointGroup, error)
	ComputeNetworkEndpointGroupNamespaceListerExpansion
}

// computeNetworkEndpointGroupNamespaceLister implements the ComputeNetworkEndpointGroupNamespaceLister
// interface.
type computeNetworkEndpointGroupNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ComputeNetworkEndpointGroups in the indexer for a given namespace.
func (s computeNetworkEndpointGroupNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ComputeNetworkEndpointGroup, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ComputeNetworkEndpointGroup))
	})
	return ret, err
}

// Get retrieves the ComputeNetworkEndpointGroup from the indexer for a given namespace and name.
func (s computeNetworkEndpointGroupNamespaceLister) Get(name string) (*v1alpha1.ComputeNetworkEndpointGroup, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("computenetworkendpointgroup"), name)
	}
	return obj.(*v1alpha1.ComputeNetworkEndpointGroup), nil
}
