/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/google/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ComputeSharedVpcServiceProjectLister helps list ComputeSharedVpcServiceProjects.
type ComputeSharedVpcServiceProjectLister interface {
	// List lists all ComputeSharedVpcServiceProjects in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ComputeSharedVpcServiceProject, err error)
	// ComputeSharedVpcServiceProjects returns an object that can list and get ComputeSharedVpcServiceProjects.
	ComputeSharedVpcServiceProjects(namespace string) ComputeSharedVpcServiceProjectNamespaceLister
	ComputeSharedVpcServiceProjectListerExpansion
}

// computeSharedVpcServiceProjectLister implements the ComputeSharedVpcServiceProjectLister interface.
type computeSharedVpcServiceProjectLister struct {
	indexer cache.Indexer
}

// NewComputeSharedVpcServiceProjectLister returns a new ComputeSharedVpcServiceProjectLister.
func NewComputeSharedVpcServiceProjectLister(indexer cache.Indexer) ComputeSharedVpcServiceProjectLister {
	return &computeSharedVpcServiceProjectLister{indexer: indexer}
}

// List lists all ComputeSharedVpcServiceProjects in the indexer.
func (s *computeSharedVpcServiceProjectLister) List(selector labels.Selector) (ret []*v1alpha1.ComputeSharedVpcServiceProject, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ComputeSharedVpcServiceProject))
	})
	return ret, err
}

// ComputeSharedVpcServiceProjects returns an object that can list and get ComputeSharedVpcServiceProjects.
func (s *computeSharedVpcServiceProjectLister) ComputeSharedVpcServiceProjects(namespace string) ComputeSharedVpcServiceProjectNamespaceLister {
	return computeSharedVpcServiceProjectNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ComputeSharedVpcServiceProjectNamespaceLister helps list and get ComputeSharedVpcServiceProjects.
type ComputeSharedVpcServiceProjectNamespaceLister interface {
	// List lists all ComputeSharedVpcServiceProjects in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ComputeSharedVpcServiceProject, err error)
	// Get retrieves the ComputeSharedVpcServiceProject from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ComputeSharedVpcServiceProject, error)
	ComputeSharedVpcServiceProjectNamespaceListerExpansion
}

// computeSharedVpcServiceProjectNamespaceLister implements the ComputeSharedVpcServiceProjectNamespaceLister
// interface.
type computeSharedVpcServiceProjectNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ComputeSharedVpcServiceProjects in the indexer for a given namespace.
func (s computeSharedVpcServiceProjectNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ComputeSharedVpcServiceProject, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ComputeSharedVpcServiceProject))
	})
	return ret, err
}

// Get retrieves the ComputeSharedVpcServiceProject from the indexer for a given namespace and name.
func (s computeSharedVpcServiceProjectNamespaceLister) Get(name string) (*v1alpha1.ComputeSharedVpcServiceProject, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("computesharedvpcserviceproject"), name)
	}
	return obj.(*v1alpha1.ComputeSharedVpcServiceProject), nil
}
