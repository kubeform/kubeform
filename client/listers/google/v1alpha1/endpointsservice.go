/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/google/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// EndpointsServiceLister helps list EndpointsServices.
type EndpointsServiceLister interface {
	// List lists all EndpointsServices in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.EndpointsService, err error)
	// EndpointsServices returns an object that can list and get EndpointsServices.
	EndpointsServices(namespace string) EndpointsServiceNamespaceLister
	EndpointsServiceListerExpansion
}

// endpointsServiceLister implements the EndpointsServiceLister interface.
type endpointsServiceLister struct {
	indexer cache.Indexer
}

// NewEndpointsServiceLister returns a new EndpointsServiceLister.
func NewEndpointsServiceLister(indexer cache.Indexer) EndpointsServiceLister {
	return &endpointsServiceLister{indexer: indexer}
}

// List lists all EndpointsServices in the indexer.
func (s *endpointsServiceLister) List(selector labels.Selector) (ret []*v1alpha1.EndpointsService, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.EndpointsService))
	})
	return ret, err
}

// EndpointsServices returns an object that can list and get EndpointsServices.
func (s *endpointsServiceLister) EndpointsServices(namespace string) EndpointsServiceNamespaceLister {
	return endpointsServiceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// EndpointsServiceNamespaceLister helps list and get EndpointsServices.
type EndpointsServiceNamespaceLister interface {
	// List lists all EndpointsServices in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.EndpointsService, err error)
	// Get retrieves the EndpointsService from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.EndpointsService, error)
	EndpointsServiceNamespaceListerExpansion
}

// endpointsServiceNamespaceLister implements the EndpointsServiceNamespaceLister
// interface.
type endpointsServiceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all EndpointsServices in the indexer for a given namespace.
func (s endpointsServiceNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.EndpointsService, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.EndpointsService))
	})
	return ret, err
}

// Get retrieves the EndpointsService from the indexer for a given namespace and name.
func (s endpointsServiceNamespaceLister) Get(name string) (*v1alpha1.EndpointsService, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("endpointsservice"), name)
	}
	return obj.(*v1alpha1.EndpointsService), nil
}
