/*
Copyright 2019 The KubeDB Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/kubeform/apis/google/v1alpha1"
)

// GoogleCloudbuildTriggerLister helps list GoogleCloudbuildTriggers.
type GoogleCloudbuildTriggerLister interface {
	// List lists all GoogleCloudbuildTriggers in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.GoogleCloudbuildTrigger, err error)
	// Get retrieves the GoogleCloudbuildTrigger from the index for a given name.
	Get(name string) (*v1alpha1.GoogleCloudbuildTrigger, error)
	GoogleCloudbuildTriggerListerExpansion
}

// googleCloudbuildTriggerLister implements the GoogleCloudbuildTriggerLister interface.
type googleCloudbuildTriggerLister struct {
	indexer cache.Indexer
}

// NewGoogleCloudbuildTriggerLister returns a new GoogleCloudbuildTriggerLister.
func NewGoogleCloudbuildTriggerLister(indexer cache.Indexer) GoogleCloudbuildTriggerLister {
	return &googleCloudbuildTriggerLister{indexer: indexer}
}

// List lists all GoogleCloudbuildTriggers in the indexer.
func (s *googleCloudbuildTriggerLister) List(selector labels.Selector) (ret []*v1alpha1.GoogleCloudbuildTrigger, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.GoogleCloudbuildTrigger))
	})
	return ret, err
}

// Get retrieves the GoogleCloudbuildTrigger from the index for a given name.
func (s *googleCloudbuildTriggerLister) Get(name string) (*v1alpha1.GoogleCloudbuildTrigger, error) {
	obj, exists, err := s.indexer.GetByKey(name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("googlecloudbuildtrigger"), name)
	}
	return obj.(*v1alpha1.GoogleCloudbuildTrigger), nil
}
