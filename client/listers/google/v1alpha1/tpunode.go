/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/google/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// TpuNodeLister helps list TpuNodes.
type TpuNodeLister interface {
	// List lists all TpuNodes in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.TpuNode, err error)
	// TpuNodes returns an object that can list and get TpuNodes.
	TpuNodes(namespace string) TpuNodeNamespaceLister
	TpuNodeListerExpansion
}

// tpuNodeLister implements the TpuNodeLister interface.
type tpuNodeLister struct {
	indexer cache.Indexer
}

// NewTpuNodeLister returns a new TpuNodeLister.
func NewTpuNodeLister(indexer cache.Indexer) TpuNodeLister {
	return &tpuNodeLister{indexer: indexer}
}

// List lists all TpuNodes in the indexer.
func (s *tpuNodeLister) List(selector labels.Selector) (ret []*v1alpha1.TpuNode, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TpuNode))
	})
	return ret, err
}

// TpuNodes returns an object that can list and get TpuNodes.
func (s *tpuNodeLister) TpuNodes(namespace string) TpuNodeNamespaceLister {
	return tpuNodeNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// TpuNodeNamespaceLister helps list and get TpuNodes.
type TpuNodeNamespaceLister interface {
	// List lists all TpuNodes in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.TpuNode, err error)
	// Get retrieves the TpuNode from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.TpuNode, error)
	TpuNodeNamespaceListerExpansion
}

// tpuNodeNamespaceLister implements the TpuNodeNamespaceLister
// interface.
type tpuNodeNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all TpuNodes in the indexer for a given namespace.
func (s tpuNodeNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.TpuNode, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TpuNode))
	})
	return ret, err
}

// Get retrieves the TpuNode from the indexer for a given namespace and name.
func (s tpuNodeNamespaceLister) Get(name string) (*v1alpha1.TpuNode, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("tpunode"), name)
	}
	return obj.(*v1alpha1.TpuNode), nil
}
