/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/google/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ComputeRouterLister helps list ComputeRouters.
type ComputeRouterLister interface {
	// List lists all ComputeRouters in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ComputeRouter, err error)
	// ComputeRouters returns an object that can list and get ComputeRouters.
	ComputeRouters(namespace string) ComputeRouterNamespaceLister
	ComputeRouterListerExpansion
}

// computeRouterLister implements the ComputeRouterLister interface.
type computeRouterLister struct {
	indexer cache.Indexer
}

// NewComputeRouterLister returns a new ComputeRouterLister.
func NewComputeRouterLister(indexer cache.Indexer) ComputeRouterLister {
	return &computeRouterLister{indexer: indexer}
}

// List lists all ComputeRouters in the indexer.
func (s *computeRouterLister) List(selector labels.Selector) (ret []*v1alpha1.ComputeRouter, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ComputeRouter))
	})
	return ret, err
}

// ComputeRouters returns an object that can list and get ComputeRouters.
func (s *computeRouterLister) ComputeRouters(namespace string) ComputeRouterNamespaceLister {
	return computeRouterNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ComputeRouterNamespaceLister helps list and get ComputeRouters.
type ComputeRouterNamespaceLister interface {
	// List lists all ComputeRouters in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ComputeRouter, err error)
	// Get retrieves the ComputeRouter from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ComputeRouter, error)
	ComputeRouterNamespaceListerExpansion
}

// computeRouterNamespaceLister implements the ComputeRouterNamespaceLister
// interface.
type computeRouterNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ComputeRouters in the indexer for a given namespace.
func (s computeRouterNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ComputeRouter, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ComputeRouter))
	})
	return ret, err
}

// Get retrieves the ComputeRouter from the indexer for a given namespace and name.
func (s computeRouterNamespaceLister) Get(name string) (*v1alpha1.ComputeRouter, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("computerouter"), name)
	}
	return obj.(*v1alpha1.ComputeRouter), nil
}
