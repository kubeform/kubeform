/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/google/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// DataprocClusterIamMemberLister helps list DataprocClusterIamMembers.
type DataprocClusterIamMemberLister interface {
	// List lists all DataprocClusterIamMembers in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.DataprocClusterIamMember, err error)
	// DataprocClusterIamMembers returns an object that can list and get DataprocClusterIamMembers.
	DataprocClusterIamMembers(namespace string) DataprocClusterIamMemberNamespaceLister
	DataprocClusterIamMemberListerExpansion
}

// dataprocClusterIamMemberLister implements the DataprocClusterIamMemberLister interface.
type dataprocClusterIamMemberLister struct {
	indexer cache.Indexer
}

// NewDataprocClusterIamMemberLister returns a new DataprocClusterIamMemberLister.
func NewDataprocClusterIamMemberLister(indexer cache.Indexer) DataprocClusterIamMemberLister {
	return &dataprocClusterIamMemberLister{indexer: indexer}
}

// List lists all DataprocClusterIamMembers in the indexer.
func (s *dataprocClusterIamMemberLister) List(selector labels.Selector) (ret []*v1alpha1.DataprocClusterIamMember, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DataprocClusterIamMember))
	})
	return ret, err
}

// DataprocClusterIamMembers returns an object that can list and get DataprocClusterIamMembers.
func (s *dataprocClusterIamMemberLister) DataprocClusterIamMembers(namespace string) DataprocClusterIamMemberNamespaceLister {
	return dataprocClusterIamMemberNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DataprocClusterIamMemberNamespaceLister helps list and get DataprocClusterIamMembers.
type DataprocClusterIamMemberNamespaceLister interface {
	// List lists all DataprocClusterIamMembers in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.DataprocClusterIamMember, err error)
	// Get retrieves the DataprocClusterIamMember from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.DataprocClusterIamMember, error)
	DataprocClusterIamMemberNamespaceListerExpansion
}

// dataprocClusterIamMemberNamespaceLister implements the DataprocClusterIamMemberNamespaceLister
// interface.
type dataprocClusterIamMemberNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DataprocClusterIamMembers in the indexer for a given namespace.
func (s dataprocClusterIamMemberNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.DataprocClusterIamMember, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DataprocClusterIamMember))
	})
	return ret, err
}

// Get retrieves the DataprocClusterIamMember from the indexer for a given namespace and name.
func (s dataprocClusterIamMemberNamespaceLister) Get(name string) (*v1alpha1.DataprocClusterIamMember, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("dataprocclusteriammember"), name)
	}
	return obj.(*v1alpha1.DataprocClusterIamMember), nil
}
