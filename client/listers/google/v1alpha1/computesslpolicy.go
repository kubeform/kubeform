/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/kubeform/apis/google/v1alpha1"
)

// ComputeSSLPolicyLister helps list ComputeSSLPolicies.
type ComputeSSLPolicyLister interface {
	// List lists all ComputeSSLPolicies in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ComputeSSLPolicy, err error)
	// ComputeSSLPolicies returns an object that can list and get ComputeSSLPolicies.
	ComputeSSLPolicies(namespace string) ComputeSSLPolicyNamespaceLister
	ComputeSSLPolicyListerExpansion
}

// computeSSLPolicyLister implements the ComputeSSLPolicyLister interface.
type computeSSLPolicyLister struct {
	indexer cache.Indexer
}

// NewComputeSSLPolicyLister returns a new ComputeSSLPolicyLister.
func NewComputeSSLPolicyLister(indexer cache.Indexer) ComputeSSLPolicyLister {
	return &computeSSLPolicyLister{indexer: indexer}
}

// List lists all ComputeSSLPolicies in the indexer.
func (s *computeSSLPolicyLister) List(selector labels.Selector) (ret []*v1alpha1.ComputeSSLPolicy, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ComputeSSLPolicy))
	})
	return ret, err
}

// ComputeSSLPolicies returns an object that can list and get ComputeSSLPolicies.
func (s *computeSSLPolicyLister) ComputeSSLPolicies(namespace string) ComputeSSLPolicyNamespaceLister {
	return computeSSLPolicyNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ComputeSSLPolicyNamespaceLister helps list and get ComputeSSLPolicies.
type ComputeSSLPolicyNamespaceLister interface {
	// List lists all ComputeSSLPolicies in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ComputeSSLPolicy, err error)
	// Get retrieves the ComputeSSLPolicy from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ComputeSSLPolicy, error)
	ComputeSSLPolicyNamespaceListerExpansion
}

// computeSSLPolicyNamespaceLister implements the ComputeSSLPolicyNamespaceLister
// interface.
type computeSSLPolicyNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ComputeSSLPolicies in the indexer for a given namespace.
func (s computeSSLPolicyNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ComputeSSLPolicy, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ComputeSSLPolicy))
	})
	return ret, err
}

// Get retrieves the ComputeSSLPolicy from the indexer for a given namespace and name.
func (s computeSSLPolicyNamespaceLister) Get(name string) (*v1alpha1.ComputeSSLPolicy, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("computesslpolicy"), name)
	}
	return obj.(*v1alpha1.ComputeSSLPolicy), nil
}
