/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/google/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// IapWebTypeAppEngineIamMemberLister helps list IapWebTypeAppEngineIamMembers.
type IapWebTypeAppEngineIamMemberLister interface {
	// List lists all IapWebTypeAppEngineIamMembers in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.IapWebTypeAppEngineIamMember, err error)
	// IapWebTypeAppEngineIamMembers returns an object that can list and get IapWebTypeAppEngineIamMembers.
	IapWebTypeAppEngineIamMembers(namespace string) IapWebTypeAppEngineIamMemberNamespaceLister
	IapWebTypeAppEngineIamMemberListerExpansion
}

// iapWebTypeAppEngineIamMemberLister implements the IapWebTypeAppEngineIamMemberLister interface.
type iapWebTypeAppEngineIamMemberLister struct {
	indexer cache.Indexer
}

// NewIapWebTypeAppEngineIamMemberLister returns a new IapWebTypeAppEngineIamMemberLister.
func NewIapWebTypeAppEngineIamMemberLister(indexer cache.Indexer) IapWebTypeAppEngineIamMemberLister {
	return &iapWebTypeAppEngineIamMemberLister{indexer: indexer}
}

// List lists all IapWebTypeAppEngineIamMembers in the indexer.
func (s *iapWebTypeAppEngineIamMemberLister) List(selector labels.Selector) (ret []*v1alpha1.IapWebTypeAppEngineIamMember, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.IapWebTypeAppEngineIamMember))
	})
	return ret, err
}

// IapWebTypeAppEngineIamMembers returns an object that can list and get IapWebTypeAppEngineIamMembers.
func (s *iapWebTypeAppEngineIamMemberLister) IapWebTypeAppEngineIamMembers(namespace string) IapWebTypeAppEngineIamMemberNamespaceLister {
	return iapWebTypeAppEngineIamMemberNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// IapWebTypeAppEngineIamMemberNamespaceLister helps list and get IapWebTypeAppEngineIamMembers.
type IapWebTypeAppEngineIamMemberNamespaceLister interface {
	// List lists all IapWebTypeAppEngineIamMembers in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.IapWebTypeAppEngineIamMember, err error)
	// Get retrieves the IapWebTypeAppEngineIamMember from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.IapWebTypeAppEngineIamMember, error)
	IapWebTypeAppEngineIamMemberNamespaceListerExpansion
}

// iapWebTypeAppEngineIamMemberNamespaceLister implements the IapWebTypeAppEngineIamMemberNamespaceLister
// interface.
type iapWebTypeAppEngineIamMemberNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all IapWebTypeAppEngineIamMembers in the indexer for a given namespace.
func (s iapWebTypeAppEngineIamMemberNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.IapWebTypeAppEngineIamMember, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.IapWebTypeAppEngineIamMember))
	})
	return ret, err
}

// Get retrieves the IapWebTypeAppEngineIamMember from the indexer for a given namespace and name.
func (s iapWebTypeAppEngineIamMemberNamespaceLister) Get(name string) (*v1alpha1.IapWebTypeAppEngineIamMember, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("iapwebtypeappengineiammember"), name)
	}
	return obj.(*v1alpha1.IapWebTypeAppEngineIamMember), nil
}
