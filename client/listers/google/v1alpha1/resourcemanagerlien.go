/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/google/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ResourceManagerLienLister helps list ResourceManagerLiens.
type ResourceManagerLienLister interface {
	// List lists all ResourceManagerLiens in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ResourceManagerLien, err error)
	// ResourceManagerLiens returns an object that can list and get ResourceManagerLiens.
	ResourceManagerLiens(namespace string) ResourceManagerLienNamespaceLister
	ResourceManagerLienListerExpansion
}

// resourceManagerLienLister implements the ResourceManagerLienLister interface.
type resourceManagerLienLister struct {
	indexer cache.Indexer
}

// NewResourceManagerLienLister returns a new ResourceManagerLienLister.
func NewResourceManagerLienLister(indexer cache.Indexer) ResourceManagerLienLister {
	return &resourceManagerLienLister{indexer: indexer}
}

// List lists all ResourceManagerLiens in the indexer.
func (s *resourceManagerLienLister) List(selector labels.Selector) (ret []*v1alpha1.ResourceManagerLien, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ResourceManagerLien))
	})
	return ret, err
}

// ResourceManagerLiens returns an object that can list and get ResourceManagerLiens.
func (s *resourceManagerLienLister) ResourceManagerLiens(namespace string) ResourceManagerLienNamespaceLister {
	return resourceManagerLienNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ResourceManagerLienNamespaceLister helps list and get ResourceManagerLiens.
type ResourceManagerLienNamespaceLister interface {
	// List lists all ResourceManagerLiens in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ResourceManagerLien, err error)
	// Get retrieves the ResourceManagerLien from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ResourceManagerLien, error)
	ResourceManagerLienNamespaceListerExpansion
}

// resourceManagerLienNamespaceLister implements the ResourceManagerLienNamespaceLister
// interface.
type resourceManagerLienNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ResourceManagerLiens in the indexer for a given namespace.
func (s resourceManagerLienNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ResourceManagerLien, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ResourceManagerLien))
	})
	return ret, err
}

// Get retrieves the ResourceManagerLien from the indexer for a given namespace and name.
func (s resourceManagerLienNamespaceLister) Get(name string) (*v1alpha1.ResourceManagerLien, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("resourcemanagerlien"), name)
	}
	return obj.(*v1alpha1.ResourceManagerLien), nil
}
