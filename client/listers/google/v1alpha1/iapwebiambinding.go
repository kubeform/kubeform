/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/google/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// IapWebIamBindingLister helps list IapWebIamBindings.
type IapWebIamBindingLister interface {
	// List lists all IapWebIamBindings in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.IapWebIamBinding, err error)
	// IapWebIamBindings returns an object that can list and get IapWebIamBindings.
	IapWebIamBindings(namespace string) IapWebIamBindingNamespaceLister
	IapWebIamBindingListerExpansion
}

// iapWebIamBindingLister implements the IapWebIamBindingLister interface.
type iapWebIamBindingLister struct {
	indexer cache.Indexer
}

// NewIapWebIamBindingLister returns a new IapWebIamBindingLister.
func NewIapWebIamBindingLister(indexer cache.Indexer) IapWebIamBindingLister {
	return &iapWebIamBindingLister{indexer: indexer}
}

// List lists all IapWebIamBindings in the indexer.
func (s *iapWebIamBindingLister) List(selector labels.Selector) (ret []*v1alpha1.IapWebIamBinding, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.IapWebIamBinding))
	})
	return ret, err
}

// IapWebIamBindings returns an object that can list and get IapWebIamBindings.
func (s *iapWebIamBindingLister) IapWebIamBindings(namespace string) IapWebIamBindingNamespaceLister {
	return iapWebIamBindingNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// IapWebIamBindingNamespaceLister helps list and get IapWebIamBindings.
type IapWebIamBindingNamespaceLister interface {
	// List lists all IapWebIamBindings in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.IapWebIamBinding, err error)
	// Get retrieves the IapWebIamBinding from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.IapWebIamBinding, error)
	IapWebIamBindingNamespaceListerExpansion
}

// iapWebIamBindingNamespaceLister implements the IapWebIamBindingNamespaceLister
// interface.
type iapWebIamBindingNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all IapWebIamBindings in the indexer for a given namespace.
func (s iapWebIamBindingNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.IapWebIamBinding, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.IapWebIamBinding))
	})
	return ret, err
}

// Get retrieves the IapWebIamBinding from the indexer for a given namespace and name.
func (s iapWebIamBindingNamespaceLister) Get(name string) (*v1alpha1.IapWebIamBinding, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("iapwebiambinding"), name)
	}
	return obj.(*v1alpha1.IapWebIamBinding), nil
}
