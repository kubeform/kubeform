/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/google/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ComputeNetworkEndpointLister helps list ComputeNetworkEndpoints.
type ComputeNetworkEndpointLister interface {
	// List lists all ComputeNetworkEndpoints in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ComputeNetworkEndpoint, err error)
	// ComputeNetworkEndpoints returns an object that can list and get ComputeNetworkEndpoints.
	ComputeNetworkEndpoints(namespace string) ComputeNetworkEndpointNamespaceLister
	ComputeNetworkEndpointListerExpansion
}

// computeNetworkEndpointLister implements the ComputeNetworkEndpointLister interface.
type computeNetworkEndpointLister struct {
	indexer cache.Indexer
}

// NewComputeNetworkEndpointLister returns a new ComputeNetworkEndpointLister.
func NewComputeNetworkEndpointLister(indexer cache.Indexer) ComputeNetworkEndpointLister {
	return &computeNetworkEndpointLister{indexer: indexer}
}

// List lists all ComputeNetworkEndpoints in the indexer.
func (s *computeNetworkEndpointLister) List(selector labels.Selector) (ret []*v1alpha1.ComputeNetworkEndpoint, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ComputeNetworkEndpoint))
	})
	return ret, err
}

// ComputeNetworkEndpoints returns an object that can list and get ComputeNetworkEndpoints.
func (s *computeNetworkEndpointLister) ComputeNetworkEndpoints(namespace string) ComputeNetworkEndpointNamespaceLister {
	return computeNetworkEndpointNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ComputeNetworkEndpointNamespaceLister helps list and get ComputeNetworkEndpoints.
type ComputeNetworkEndpointNamespaceLister interface {
	// List lists all ComputeNetworkEndpoints in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ComputeNetworkEndpoint, err error)
	// Get retrieves the ComputeNetworkEndpoint from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ComputeNetworkEndpoint, error)
	ComputeNetworkEndpointNamespaceListerExpansion
}

// computeNetworkEndpointNamespaceLister implements the ComputeNetworkEndpointNamespaceLister
// interface.
type computeNetworkEndpointNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ComputeNetworkEndpoints in the indexer for a given namespace.
func (s computeNetworkEndpointNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ComputeNetworkEndpoint, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ComputeNetworkEndpoint))
	})
	return ret, err
}

// Get retrieves the ComputeNetworkEndpoint from the indexer for a given namespace and name.
func (s computeNetworkEndpointNamespaceLister) Get(name string) (*v1alpha1.ComputeNetworkEndpoint, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("computenetworkendpoint"), name)
	}
	return obj.(*v1alpha1.ComputeNetworkEndpoint), nil
}
