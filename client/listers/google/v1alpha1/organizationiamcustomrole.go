/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/google/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// OrganizationIamCustomRoleLister helps list OrganizationIamCustomRoles.
type OrganizationIamCustomRoleLister interface {
	// List lists all OrganizationIamCustomRoles in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.OrganizationIamCustomRole, err error)
	// OrganizationIamCustomRoles returns an object that can list and get OrganizationIamCustomRoles.
	OrganizationIamCustomRoles(namespace string) OrganizationIamCustomRoleNamespaceLister
	OrganizationIamCustomRoleListerExpansion
}

// organizationIamCustomRoleLister implements the OrganizationIamCustomRoleLister interface.
type organizationIamCustomRoleLister struct {
	indexer cache.Indexer
}

// NewOrganizationIamCustomRoleLister returns a new OrganizationIamCustomRoleLister.
func NewOrganizationIamCustomRoleLister(indexer cache.Indexer) OrganizationIamCustomRoleLister {
	return &organizationIamCustomRoleLister{indexer: indexer}
}

// List lists all OrganizationIamCustomRoles in the indexer.
func (s *organizationIamCustomRoleLister) List(selector labels.Selector) (ret []*v1alpha1.OrganizationIamCustomRole, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.OrganizationIamCustomRole))
	})
	return ret, err
}

// OrganizationIamCustomRoles returns an object that can list and get OrganizationIamCustomRoles.
func (s *organizationIamCustomRoleLister) OrganizationIamCustomRoles(namespace string) OrganizationIamCustomRoleNamespaceLister {
	return organizationIamCustomRoleNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// OrganizationIamCustomRoleNamespaceLister helps list and get OrganizationIamCustomRoles.
type OrganizationIamCustomRoleNamespaceLister interface {
	// List lists all OrganizationIamCustomRoles in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.OrganizationIamCustomRole, err error)
	// Get retrieves the OrganizationIamCustomRole from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.OrganizationIamCustomRole, error)
	OrganizationIamCustomRoleNamespaceListerExpansion
}

// organizationIamCustomRoleNamespaceLister implements the OrganizationIamCustomRoleNamespaceLister
// interface.
type organizationIamCustomRoleNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all OrganizationIamCustomRoles in the indexer for a given namespace.
func (s organizationIamCustomRoleNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.OrganizationIamCustomRole, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.OrganizationIamCustomRole))
	})
	return ret, err
}

// Get retrieves the OrganizationIamCustomRole from the indexer for a given namespace and name.
func (s organizationIamCustomRoleNamespaceLister) Get(name string) (*v1alpha1.OrganizationIamCustomRole, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("organizationiamcustomrole"), name)
	}
	return obj.(*v1alpha1.OrganizationIamCustomRole), nil
}
