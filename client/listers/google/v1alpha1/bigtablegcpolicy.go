/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/google/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// BigtableGcPolicyLister helps list BigtableGcPolicies.
type BigtableGcPolicyLister interface {
	// List lists all BigtableGcPolicies in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.BigtableGcPolicy, err error)
	// BigtableGcPolicies returns an object that can list and get BigtableGcPolicies.
	BigtableGcPolicies(namespace string) BigtableGcPolicyNamespaceLister
	BigtableGcPolicyListerExpansion
}

// bigtableGcPolicyLister implements the BigtableGcPolicyLister interface.
type bigtableGcPolicyLister struct {
	indexer cache.Indexer
}

// NewBigtableGcPolicyLister returns a new BigtableGcPolicyLister.
func NewBigtableGcPolicyLister(indexer cache.Indexer) BigtableGcPolicyLister {
	return &bigtableGcPolicyLister{indexer: indexer}
}

// List lists all BigtableGcPolicies in the indexer.
func (s *bigtableGcPolicyLister) List(selector labels.Selector) (ret []*v1alpha1.BigtableGcPolicy, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.BigtableGcPolicy))
	})
	return ret, err
}

// BigtableGcPolicies returns an object that can list and get BigtableGcPolicies.
func (s *bigtableGcPolicyLister) BigtableGcPolicies(namespace string) BigtableGcPolicyNamespaceLister {
	return bigtableGcPolicyNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// BigtableGcPolicyNamespaceLister helps list and get BigtableGcPolicies.
type BigtableGcPolicyNamespaceLister interface {
	// List lists all BigtableGcPolicies in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.BigtableGcPolicy, err error)
	// Get retrieves the BigtableGcPolicy from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.BigtableGcPolicy, error)
	BigtableGcPolicyNamespaceListerExpansion
}

// bigtableGcPolicyNamespaceLister implements the BigtableGcPolicyNamespaceLister
// interface.
type bigtableGcPolicyNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all BigtableGcPolicies in the indexer for a given namespace.
func (s bigtableGcPolicyNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.BigtableGcPolicy, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.BigtableGcPolicy))
	})
	return ret, err
}

// Get retrieves the BigtableGcPolicy from the indexer for a given namespace and name.
func (s bigtableGcPolicyNamespaceLister) Get(name string) (*v1alpha1.BigtableGcPolicy, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("bigtablegcpolicy"), name)
	}
	return obj.(*v1alpha1.BigtableGcPolicy), nil
}
