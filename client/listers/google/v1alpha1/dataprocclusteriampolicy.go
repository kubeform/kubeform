/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/google/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// DataprocClusterIamPolicyLister helps list DataprocClusterIamPolicies.
type DataprocClusterIamPolicyLister interface {
	// List lists all DataprocClusterIamPolicies in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.DataprocClusterIamPolicy, err error)
	// DataprocClusterIamPolicies returns an object that can list and get DataprocClusterIamPolicies.
	DataprocClusterIamPolicies(namespace string) DataprocClusterIamPolicyNamespaceLister
	DataprocClusterIamPolicyListerExpansion
}

// dataprocClusterIamPolicyLister implements the DataprocClusterIamPolicyLister interface.
type dataprocClusterIamPolicyLister struct {
	indexer cache.Indexer
}

// NewDataprocClusterIamPolicyLister returns a new DataprocClusterIamPolicyLister.
func NewDataprocClusterIamPolicyLister(indexer cache.Indexer) DataprocClusterIamPolicyLister {
	return &dataprocClusterIamPolicyLister{indexer: indexer}
}

// List lists all DataprocClusterIamPolicies in the indexer.
func (s *dataprocClusterIamPolicyLister) List(selector labels.Selector) (ret []*v1alpha1.DataprocClusterIamPolicy, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DataprocClusterIamPolicy))
	})
	return ret, err
}

// DataprocClusterIamPolicies returns an object that can list and get DataprocClusterIamPolicies.
func (s *dataprocClusterIamPolicyLister) DataprocClusterIamPolicies(namespace string) DataprocClusterIamPolicyNamespaceLister {
	return dataprocClusterIamPolicyNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DataprocClusterIamPolicyNamespaceLister helps list and get DataprocClusterIamPolicies.
type DataprocClusterIamPolicyNamespaceLister interface {
	// List lists all DataprocClusterIamPolicies in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.DataprocClusterIamPolicy, err error)
	// Get retrieves the DataprocClusterIamPolicy from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.DataprocClusterIamPolicy, error)
	DataprocClusterIamPolicyNamespaceListerExpansion
}

// dataprocClusterIamPolicyNamespaceLister implements the DataprocClusterIamPolicyNamespaceLister
// interface.
type dataprocClusterIamPolicyNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DataprocClusterIamPolicies in the indexer for a given namespace.
func (s dataprocClusterIamPolicyNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.DataprocClusterIamPolicy, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DataprocClusterIamPolicy))
	})
	return ret, err
}

// Get retrieves the DataprocClusterIamPolicy from the indexer for a given namespace and name.
func (s dataprocClusterIamPolicyNamespaceLister) Get(name string) (*v1alpha1.DataprocClusterIamPolicy, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("dataprocclusteriampolicy"), name)
	}
	return obj.(*v1alpha1.DataprocClusterIamPolicy), nil
}
