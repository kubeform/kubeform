/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/google/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// IapWebIamPolicyLister helps list IapWebIamPolicies.
type IapWebIamPolicyLister interface {
	// List lists all IapWebIamPolicies in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.IapWebIamPolicy, err error)
	// IapWebIamPolicies returns an object that can list and get IapWebIamPolicies.
	IapWebIamPolicies(namespace string) IapWebIamPolicyNamespaceLister
	IapWebIamPolicyListerExpansion
}

// iapWebIamPolicyLister implements the IapWebIamPolicyLister interface.
type iapWebIamPolicyLister struct {
	indexer cache.Indexer
}

// NewIapWebIamPolicyLister returns a new IapWebIamPolicyLister.
func NewIapWebIamPolicyLister(indexer cache.Indexer) IapWebIamPolicyLister {
	return &iapWebIamPolicyLister{indexer: indexer}
}

// List lists all IapWebIamPolicies in the indexer.
func (s *iapWebIamPolicyLister) List(selector labels.Selector) (ret []*v1alpha1.IapWebIamPolicy, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.IapWebIamPolicy))
	})
	return ret, err
}

// IapWebIamPolicies returns an object that can list and get IapWebIamPolicies.
func (s *iapWebIamPolicyLister) IapWebIamPolicies(namespace string) IapWebIamPolicyNamespaceLister {
	return iapWebIamPolicyNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// IapWebIamPolicyNamespaceLister helps list and get IapWebIamPolicies.
type IapWebIamPolicyNamespaceLister interface {
	// List lists all IapWebIamPolicies in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.IapWebIamPolicy, err error)
	// Get retrieves the IapWebIamPolicy from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.IapWebIamPolicy, error)
	IapWebIamPolicyNamespaceListerExpansion
}

// iapWebIamPolicyNamespaceLister implements the IapWebIamPolicyNamespaceLister
// interface.
type iapWebIamPolicyNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all IapWebIamPolicies in the indexer for a given namespace.
func (s iapWebIamPolicyNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.IapWebIamPolicy, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.IapWebIamPolicy))
	})
	return ret, err
}

// Get retrieves the IapWebIamPolicy from the indexer for a given namespace and name.
func (s iapWebIamPolicyNamespaceLister) Get(name string) (*v1alpha1.IapWebIamPolicy, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("iapwebiampolicy"), name)
	}
	return obj.(*v1alpha1.IapWebIamPolicy), nil
}
