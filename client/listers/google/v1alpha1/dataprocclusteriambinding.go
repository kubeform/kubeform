/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/google/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// DataprocClusterIamBindingLister helps list DataprocClusterIamBindings.
type DataprocClusterIamBindingLister interface {
	// List lists all DataprocClusterIamBindings in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.DataprocClusterIamBinding, err error)
	// DataprocClusterIamBindings returns an object that can list and get DataprocClusterIamBindings.
	DataprocClusterIamBindings(namespace string) DataprocClusterIamBindingNamespaceLister
	DataprocClusterIamBindingListerExpansion
}

// dataprocClusterIamBindingLister implements the DataprocClusterIamBindingLister interface.
type dataprocClusterIamBindingLister struct {
	indexer cache.Indexer
}

// NewDataprocClusterIamBindingLister returns a new DataprocClusterIamBindingLister.
func NewDataprocClusterIamBindingLister(indexer cache.Indexer) DataprocClusterIamBindingLister {
	return &dataprocClusterIamBindingLister{indexer: indexer}
}

// List lists all DataprocClusterIamBindings in the indexer.
func (s *dataprocClusterIamBindingLister) List(selector labels.Selector) (ret []*v1alpha1.DataprocClusterIamBinding, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DataprocClusterIamBinding))
	})
	return ret, err
}

// DataprocClusterIamBindings returns an object that can list and get DataprocClusterIamBindings.
func (s *dataprocClusterIamBindingLister) DataprocClusterIamBindings(namespace string) DataprocClusterIamBindingNamespaceLister {
	return dataprocClusterIamBindingNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DataprocClusterIamBindingNamespaceLister helps list and get DataprocClusterIamBindings.
type DataprocClusterIamBindingNamespaceLister interface {
	// List lists all DataprocClusterIamBindings in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.DataprocClusterIamBinding, err error)
	// Get retrieves the DataprocClusterIamBinding from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.DataprocClusterIamBinding, error)
	DataprocClusterIamBindingNamespaceListerExpansion
}

// dataprocClusterIamBindingNamespaceLister implements the DataprocClusterIamBindingNamespaceLister
// interface.
type dataprocClusterIamBindingNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DataprocClusterIamBindings in the indexer for a given namespace.
func (s dataprocClusterIamBindingNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.DataprocClusterIamBinding, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DataprocClusterIamBinding))
	})
	return ret, err
}

// Get retrieves the DataprocClusterIamBinding from the indexer for a given namespace and name.
func (s dataprocClusterIamBindingNamespaceLister) Get(name string) (*v1alpha1.DataprocClusterIamBinding, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("dataprocclusteriambinding"), name)
	}
	return obj.(*v1alpha1.DataprocClusterIamBinding), nil
}
