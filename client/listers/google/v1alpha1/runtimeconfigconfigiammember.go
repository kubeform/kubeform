/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/google/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// RuntimeconfigConfigIamMemberLister helps list RuntimeconfigConfigIamMembers.
type RuntimeconfigConfigIamMemberLister interface {
	// List lists all RuntimeconfigConfigIamMembers in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.RuntimeconfigConfigIamMember, err error)
	// RuntimeconfigConfigIamMembers returns an object that can list and get RuntimeconfigConfigIamMembers.
	RuntimeconfigConfigIamMembers(namespace string) RuntimeconfigConfigIamMemberNamespaceLister
	RuntimeconfigConfigIamMemberListerExpansion
}

// runtimeconfigConfigIamMemberLister implements the RuntimeconfigConfigIamMemberLister interface.
type runtimeconfigConfigIamMemberLister struct {
	indexer cache.Indexer
}

// NewRuntimeconfigConfigIamMemberLister returns a new RuntimeconfigConfigIamMemberLister.
func NewRuntimeconfigConfigIamMemberLister(indexer cache.Indexer) RuntimeconfigConfigIamMemberLister {
	return &runtimeconfigConfigIamMemberLister{indexer: indexer}
}

// List lists all RuntimeconfigConfigIamMembers in the indexer.
func (s *runtimeconfigConfigIamMemberLister) List(selector labels.Selector) (ret []*v1alpha1.RuntimeconfigConfigIamMember, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RuntimeconfigConfigIamMember))
	})
	return ret, err
}

// RuntimeconfigConfigIamMembers returns an object that can list and get RuntimeconfigConfigIamMembers.
func (s *runtimeconfigConfigIamMemberLister) RuntimeconfigConfigIamMembers(namespace string) RuntimeconfigConfigIamMemberNamespaceLister {
	return runtimeconfigConfigIamMemberNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// RuntimeconfigConfigIamMemberNamespaceLister helps list and get RuntimeconfigConfigIamMembers.
type RuntimeconfigConfigIamMemberNamespaceLister interface {
	// List lists all RuntimeconfigConfigIamMembers in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.RuntimeconfigConfigIamMember, err error)
	// Get retrieves the RuntimeconfigConfigIamMember from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.RuntimeconfigConfigIamMember, error)
	RuntimeconfigConfigIamMemberNamespaceListerExpansion
}

// runtimeconfigConfigIamMemberNamespaceLister implements the RuntimeconfigConfigIamMemberNamespaceLister
// interface.
type runtimeconfigConfigIamMemberNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all RuntimeconfigConfigIamMembers in the indexer for a given namespace.
func (s runtimeconfigConfigIamMemberNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.RuntimeconfigConfigIamMember, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RuntimeconfigConfigIamMember))
	})
	return ret, err
}

// Get retrieves the RuntimeconfigConfigIamMember from the indexer for a given namespace and name.
func (s runtimeconfigConfigIamMemberNamespaceLister) Get(name string) (*v1alpha1.RuntimeconfigConfigIamMember, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("runtimeconfigconfigiammember"), name)
	}
	return obj.(*v1alpha1.RuntimeconfigConfigIamMember), nil
}
