/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/google/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// IapWebTypeAppEngineIamPolicyLister helps list IapWebTypeAppEngineIamPolicies.
type IapWebTypeAppEngineIamPolicyLister interface {
	// List lists all IapWebTypeAppEngineIamPolicies in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.IapWebTypeAppEngineIamPolicy, err error)
	// IapWebTypeAppEngineIamPolicies returns an object that can list and get IapWebTypeAppEngineIamPolicies.
	IapWebTypeAppEngineIamPolicies(namespace string) IapWebTypeAppEngineIamPolicyNamespaceLister
	IapWebTypeAppEngineIamPolicyListerExpansion
}

// iapWebTypeAppEngineIamPolicyLister implements the IapWebTypeAppEngineIamPolicyLister interface.
type iapWebTypeAppEngineIamPolicyLister struct {
	indexer cache.Indexer
}

// NewIapWebTypeAppEngineIamPolicyLister returns a new IapWebTypeAppEngineIamPolicyLister.
func NewIapWebTypeAppEngineIamPolicyLister(indexer cache.Indexer) IapWebTypeAppEngineIamPolicyLister {
	return &iapWebTypeAppEngineIamPolicyLister{indexer: indexer}
}

// List lists all IapWebTypeAppEngineIamPolicies in the indexer.
func (s *iapWebTypeAppEngineIamPolicyLister) List(selector labels.Selector) (ret []*v1alpha1.IapWebTypeAppEngineIamPolicy, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.IapWebTypeAppEngineIamPolicy))
	})
	return ret, err
}

// IapWebTypeAppEngineIamPolicies returns an object that can list and get IapWebTypeAppEngineIamPolicies.
func (s *iapWebTypeAppEngineIamPolicyLister) IapWebTypeAppEngineIamPolicies(namespace string) IapWebTypeAppEngineIamPolicyNamespaceLister {
	return iapWebTypeAppEngineIamPolicyNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// IapWebTypeAppEngineIamPolicyNamespaceLister helps list and get IapWebTypeAppEngineIamPolicies.
type IapWebTypeAppEngineIamPolicyNamespaceLister interface {
	// List lists all IapWebTypeAppEngineIamPolicies in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.IapWebTypeAppEngineIamPolicy, err error)
	// Get retrieves the IapWebTypeAppEngineIamPolicy from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.IapWebTypeAppEngineIamPolicy, error)
	IapWebTypeAppEngineIamPolicyNamespaceListerExpansion
}

// iapWebTypeAppEngineIamPolicyNamespaceLister implements the IapWebTypeAppEngineIamPolicyNamespaceLister
// interface.
type iapWebTypeAppEngineIamPolicyNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all IapWebTypeAppEngineIamPolicies in the indexer for a given namespace.
func (s iapWebTypeAppEngineIamPolicyNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.IapWebTypeAppEngineIamPolicy, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.IapWebTypeAppEngineIamPolicy))
	})
	return ret, err
}

// Get retrieves the IapWebTypeAppEngineIamPolicy from the indexer for a given namespace and name.
func (s iapWebTypeAppEngineIamPolicyNamespaceLister) Get(name string) (*v1alpha1.IapWebTypeAppEngineIamPolicy, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("iapwebtypeappengineiampolicy"), name)
	}
	return obj.(*v1alpha1.IapWebTypeAppEngineIamPolicy), nil
}
