/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/google/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// BillingAccountIamBindingLister helps list BillingAccountIamBindings.
type BillingAccountIamBindingLister interface {
	// List lists all BillingAccountIamBindings in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.BillingAccountIamBinding, err error)
	// BillingAccountIamBindings returns an object that can list and get BillingAccountIamBindings.
	BillingAccountIamBindings(namespace string) BillingAccountIamBindingNamespaceLister
	BillingAccountIamBindingListerExpansion
}

// billingAccountIamBindingLister implements the BillingAccountIamBindingLister interface.
type billingAccountIamBindingLister struct {
	indexer cache.Indexer
}

// NewBillingAccountIamBindingLister returns a new BillingAccountIamBindingLister.
func NewBillingAccountIamBindingLister(indexer cache.Indexer) BillingAccountIamBindingLister {
	return &billingAccountIamBindingLister{indexer: indexer}
}

// List lists all BillingAccountIamBindings in the indexer.
func (s *billingAccountIamBindingLister) List(selector labels.Selector) (ret []*v1alpha1.BillingAccountIamBinding, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.BillingAccountIamBinding))
	})
	return ret, err
}

// BillingAccountIamBindings returns an object that can list and get BillingAccountIamBindings.
func (s *billingAccountIamBindingLister) BillingAccountIamBindings(namespace string) BillingAccountIamBindingNamespaceLister {
	return billingAccountIamBindingNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// BillingAccountIamBindingNamespaceLister helps list and get BillingAccountIamBindings.
type BillingAccountIamBindingNamespaceLister interface {
	// List lists all BillingAccountIamBindings in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.BillingAccountIamBinding, err error)
	// Get retrieves the BillingAccountIamBinding from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.BillingAccountIamBinding, error)
	BillingAccountIamBindingNamespaceListerExpansion
}

// billingAccountIamBindingNamespaceLister implements the BillingAccountIamBindingNamespaceLister
// interface.
type billingAccountIamBindingNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all BillingAccountIamBindings in the indexer for a given namespace.
func (s billingAccountIamBindingNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.BillingAccountIamBinding, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.BillingAccountIamBinding))
	})
	return ret, err
}

// Get retrieves the BillingAccountIamBinding from the indexer for a given namespace and name.
func (s billingAccountIamBindingNamespaceLister) Get(name string) (*v1alpha1.BillingAccountIamBinding, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("billingaccountiambinding"), name)
	}
	return obj.(*v1alpha1.BillingAccountIamBinding), nil
}
