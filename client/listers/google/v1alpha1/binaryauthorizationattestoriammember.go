/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/google/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// BinaryAuthorizationAttestorIamMemberLister helps list BinaryAuthorizationAttestorIamMembers.
type BinaryAuthorizationAttestorIamMemberLister interface {
	// List lists all BinaryAuthorizationAttestorIamMembers in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.BinaryAuthorizationAttestorIamMember, err error)
	// BinaryAuthorizationAttestorIamMembers returns an object that can list and get BinaryAuthorizationAttestorIamMembers.
	BinaryAuthorizationAttestorIamMembers(namespace string) BinaryAuthorizationAttestorIamMemberNamespaceLister
	BinaryAuthorizationAttestorIamMemberListerExpansion
}

// binaryAuthorizationAttestorIamMemberLister implements the BinaryAuthorizationAttestorIamMemberLister interface.
type binaryAuthorizationAttestorIamMemberLister struct {
	indexer cache.Indexer
}

// NewBinaryAuthorizationAttestorIamMemberLister returns a new BinaryAuthorizationAttestorIamMemberLister.
func NewBinaryAuthorizationAttestorIamMemberLister(indexer cache.Indexer) BinaryAuthorizationAttestorIamMemberLister {
	return &binaryAuthorizationAttestorIamMemberLister{indexer: indexer}
}

// List lists all BinaryAuthorizationAttestorIamMembers in the indexer.
func (s *binaryAuthorizationAttestorIamMemberLister) List(selector labels.Selector) (ret []*v1alpha1.BinaryAuthorizationAttestorIamMember, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.BinaryAuthorizationAttestorIamMember))
	})
	return ret, err
}

// BinaryAuthorizationAttestorIamMembers returns an object that can list and get BinaryAuthorizationAttestorIamMembers.
func (s *binaryAuthorizationAttestorIamMemberLister) BinaryAuthorizationAttestorIamMembers(namespace string) BinaryAuthorizationAttestorIamMemberNamespaceLister {
	return binaryAuthorizationAttestorIamMemberNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// BinaryAuthorizationAttestorIamMemberNamespaceLister helps list and get BinaryAuthorizationAttestorIamMembers.
type BinaryAuthorizationAttestorIamMemberNamespaceLister interface {
	// List lists all BinaryAuthorizationAttestorIamMembers in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.BinaryAuthorizationAttestorIamMember, err error)
	// Get retrieves the BinaryAuthorizationAttestorIamMember from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.BinaryAuthorizationAttestorIamMember, error)
	BinaryAuthorizationAttestorIamMemberNamespaceListerExpansion
}

// binaryAuthorizationAttestorIamMemberNamespaceLister implements the BinaryAuthorizationAttestorIamMemberNamespaceLister
// interface.
type binaryAuthorizationAttestorIamMemberNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all BinaryAuthorizationAttestorIamMembers in the indexer for a given namespace.
func (s binaryAuthorizationAttestorIamMemberNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.BinaryAuthorizationAttestorIamMember, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.BinaryAuthorizationAttestorIamMember))
	})
	return ret, err
}

// Get retrieves the BinaryAuthorizationAttestorIamMember from the indexer for a given namespace and name.
func (s binaryAuthorizationAttestorIamMemberNamespaceLister) Get(name string) (*v1alpha1.BinaryAuthorizationAttestorIamMember, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("binaryauthorizationattestoriammember"), name)
	}
	return obj.(*v1alpha1.BinaryAuthorizationAttestorIamMember), nil
}
