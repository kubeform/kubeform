/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/google/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// DataprocJobIamMemberLister helps list DataprocJobIamMembers.
type DataprocJobIamMemberLister interface {
	// List lists all DataprocJobIamMembers in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.DataprocJobIamMember, err error)
	// DataprocJobIamMembers returns an object that can list and get DataprocJobIamMembers.
	DataprocJobIamMembers(namespace string) DataprocJobIamMemberNamespaceLister
	DataprocJobIamMemberListerExpansion
}

// dataprocJobIamMemberLister implements the DataprocJobIamMemberLister interface.
type dataprocJobIamMemberLister struct {
	indexer cache.Indexer
}

// NewDataprocJobIamMemberLister returns a new DataprocJobIamMemberLister.
func NewDataprocJobIamMemberLister(indexer cache.Indexer) DataprocJobIamMemberLister {
	return &dataprocJobIamMemberLister{indexer: indexer}
}

// List lists all DataprocJobIamMembers in the indexer.
func (s *dataprocJobIamMemberLister) List(selector labels.Selector) (ret []*v1alpha1.DataprocJobIamMember, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DataprocJobIamMember))
	})
	return ret, err
}

// DataprocJobIamMembers returns an object that can list and get DataprocJobIamMembers.
func (s *dataprocJobIamMemberLister) DataprocJobIamMembers(namespace string) DataprocJobIamMemberNamespaceLister {
	return dataprocJobIamMemberNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DataprocJobIamMemberNamespaceLister helps list and get DataprocJobIamMembers.
type DataprocJobIamMemberNamespaceLister interface {
	// List lists all DataprocJobIamMembers in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.DataprocJobIamMember, err error)
	// Get retrieves the DataprocJobIamMember from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.DataprocJobIamMember, error)
	DataprocJobIamMemberNamespaceListerExpansion
}

// dataprocJobIamMemberNamespaceLister implements the DataprocJobIamMemberNamespaceLister
// interface.
type dataprocJobIamMemberNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DataprocJobIamMembers in the indexer for a given namespace.
func (s dataprocJobIamMemberNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.DataprocJobIamMember, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DataprocJobIamMember))
	})
	return ret, err
}

// Get retrieves the DataprocJobIamMember from the indexer for a given namespace and name.
func (s dataprocJobIamMemberNamespaceLister) Get(name string) (*v1alpha1.DataprocJobIamMember, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("dataprocjobiammember"), name)
	}
	return obj.(*v1alpha1.DataprocJobIamMember), nil
}
