/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/google/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// IapAppEngineVersionIamMemberLister helps list IapAppEngineVersionIamMembers.
type IapAppEngineVersionIamMemberLister interface {
	// List lists all IapAppEngineVersionIamMembers in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.IapAppEngineVersionIamMember, err error)
	// IapAppEngineVersionIamMembers returns an object that can list and get IapAppEngineVersionIamMembers.
	IapAppEngineVersionIamMembers(namespace string) IapAppEngineVersionIamMemberNamespaceLister
	IapAppEngineVersionIamMemberListerExpansion
}

// iapAppEngineVersionIamMemberLister implements the IapAppEngineVersionIamMemberLister interface.
type iapAppEngineVersionIamMemberLister struct {
	indexer cache.Indexer
}

// NewIapAppEngineVersionIamMemberLister returns a new IapAppEngineVersionIamMemberLister.
func NewIapAppEngineVersionIamMemberLister(indexer cache.Indexer) IapAppEngineVersionIamMemberLister {
	return &iapAppEngineVersionIamMemberLister{indexer: indexer}
}

// List lists all IapAppEngineVersionIamMembers in the indexer.
func (s *iapAppEngineVersionIamMemberLister) List(selector labels.Selector) (ret []*v1alpha1.IapAppEngineVersionIamMember, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.IapAppEngineVersionIamMember))
	})
	return ret, err
}

// IapAppEngineVersionIamMembers returns an object that can list and get IapAppEngineVersionIamMembers.
func (s *iapAppEngineVersionIamMemberLister) IapAppEngineVersionIamMembers(namespace string) IapAppEngineVersionIamMemberNamespaceLister {
	return iapAppEngineVersionIamMemberNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// IapAppEngineVersionIamMemberNamespaceLister helps list and get IapAppEngineVersionIamMembers.
type IapAppEngineVersionIamMemberNamespaceLister interface {
	// List lists all IapAppEngineVersionIamMembers in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.IapAppEngineVersionIamMember, err error)
	// Get retrieves the IapAppEngineVersionIamMember from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.IapAppEngineVersionIamMember, error)
	IapAppEngineVersionIamMemberNamespaceListerExpansion
}

// iapAppEngineVersionIamMemberNamespaceLister implements the IapAppEngineVersionIamMemberNamespaceLister
// interface.
type iapAppEngineVersionIamMemberNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all IapAppEngineVersionIamMembers in the indexer for a given namespace.
func (s iapAppEngineVersionIamMemberNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.IapAppEngineVersionIamMember, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.IapAppEngineVersionIamMember))
	})
	return ret, err
}

// Get retrieves the IapAppEngineVersionIamMember from the indexer for a given namespace and name.
func (s iapAppEngineVersionIamMemberNamespaceLister) Get(name string) (*v1alpha1.IapAppEngineVersionIamMember, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("iapappengineversioniammember"), name)
	}
	return obj.(*v1alpha1.IapAppEngineVersionIamMember), nil
}
