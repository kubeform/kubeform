/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/google/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ComputeURLMapLister helps list ComputeURLMaps.
type ComputeURLMapLister interface {
	// List lists all ComputeURLMaps in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ComputeURLMap, err error)
	// ComputeURLMaps returns an object that can list and get ComputeURLMaps.
	ComputeURLMaps(namespace string) ComputeURLMapNamespaceLister
	ComputeURLMapListerExpansion
}

// computeURLMapLister implements the ComputeURLMapLister interface.
type computeURLMapLister struct {
	indexer cache.Indexer
}

// NewComputeURLMapLister returns a new ComputeURLMapLister.
func NewComputeURLMapLister(indexer cache.Indexer) ComputeURLMapLister {
	return &computeURLMapLister{indexer: indexer}
}

// List lists all ComputeURLMaps in the indexer.
func (s *computeURLMapLister) List(selector labels.Selector) (ret []*v1alpha1.ComputeURLMap, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ComputeURLMap))
	})
	return ret, err
}

// ComputeURLMaps returns an object that can list and get ComputeURLMaps.
func (s *computeURLMapLister) ComputeURLMaps(namespace string) ComputeURLMapNamespaceLister {
	return computeURLMapNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ComputeURLMapNamespaceLister helps list and get ComputeURLMaps.
type ComputeURLMapNamespaceLister interface {
	// List lists all ComputeURLMaps in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ComputeURLMap, err error)
	// Get retrieves the ComputeURLMap from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ComputeURLMap, error)
	ComputeURLMapNamespaceListerExpansion
}

// computeURLMapNamespaceLister implements the ComputeURLMapNamespaceLister
// interface.
type computeURLMapNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ComputeURLMaps in the indexer for a given namespace.
func (s computeURLMapNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ComputeURLMap, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ComputeURLMap))
	})
	return ret, err
}

// Get retrieves the ComputeURLMap from the indexer for a given namespace and name.
func (s computeURLMapNamespaceLister) Get(name string) (*v1alpha1.ComputeURLMap, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("computeurlmap"), name)
	}
	return obj.(*v1alpha1.ComputeURLMap), nil
}
