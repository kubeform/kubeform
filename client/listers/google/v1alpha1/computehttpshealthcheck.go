/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/google/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ComputeHTTPSHealthCheckLister helps list ComputeHTTPSHealthChecks.
type ComputeHTTPSHealthCheckLister interface {
	// List lists all ComputeHTTPSHealthChecks in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ComputeHTTPSHealthCheck, err error)
	// ComputeHTTPSHealthChecks returns an object that can list and get ComputeHTTPSHealthChecks.
	ComputeHTTPSHealthChecks(namespace string) ComputeHTTPSHealthCheckNamespaceLister
	ComputeHTTPSHealthCheckListerExpansion
}

// computeHTTPSHealthCheckLister implements the ComputeHTTPSHealthCheckLister interface.
type computeHTTPSHealthCheckLister struct {
	indexer cache.Indexer
}

// NewComputeHTTPSHealthCheckLister returns a new ComputeHTTPSHealthCheckLister.
func NewComputeHTTPSHealthCheckLister(indexer cache.Indexer) ComputeHTTPSHealthCheckLister {
	return &computeHTTPSHealthCheckLister{indexer: indexer}
}

// List lists all ComputeHTTPSHealthChecks in the indexer.
func (s *computeHTTPSHealthCheckLister) List(selector labels.Selector) (ret []*v1alpha1.ComputeHTTPSHealthCheck, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ComputeHTTPSHealthCheck))
	})
	return ret, err
}

// ComputeHTTPSHealthChecks returns an object that can list and get ComputeHTTPSHealthChecks.
func (s *computeHTTPSHealthCheckLister) ComputeHTTPSHealthChecks(namespace string) ComputeHTTPSHealthCheckNamespaceLister {
	return computeHTTPSHealthCheckNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ComputeHTTPSHealthCheckNamespaceLister helps list and get ComputeHTTPSHealthChecks.
type ComputeHTTPSHealthCheckNamespaceLister interface {
	// List lists all ComputeHTTPSHealthChecks in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ComputeHTTPSHealthCheck, err error)
	// Get retrieves the ComputeHTTPSHealthCheck from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ComputeHTTPSHealthCheck, error)
	ComputeHTTPSHealthCheckNamespaceListerExpansion
}

// computeHTTPSHealthCheckNamespaceLister implements the ComputeHTTPSHealthCheckNamespaceLister
// interface.
type computeHTTPSHealthCheckNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ComputeHTTPSHealthChecks in the indexer for a given namespace.
func (s computeHTTPSHealthCheckNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ComputeHTTPSHealthCheck, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ComputeHTTPSHealthCheck))
	})
	return ret, err
}

// Get retrieves the ComputeHTTPSHealthCheck from the indexer for a given namespace and name.
func (s computeHTTPSHealthCheckNamespaceLister) Get(name string) (*v1alpha1.ComputeHTTPSHealthCheck, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("computehttpshealthcheck"), name)
	}
	return obj.(*v1alpha1.ComputeHTTPSHealthCheck), nil
}
