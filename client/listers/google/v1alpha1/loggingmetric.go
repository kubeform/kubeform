/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/google/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// LoggingMetricLister helps list LoggingMetrics.
type LoggingMetricLister interface {
	// List lists all LoggingMetrics in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.LoggingMetric, err error)
	// LoggingMetrics returns an object that can list and get LoggingMetrics.
	LoggingMetrics(namespace string) LoggingMetricNamespaceLister
	LoggingMetricListerExpansion
}

// loggingMetricLister implements the LoggingMetricLister interface.
type loggingMetricLister struct {
	indexer cache.Indexer
}

// NewLoggingMetricLister returns a new LoggingMetricLister.
func NewLoggingMetricLister(indexer cache.Indexer) LoggingMetricLister {
	return &loggingMetricLister{indexer: indexer}
}

// List lists all LoggingMetrics in the indexer.
func (s *loggingMetricLister) List(selector labels.Selector) (ret []*v1alpha1.LoggingMetric, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.LoggingMetric))
	})
	return ret, err
}

// LoggingMetrics returns an object that can list and get LoggingMetrics.
func (s *loggingMetricLister) LoggingMetrics(namespace string) LoggingMetricNamespaceLister {
	return loggingMetricNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// LoggingMetricNamespaceLister helps list and get LoggingMetrics.
type LoggingMetricNamespaceLister interface {
	// List lists all LoggingMetrics in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.LoggingMetric, err error)
	// Get retrieves the LoggingMetric from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.LoggingMetric, error)
	LoggingMetricNamespaceListerExpansion
}

// loggingMetricNamespaceLister implements the LoggingMetricNamespaceLister
// interface.
type loggingMetricNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all LoggingMetrics in the indexer for a given namespace.
func (s loggingMetricNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.LoggingMetric, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.LoggingMetric))
	})
	return ret, err
}

// Get retrieves the LoggingMetric from the indexer for a given namespace and name.
func (s loggingMetricNamespaceLister) Get(name string) (*v1alpha1.LoggingMetric, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("loggingmetric"), name)
	}
	return obj.(*v1alpha1.LoggingMetric), nil
}
