/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/google/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// BigqueryDatasetLister helps list BigqueryDatasets.
type BigqueryDatasetLister interface {
	// List lists all BigqueryDatasets in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.BigqueryDataset, err error)
	// BigqueryDatasets returns an object that can list and get BigqueryDatasets.
	BigqueryDatasets(namespace string) BigqueryDatasetNamespaceLister
	BigqueryDatasetListerExpansion
}

// bigqueryDatasetLister implements the BigqueryDatasetLister interface.
type bigqueryDatasetLister struct {
	indexer cache.Indexer
}

// NewBigqueryDatasetLister returns a new BigqueryDatasetLister.
func NewBigqueryDatasetLister(indexer cache.Indexer) BigqueryDatasetLister {
	return &bigqueryDatasetLister{indexer: indexer}
}

// List lists all BigqueryDatasets in the indexer.
func (s *bigqueryDatasetLister) List(selector labels.Selector) (ret []*v1alpha1.BigqueryDataset, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.BigqueryDataset))
	})
	return ret, err
}

// BigqueryDatasets returns an object that can list and get BigqueryDatasets.
func (s *bigqueryDatasetLister) BigqueryDatasets(namespace string) BigqueryDatasetNamespaceLister {
	return bigqueryDatasetNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// BigqueryDatasetNamespaceLister helps list and get BigqueryDatasets.
type BigqueryDatasetNamespaceLister interface {
	// List lists all BigqueryDatasets in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.BigqueryDataset, err error)
	// Get retrieves the BigqueryDataset from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.BigqueryDataset, error)
	BigqueryDatasetNamespaceListerExpansion
}

// bigqueryDatasetNamespaceLister implements the BigqueryDatasetNamespaceLister
// interface.
type bigqueryDatasetNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all BigqueryDatasets in the indexer for a given namespace.
func (s bigqueryDatasetNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.BigqueryDataset, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.BigqueryDataset))
	})
	return ret, err
}

// Get retrieves the BigqueryDataset from the indexer for a given namespace and name.
func (s bigqueryDatasetNamespaceLister) Get(name string) (*v1alpha1.BigqueryDataset, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("bigquerydataset"), name)
	}
	return obj.(*v1alpha1.BigqueryDataset), nil
}
