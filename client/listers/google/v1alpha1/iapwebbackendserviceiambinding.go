/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/google/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// IapWebBackendServiceIamBindingLister helps list IapWebBackendServiceIamBindings.
type IapWebBackendServiceIamBindingLister interface {
	// List lists all IapWebBackendServiceIamBindings in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.IapWebBackendServiceIamBinding, err error)
	// IapWebBackendServiceIamBindings returns an object that can list and get IapWebBackendServiceIamBindings.
	IapWebBackendServiceIamBindings(namespace string) IapWebBackendServiceIamBindingNamespaceLister
	IapWebBackendServiceIamBindingListerExpansion
}

// iapWebBackendServiceIamBindingLister implements the IapWebBackendServiceIamBindingLister interface.
type iapWebBackendServiceIamBindingLister struct {
	indexer cache.Indexer
}

// NewIapWebBackendServiceIamBindingLister returns a new IapWebBackendServiceIamBindingLister.
func NewIapWebBackendServiceIamBindingLister(indexer cache.Indexer) IapWebBackendServiceIamBindingLister {
	return &iapWebBackendServiceIamBindingLister{indexer: indexer}
}

// List lists all IapWebBackendServiceIamBindings in the indexer.
func (s *iapWebBackendServiceIamBindingLister) List(selector labels.Selector) (ret []*v1alpha1.IapWebBackendServiceIamBinding, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.IapWebBackendServiceIamBinding))
	})
	return ret, err
}

// IapWebBackendServiceIamBindings returns an object that can list and get IapWebBackendServiceIamBindings.
func (s *iapWebBackendServiceIamBindingLister) IapWebBackendServiceIamBindings(namespace string) IapWebBackendServiceIamBindingNamespaceLister {
	return iapWebBackendServiceIamBindingNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// IapWebBackendServiceIamBindingNamespaceLister helps list and get IapWebBackendServiceIamBindings.
type IapWebBackendServiceIamBindingNamespaceLister interface {
	// List lists all IapWebBackendServiceIamBindings in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.IapWebBackendServiceIamBinding, err error)
	// Get retrieves the IapWebBackendServiceIamBinding from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.IapWebBackendServiceIamBinding, error)
	IapWebBackendServiceIamBindingNamespaceListerExpansion
}

// iapWebBackendServiceIamBindingNamespaceLister implements the IapWebBackendServiceIamBindingNamespaceLister
// interface.
type iapWebBackendServiceIamBindingNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all IapWebBackendServiceIamBindings in the indexer for a given namespace.
func (s iapWebBackendServiceIamBindingNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.IapWebBackendServiceIamBinding, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.IapWebBackendServiceIamBinding))
	})
	return ret, err
}

// Get retrieves the IapWebBackendServiceIamBinding from the indexer for a given namespace and name.
func (s iapWebBackendServiceIamBindingNamespaceLister) Get(name string) (*v1alpha1.IapWebBackendServiceIamBinding, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("iapwebbackendserviceiambinding"), name)
	}
	return obj.(*v1alpha1.IapWebBackendServiceIamBinding), nil
}
