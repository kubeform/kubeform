/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/kubeform/apis/google/v1alpha1"
)

// BigtableTableLister helps list BigtableTables.
type BigtableTableLister interface {
	// List lists all BigtableTables in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.BigtableTable, err error)
	// Get retrieves the BigtableTable from the index for a given name.
	Get(name string) (*v1alpha1.BigtableTable, error)
	BigtableTableListerExpansion
}

// bigtableTableLister implements the BigtableTableLister interface.
type bigtableTableLister struct {
	indexer cache.Indexer
}

// NewBigtableTableLister returns a new BigtableTableLister.
func NewBigtableTableLister(indexer cache.Indexer) BigtableTableLister {
	return &bigtableTableLister{indexer: indexer}
}

// List lists all BigtableTables in the indexer.
func (s *bigtableTableLister) List(selector labels.Selector) (ret []*v1alpha1.BigtableTable, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.BigtableTable))
	})
	return ret, err
}

// Get retrieves the BigtableTable from the index for a given name.
func (s *bigtableTableLister) Get(name string) (*v1alpha1.BigtableTable, error) {
	obj, exists, err := s.indexer.GetByKey(name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("bigtabletable"), name)
	}
	return obj.(*v1alpha1.BigtableTable), nil
}
