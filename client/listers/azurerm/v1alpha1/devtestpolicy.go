/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// DevTestPolicyLister helps list DevTestPolicies.
type DevTestPolicyLister interface {
	// List lists all DevTestPolicies in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.DevTestPolicy, err error)
	// DevTestPolicies returns an object that can list and get DevTestPolicies.
	DevTestPolicies(namespace string) DevTestPolicyNamespaceLister
	DevTestPolicyListerExpansion
}

// devTestPolicyLister implements the DevTestPolicyLister interface.
type devTestPolicyLister struct {
	indexer cache.Indexer
}

// NewDevTestPolicyLister returns a new DevTestPolicyLister.
func NewDevTestPolicyLister(indexer cache.Indexer) DevTestPolicyLister {
	return &devTestPolicyLister{indexer: indexer}
}

// List lists all DevTestPolicies in the indexer.
func (s *devTestPolicyLister) List(selector labels.Selector) (ret []*v1alpha1.DevTestPolicy, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DevTestPolicy))
	})
	return ret, err
}

// DevTestPolicies returns an object that can list and get DevTestPolicies.
func (s *devTestPolicyLister) DevTestPolicies(namespace string) DevTestPolicyNamespaceLister {
	return devTestPolicyNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DevTestPolicyNamespaceLister helps list and get DevTestPolicies.
type DevTestPolicyNamespaceLister interface {
	// List lists all DevTestPolicies in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.DevTestPolicy, err error)
	// Get retrieves the DevTestPolicy from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.DevTestPolicy, error)
	DevTestPolicyNamespaceListerExpansion
}

// devTestPolicyNamespaceLister implements the DevTestPolicyNamespaceLister
// interface.
type devTestPolicyNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DevTestPolicies in the indexer for a given namespace.
func (s devTestPolicyNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.DevTestPolicy, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DevTestPolicy))
	})
	return ret, err
}

// Get retrieves the DevTestPolicy from the indexer for a given namespace and name.
func (s devTestPolicyNamespaceLister) Get(name string) (*v1alpha1.DevTestPolicy, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("devtestpolicy"), name)
	}
	return obj.(*v1alpha1.DevTestPolicy), nil
}
