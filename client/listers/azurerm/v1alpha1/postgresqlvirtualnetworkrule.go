/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PostgresqlVirtualNetworkRuleLister helps list PostgresqlVirtualNetworkRules.
type PostgresqlVirtualNetworkRuleLister interface {
	// List lists all PostgresqlVirtualNetworkRules in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.PostgresqlVirtualNetworkRule, err error)
	// PostgresqlVirtualNetworkRules returns an object that can list and get PostgresqlVirtualNetworkRules.
	PostgresqlVirtualNetworkRules(namespace string) PostgresqlVirtualNetworkRuleNamespaceLister
	PostgresqlVirtualNetworkRuleListerExpansion
}

// postgresqlVirtualNetworkRuleLister implements the PostgresqlVirtualNetworkRuleLister interface.
type postgresqlVirtualNetworkRuleLister struct {
	indexer cache.Indexer
}

// NewPostgresqlVirtualNetworkRuleLister returns a new PostgresqlVirtualNetworkRuleLister.
func NewPostgresqlVirtualNetworkRuleLister(indexer cache.Indexer) PostgresqlVirtualNetworkRuleLister {
	return &postgresqlVirtualNetworkRuleLister{indexer: indexer}
}

// List lists all PostgresqlVirtualNetworkRules in the indexer.
func (s *postgresqlVirtualNetworkRuleLister) List(selector labels.Selector) (ret []*v1alpha1.PostgresqlVirtualNetworkRule, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PostgresqlVirtualNetworkRule))
	})
	return ret, err
}

// PostgresqlVirtualNetworkRules returns an object that can list and get PostgresqlVirtualNetworkRules.
func (s *postgresqlVirtualNetworkRuleLister) PostgresqlVirtualNetworkRules(namespace string) PostgresqlVirtualNetworkRuleNamespaceLister {
	return postgresqlVirtualNetworkRuleNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PostgresqlVirtualNetworkRuleNamespaceLister helps list and get PostgresqlVirtualNetworkRules.
type PostgresqlVirtualNetworkRuleNamespaceLister interface {
	// List lists all PostgresqlVirtualNetworkRules in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.PostgresqlVirtualNetworkRule, err error)
	// Get retrieves the PostgresqlVirtualNetworkRule from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.PostgresqlVirtualNetworkRule, error)
	PostgresqlVirtualNetworkRuleNamespaceListerExpansion
}

// postgresqlVirtualNetworkRuleNamespaceLister implements the PostgresqlVirtualNetworkRuleNamespaceLister
// interface.
type postgresqlVirtualNetworkRuleNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all PostgresqlVirtualNetworkRules in the indexer for a given namespace.
func (s postgresqlVirtualNetworkRuleNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.PostgresqlVirtualNetworkRule, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PostgresqlVirtualNetworkRule))
	})
	return ret, err
}

// Get retrieves the PostgresqlVirtualNetworkRule from the indexer for a given namespace and name.
func (s postgresqlVirtualNetworkRuleNamespaceLister) Get(name string) (*v1alpha1.PostgresqlVirtualNetworkRule, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("postgresqlvirtualnetworkrule"), name)
	}
	return obj.(*v1alpha1.PostgresqlVirtualNetworkRule), nil
}
