/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AppServicePlanLister helps list AppServicePlans.
type AppServicePlanLister interface {
	// List lists all AppServicePlans in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.AppServicePlan, err error)
	// AppServicePlans returns an object that can list and get AppServicePlans.
	AppServicePlans(namespace string) AppServicePlanNamespaceLister
	AppServicePlanListerExpansion
}

// appServicePlanLister implements the AppServicePlanLister interface.
type appServicePlanLister struct {
	indexer cache.Indexer
}

// NewAppServicePlanLister returns a new AppServicePlanLister.
func NewAppServicePlanLister(indexer cache.Indexer) AppServicePlanLister {
	return &appServicePlanLister{indexer: indexer}
}

// List lists all AppServicePlans in the indexer.
func (s *appServicePlanLister) List(selector labels.Selector) (ret []*v1alpha1.AppServicePlan, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AppServicePlan))
	})
	return ret, err
}

// AppServicePlans returns an object that can list and get AppServicePlans.
func (s *appServicePlanLister) AppServicePlans(namespace string) AppServicePlanNamespaceLister {
	return appServicePlanNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AppServicePlanNamespaceLister helps list and get AppServicePlans.
type AppServicePlanNamespaceLister interface {
	// List lists all AppServicePlans in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.AppServicePlan, err error)
	// Get retrieves the AppServicePlan from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.AppServicePlan, error)
	AppServicePlanNamespaceListerExpansion
}

// appServicePlanNamespaceLister implements the AppServicePlanNamespaceLister
// interface.
type appServicePlanNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AppServicePlans in the indexer for a given namespace.
func (s appServicePlanNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AppServicePlan, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AppServicePlan))
	})
	return ret, err
}

// Get retrieves the AppServicePlan from the indexer for a given namespace and name.
func (s appServicePlanNamespaceLister) Get(name string) (*v1alpha1.AppServicePlan, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("appserviceplan"), name)
	}
	return obj.(*v1alpha1.AppServicePlan), nil
}
