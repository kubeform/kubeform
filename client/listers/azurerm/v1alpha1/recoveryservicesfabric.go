/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// RecoveryServicesFabricLister helps list RecoveryServicesFabrics.
type RecoveryServicesFabricLister interface {
	// List lists all RecoveryServicesFabrics in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.RecoveryServicesFabric, err error)
	// RecoveryServicesFabrics returns an object that can list and get RecoveryServicesFabrics.
	RecoveryServicesFabrics(namespace string) RecoveryServicesFabricNamespaceLister
	RecoveryServicesFabricListerExpansion
}

// recoveryServicesFabricLister implements the RecoveryServicesFabricLister interface.
type recoveryServicesFabricLister struct {
	indexer cache.Indexer
}

// NewRecoveryServicesFabricLister returns a new RecoveryServicesFabricLister.
func NewRecoveryServicesFabricLister(indexer cache.Indexer) RecoveryServicesFabricLister {
	return &recoveryServicesFabricLister{indexer: indexer}
}

// List lists all RecoveryServicesFabrics in the indexer.
func (s *recoveryServicesFabricLister) List(selector labels.Selector) (ret []*v1alpha1.RecoveryServicesFabric, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RecoveryServicesFabric))
	})
	return ret, err
}

// RecoveryServicesFabrics returns an object that can list and get RecoveryServicesFabrics.
func (s *recoveryServicesFabricLister) RecoveryServicesFabrics(namespace string) RecoveryServicesFabricNamespaceLister {
	return recoveryServicesFabricNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// RecoveryServicesFabricNamespaceLister helps list and get RecoveryServicesFabrics.
type RecoveryServicesFabricNamespaceLister interface {
	// List lists all RecoveryServicesFabrics in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.RecoveryServicesFabric, err error)
	// Get retrieves the RecoveryServicesFabric from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.RecoveryServicesFabric, error)
	RecoveryServicesFabricNamespaceListerExpansion
}

// recoveryServicesFabricNamespaceLister implements the RecoveryServicesFabricNamespaceLister
// interface.
type recoveryServicesFabricNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all RecoveryServicesFabrics in the indexer for a given namespace.
func (s recoveryServicesFabricNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.RecoveryServicesFabric, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RecoveryServicesFabric))
	})
	return ret, err
}

// Get retrieves the RecoveryServicesFabric from the indexer for a given namespace and name.
func (s recoveryServicesFabricNamespaceLister) Get(name string) (*v1alpha1.RecoveryServicesFabric, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("recoveryservicesfabric"), name)
	}
	return obj.(*v1alpha1.RecoveryServicesFabric), nil
}
