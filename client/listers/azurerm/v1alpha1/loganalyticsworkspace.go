/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// LogAnalyticsWorkspaceLister helps list LogAnalyticsWorkspaces.
type LogAnalyticsWorkspaceLister interface {
	// List lists all LogAnalyticsWorkspaces in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.LogAnalyticsWorkspace, err error)
	// LogAnalyticsWorkspaces returns an object that can list and get LogAnalyticsWorkspaces.
	LogAnalyticsWorkspaces(namespace string) LogAnalyticsWorkspaceNamespaceLister
	LogAnalyticsWorkspaceListerExpansion
}

// logAnalyticsWorkspaceLister implements the LogAnalyticsWorkspaceLister interface.
type logAnalyticsWorkspaceLister struct {
	indexer cache.Indexer
}

// NewLogAnalyticsWorkspaceLister returns a new LogAnalyticsWorkspaceLister.
func NewLogAnalyticsWorkspaceLister(indexer cache.Indexer) LogAnalyticsWorkspaceLister {
	return &logAnalyticsWorkspaceLister{indexer: indexer}
}

// List lists all LogAnalyticsWorkspaces in the indexer.
func (s *logAnalyticsWorkspaceLister) List(selector labels.Selector) (ret []*v1alpha1.LogAnalyticsWorkspace, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.LogAnalyticsWorkspace))
	})
	return ret, err
}

// LogAnalyticsWorkspaces returns an object that can list and get LogAnalyticsWorkspaces.
func (s *logAnalyticsWorkspaceLister) LogAnalyticsWorkspaces(namespace string) LogAnalyticsWorkspaceNamespaceLister {
	return logAnalyticsWorkspaceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// LogAnalyticsWorkspaceNamespaceLister helps list and get LogAnalyticsWorkspaces.
type LogAnalyticsWorkspaceNamespaceLister interface {
	// List lists all LogAnalyticsWorkspaces in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.LogAnalyticsWorkspace, err error)
	// Get retrieves the LogAnalyticsWorkspace from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.LogAnalyticsWorkspace, error)
	LogAnalyticsWorkspaceNamespaceListerExpansion
}

// logAnalyticsWorkspaceNamespaceLister implements the LogAnalyticsWorkspaceNamespaceLister
// interface.
type logAnalyticsWorkspaceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all LogAnalyticsWorkspaces in the indexer for a given namespace.
func (s logAnalyticsWorkspaceNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.LogAnalyticsWorkspace, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.LogAnalyticsWorkspace))
	})
	return ret, err
}

// Get retrieves the LogAnalyticsWorkspace from the indexer for a given namespace and name.
func (s logAnalyticsWorkspaceNamespaceLister) Get(name string) (*v1alpha1.LogAnalyticsWorkspace, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("loganalyticsworkspace"), name)
	}
	return obj.(*v1alpha1.LogAnalyticsWorkspace), nil
}
