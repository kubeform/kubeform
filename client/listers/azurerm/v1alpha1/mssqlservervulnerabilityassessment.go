/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// MssqlServerVulnerabilityAssessmentLister helps list MssqlServerVulnerabilityAssessments.
type MssqlServerVulnerabilityAssessmentLister interface {
	// List lists all MssqlServerVulnerabilityAssessments in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.MssqlServerVulnerabilityAssessment, err error)
	// MssqlServerVulnerabilityAssessments returns an object that can list and get MssqlServerVulnerabilityAssessments.
	MssqlServerVulnerabilityAssessments(namespace string) MssqlServerVulnerabilityAssessmentNamespaceLister
	MssqlServerVulnerabilityAssessmentListerExpansion
}

// mssqlServerVulnerabilityAssessmentLister implements the MssqlServerVulnerabilityAssessmentLister interface.
type mssqlServerVulnerabilityAssessmentLister struct {
	indexer cache.Indexer
}

// NewMssqlServerVulnerabilityAssessmentLister returns a new MssqlServerVulnerabilityAssessmentLister.
func NewMssqlServerVulnerabilityAssessmentLister(indexer cache.Indexer) MssqlServerVulnerabilityAssessmentLister {
	return &mssqlServerVulnerabilityAssessmentLister{indexer: indexer}
}

// List lists all MssqlServerVulnerabilityAssessments in the indexer.
func (s *mssqlServerVulnerabilityAssessmentLister) List(selector labels.Selector) (ret []*v1alpha1.MssqlServerVulnerabilityAssessment, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MssqlServerVulnerabilityAssessment))
	})
	return ret, err
}

// MssqlServerVulnerabilityAssessments returns an object that can list and get MssqlServerVulnerabilityAssessments.
func (s *mssqlServerVulnerabilityAssessmentLister) MssqlServerVulnerabilityAssessments(namespace string) MssqlServerVulnerabilityAssessmentNamespaceLister {
	return mssqlServerVulnerabilityAssessmentNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// MssqlServerVulnerabilityAssessmentNamespaceLister helps list and get MssqlServerVulnerabilityAssessments.
type MssqlServerVulnerabilityAssessmentNamespaceLister interface {
	// List lists all MssqlServerVulnerabilityAssessments in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.MssqlServerVulnerabilityAssessment, err error)
	// Get retrieves the MssqlServerVulnerabilityAssessment from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.MssqlServerVulnerabilityAssessment, error)
	MssqlServerVulnerabilityAssessmentNamespaceListerExpansion
}

// mssqlServerVulnerabilityAssessmentNamespaceLister implements the MssqlServerVulnerabilityAssessmentNamespaceLister
// interface.
type mssqlServerVulnerabilityAssessmentNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all MssqlServerVulnerabilityAssessments in the indexer for a given namespace.
func (s mssqlServerVulnerabilityAssessmentNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.MssqlServerVulnerabilityAssessment, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MssqlServerVulnerabilityAssessment))
	})
	return ret, err
}

// Get retrieves the MssqlServerVulnerabilityAssessment from the indexer for a given namespace and name.
func (s mssqlServerVulnerabilityAssessmentNamespaceLister) Get(name string) (*v1alpha1.MssqlServerVulnerabilityAssessment, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("mssqlservervulnerabilityassessment"), name)
	}
	return obj.(*v1alpha1.MssqlServerVulnerabilityAssessment), nil
}
