/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// VirtualNetworkGatewayConnectionLister helps list VirtualNetworkGatewayConnections.
type VirtualNetworkGatewayConnectionLister interface {
	// List lists all VirtualNetworkGatewayConnections in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.VirtualNetworkGatewayConnection, err error)
	// VirtualNetworkGatewayConnections returns an object that can list and get VirtualNetworkGatewayConnections.
	VirtualNetworkGatewayConnections(namespace string) VirtualNetworkGatewayConnectionNamespaceLister
	VirtualNetworkGatewayConnectionListerExpansion
}

// virtualNetworkGatewayConnectionLister implements the VirtualNetworkGatewayConnectionLister interface.
type virtualNetworkGatewayConnectionLister struct {
	indexer cache.Indexer
}

// NewVirtualNetworkGatewayConnectionLister returns a new VirtualNetworkGatewayConnectionLister.
func NewVirtualNetworkGatewayConnectionLister(indexer cache.Indexer) VirtualNetworkGatewayConnectionLister {
	return &virtualNetworkGatewayConnectionLister{indexer: indexer}
}

// List lists all VirtualNetworkGatewayConnections in the indexer.
func (s *virtualNetworkGatewayConnectionLister) List(selector labels.Selector) (ret []*v1alpha1.VirtualNetworkGatewayConnection, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.VirtualNetworkGatewayConnection))
	})
	return ret, err
}

// VirtualNetworkGatewayConnections returns an object that can list and get VirtualNetworkGatewayConnections.
func (s *virtualNetworkGatewayConnectionLister) VirtualNetworkGatewayConnections(namespace string) VirtualNetworkGatewayConnectionNamespaceLister {
	return virtualNetworkGatewayConnectionNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// VirtualNetworkGatewayConnectionNamespaceLister helps list and get VirtualNetworkGatewayConnections.
type VirtualNetworkGatewayConnectionNamespaceLister interface {
	// List lists all VirtualNetworkGatewayConnections in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.VirtualNetworkGatewayConnection, err error)
	// Get retrieves the VirtualNetworkGatewayConnection from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.VirtualNetworkGatewayConnection, error)
	VirtualNetworkGatewayConnectionNamespaceListerExpansion
}

// virtualNetworkGatewayConnectionNamespaceLister implements the VirtualNetworkGatewayConnectionNamespaceLister
// interface.
type virtualNetworkGatewayConnectionNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all VirtualNetworkGatewayConnections in the indexer for a given namespace.
func (s virtualNetworkGatewayConnectionNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.VirtualNetworkGatewayConnection, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.VirtualNetworkGatewayConnection))
	})
	return ret, err
}

// Get retrieves the VirtualNetworkGatewayConnection from the indexer for a given namespace and name.
func (s virtualNetworkGatewayConnectionNamespaceLister) Get(name string) (*v1alpha1.VirtualNetworkGatewayConnection, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("virtualnetworkgatewayconnection"), name)
	}
	return obj.(*v1alpha1.VirtualNetworkGatewayConnection), nil
}
