/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"
)

// PostgresqlServerLister helps list PostgresqlServers.
type PostgresqlServerLister interface {
	// List lists all PostgresqlServers in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.PostgresqlServer, err error)
	// PostgresqlServers returns an object that can list and get PostgresqlServers.
	PostgresqlServers(namespace string) PostgresqlServerNamespaceLister
	PostgresqlServerListerExpansion
}

// postgresqlServerLister implements the PostgresqlServerLister interface.
type postgresqlServerLister struct {
	indexer cache.Indexer
}

// NewPostgresqlServerLister returns a new PostgresqlServerLister.
func NewPostgresqlServerLister(indexer cache.Indexer) PostgresqlServerLister {
	return &postgresqlServerLister{indexer: indexer}
}

// List lists all PostgresqlServers in the indexer.
func (s *postgresqlServerLister) List(selector labels.Selector) (ret []*v1alpha1.PostgresqlServer, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PostgresqlServer))
	})
	return ret, err
}

// PostgresqlServers returns an object that can list and get PostgresqlServers.
func (s *postgresqlServerLister) PostgresqlServers(namespace string) PostgresqlServerNamespaceLister {
	return postgresqlServerNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PostgresqlServerNamespaceLister helps list and get PostgresqlServers.
type PostgresqlServerNamespaceLister interface {
	// List lists all PostgresqlServers in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.PostgresqlServer, err error)
	// Get retrieves the PostgresqlServer from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.PostgresqlServer, error)
	PostgresqlServerNamespaceListerExpansion
}

// postgresqlServerNamespaceLister implements the PostgresqlServerNamespaceLister
// interface.
type postgresqlServerNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all PostgresqlServers in the indexer for a given namespace.
func (s postgresqlServerNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.PostgresqlServer, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PostgresqlServer))
	})
	return ret, err
}

// Get retrieves the PostgresqlServer from the indexer for a given namespace and name.
func (s postgresqlServerNamespaceLister) Get(name string) (*v1alpha1.PostgresqlServer, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("postgresqlserver"), name)
	}
	return obj.(*v1alpha1.PostgresqlServer), nil
}
