/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"
)

// ApiManagementProductAPILister helps list ApiManagementProductAPIs.
type ApiManagementProductAPILister interface {
	// List lists all ApiManagementProductAPIs in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ApiManagementProductAPI, err error)
	// ApiManagementProductAPIs returns an object that can list and get ApiManagementProductAPIs.
	ApiManagementProductAPIs(namespace string) ApiManagementProductAPINamespaceLister
	ApiManagementProductAPIListerExpansion
}

// apiManagementProductAPILister implements the ApiManagementProductAPILister interface.
type apiManagementProductAPILister struct {
	indexer cache.Indexer
}

// NewApiManagementProductAPILister returns a new ApiManagementProductAPILister.
func NewApiManagementProductAPILister(indexer cache.Indexer) ApiManagementProductAPILister {
	return &apiManagementProductAPILister{indexer: indexer}
}

// List lists all ApiManagementProductAPIs in the indexer.
func (s *apiManagementProductAPILister) List(selector labels.Selector) (ret []*v1alpha1.ApiManagementProductAPI, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ApiManagementProductAPI))
	})
	return ret, err
}

// ApiManagementProductAPIs returns an object that can list and get ApiManagementProductAPIs.
func (s *apiManagementProductAPILister) ApiManagementProductAPIs(namespace string) ApiManagementProductAPINamespaceLister {
	return apiManagementProductAPINamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ApiManagementProductAPINamespaceLister helps list and get ApiManagementProductAPIs.
type ApiManagementProductAPINamespaceLister interface {
	// List lists all ApiManagementProductAPIs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ApiManagementProductAPI, err error)
	// Get retrieves the ApiManagementProductAPI from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ApiManagementProductAPI, error)
	ApiManagementProductAPINamespaceListerExpansion
}

// apiManagementProductAPINamespaceLister implements the ApiManagementProductAPINamespaceLister
// interface.
type apiManagementProductAPINamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ApiManagementProductAPIs in the indexer for a given namespace.
func (s apiManagementProductAPINamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ApiManagementProductAPI, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ApiManagementProductAPI))
	})
	return ret, err
}

// Get retrieves the ApiManagementProductAPI from the indexer for a given namespace and name.
func (s apiManagementProductAPINamespaceLister) Get(name string) (*v1alpha1.ApiManagementProductAPI, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("apimanagementproductapi"), name)
	}
	return obj.(*v1alpha1.ApiManagementProductAPI), nil
}
