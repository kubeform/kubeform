/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// KustoDatabaseLister helps list KustoDatabases.
type KustoDatabaseLister interface {
	// List lists all KustoDatabases in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.KustoDatabase, err error)
	// KustoDatabases returns an object that can list and get KustoDatabases.
	KustoDatabases(namespace string) KustoDatabaseNamespaceLister
	KustoDatabaseListerExpansion
}

// kustoDatabaseLister implements the KustoDatabaseLister interface.
type kustoDatabaseLister struct {
	indexer cache.Indexer
}

// NewKustoDatabaseLister returns a new KustoDatabaseLister.
func NewKustoDatabaseLister(indexer cache.Indexer) KustoDatabaseLister {
	return &kustoDatabaseLister{indexer: indexer}
}

// List lists all KustoDatabases in the indexer.
func (s *kustoDatabaseLister) List(selector labels.Selector) (ret []*v1alpha1.KustoDatabase, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.KustoDatabase))
	})
	return ret, err
}

// KustoDatabases returns an object that can list and get KustoDatabases.
func (s *kustoDatabaseLister) KustoDatabases(namespace string) KustoDatabaseNamespaceLister {
	return kustoDatabaseNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// KustoDatabaseNamespaceLister helps list and get KustoDatabases.
type KustoDatabaseNamespaceLister interface {
	// List lists all KustoDatabases in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.KustoDatabase, err error)
	// Get retrieves the KustoDatabase from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.KustoDatabase, error)
	KustoDatabaseNamespaceListerExpansion
}

// kustoDatabaseNamespaceLister implements the KustoDatabaseNamespaceLister
// interface.
type kustoDatabaseNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all KustoDatabases in the indexer for a given namespace.
func (s kustoDatabaseNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.KustoDatabase, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.KustoDatabase))
	})
	return ret, err
}

// Get retrieves the KustoDatabase from the indexer for a given namespace and name.
func (s kustoDatabaseNamespaceLister) Get(name string) (*v1alpha1.KustoDatabase, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("kustodatabase"), name)
	}
	return obj.(*v1alpha1.KustoDatabase), nil
}
