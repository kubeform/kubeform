/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// RecoveryServicesProtectionContainerLister helps list RecoveryServicesProtectionContainers.
type RecoveryServicesProtectionContainerLister interface {
	// List lists all RecoveryServicesProtectionContainers in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.RecoveryServicesProtectionContainer, err error)
	// RecoveryServicesProtectionContainers returns an object that can list and get RecoveryServicesProtectionContainers.
	RecoveryServicesProtectionContainers(namespace string) RecoveryServicesProtectionContainerNamespaceLister
	RecoveryServicesProtectionContainerListerExpansion
}

// recoveryServicesProtectionContainerLister implements the RecoveryServicesProtectionContainerLister interface.
type recoveryServicesProtectionContainerLister struct {
	indexer cache.Indexer
}

// NewRecoveryServicesProtectionContainerLister returns a new RecoveryServicesProtectionContainerLister.
func NewRecoveryServicesProtectionContainerLister(indexer cache.Indexer) RecoveryServicesProtectionContainerLister {
	return &recoveryServicesProtectionContainerLister{indexer: indexer}
}

// List lists all RecoveryServicesProtectionContainers in the indexer.
func (s *recoveryServicesProtectionContainerLister) List(selector labels.Selector) (ret []*v1alpha1.RecoveryServicesProtectionContainer, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RecoveryServicesProtectionContainer))
	})
	return ret, err
}

// RecoveryServicesProtectionContainers returns an object that can list and get RecoveryServicesProtectionContainers.
func (s *recoveryServicesProtectionContainerLister) RecoveryServicesProtectionContainers(namespace string) RecoveryServicesProtectionContainerNamespaceLister {
	return recoveryServicesProtectionContainerNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// RecoveryServicesProtectionContainerNamespaceLister helps list and get RecoveryServicesProtectionContainers.
type RecoveryServicesProtectionContainerNamespaceLister interface {
	// List lists all RecoveryServicesProtectionContainers in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.RecoveryServicesProtectionContainer, err error)
	// Get retrieves the RecoveryServicesProtectionContainer from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.RecoveryServicesProtectionContainer, error)
	RecoveryServicesProtectionContainerNamespaceListerExpansion
}

// recoveryServicesProtectionContainerNamespaceLister implements the RecoveryServicesProtectionContainerNamespaceLister
// interface.
type recoveryServicesProtectionContainerNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all RecoveryServicesProtectionContainers in the indexer for a given namespace.
func (s recoveryServicesProtectionContainerNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.RecoveryServicesProtectionContainer, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RecoveryServicesProtectionContainer))
	})
	return ret, err
}

// Get retrieves the RecoveryServicesProtectionContainer from the indexer for a given namespace and name.
func (s recoveryServicesProtectionContainerNamespaceLister) Get(name string) (*v1alpha1.RecoveryServicesProtectionContainer, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("recoveryservicesprotectioncontainer"), name)
	}
	return obj.(*v1alpha1.RecoveryServicesProtectionContainer), nil
}
