/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// VirtualNetworkGatewayLister helps list VirtualNetworkGateways.
type VirtualNetworkGatewayLister interface {
	// List lists all VirtualNetworkGateways in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.VirtualNetworkGateway, err error)
	// VirtualNetworkGateways returns an object that can list and get VirtualNetworkGateways.
	VirtualNetworkGateways(namespace string) VirtualNetworkGatewayNamespaceLister
	VirtualNetworkGatewayListerExpansion
}

// virtualNetworkGatewayLister implements the VirtualNetworkGatewayLister interface.
type virtualNetworkGatewayLister struct {
	indexer cache.Indexer
}

// NewVirtualNetworkGatewayLister returns a new VirtualNetworkGatewayLister.
func NewVirtualNetworkGatewayLister(indexer cache.Indexer) VirtualNetworkGatewayLister {
	return &virtualNetworkGatewayLister{indexer: indexer}
}

// List lists all VirtualNetworkGateways in the indexer.
func (s *virtualNetworkGatewayLister) List(selector labels.Selector) (ret []*v1alpha1.VirtualNetworkGateway, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.VirtualNetworkGateway))
	})
	return ret, err
}

// VirtualNetworkGateways returns an object that can list and get VirtualNetworkGateways.
func (s *virtualNetworkGatewayLister) VirtualNetworkGateways(namespace string) VirtualNetworkGatewayNamespaceLister {
	return virtualNetworkGatewayNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// VirtualNetworkGatewayNamespaceLister helps list and get VirtualNetworkGateways.
type VirtualNetworkGatewayNamespaceLister interface {
	// List lists all VirtualNetworkGateways in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.VirtualNetworkGateway, err error)
	// Get retrieves the VirtualNetworkGateway from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.VirtualNetworkGateway, error)
	VirtualNetworkGatewayNamespaceListerExpansion
}

// virtualNetworkGatewayNamespaceLister implements the VirtualNetworkGatewayNamespaceLister
// interface.
type virtualNetworkGatewayNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all VirtualNetworkGateways in the indexer for a given namespace.
func (s virtualNetworkGatewayNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.VirtualNetworkGateway, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.VirtualNetworkGateway))
	})
	return ret, err
}

// Get retrieves the VirtualNetworkGateway from the indexer for a given namespace and name.
func (s virtualNetworkGatewayNamespaceLister) Get(name string) (*v1alpha1.VirtualNetworkGateway, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("virtualnetworkgateway"), name)
	}
	return obj.(*v1alpha1.VirtualNetworkGateway), nil
}
