/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// BackupPolicyFileShareLister helps list BackupPolicyFileShares.
type BackupPolicyFileShareLister interface {
	// List lists all BackupPolicyFileShares in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.BackupPolicyFileShare, err error)
	// BackupPolicyFileShares returns an object that can list and get BackupPolicyFileShares.
	BackupPolicyFileShares(namespace string) BackupPolicyFileShareNamespaceLister
	BackupPolicyFileShareListerExpansion
}

// backupPolicyFileShareLister implements the BackupPolicyFileShareLister interface.
type backupPolicyFileShareLister struct {
	indexer cache.Indexer
}

// NewBackupPolicyFileShareLister returns a new BackupPolicyFileShareLister.
func NewBackupPolicyFileShareLister(indexer cache.Indexer) BackupPolicyFileShareLister {
	return &backupPolicyFileShareLister{indexer: indexer}
}

// List lists all BackupPolicyFileShares in the indexer.
func (s *backupPolicyFileShareLister) List(selector labels.Selector) (ret []*v1alpha1.BackupPolicyFileShare, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.BackupPolicyFileShare))
	})
	return ret, err
}

// BackupPolicyFileShares returns an object that can list and get BackupPolicyFileShares.
func (s *backupPolicyFileShareLister) BackupPolicyFileShares(namespace string) BackupPolicyFileShareNamespaceLister {
	return backupPolicyFileShareNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// BackupPolicyFileShareNamespaceLister helps list and get BackupPolicyFileShares.
type BackupPolicyFileShareNamespaceLister interface {
	// List lists all BackupPolicyFileShares in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.BackupPolicyFileShare, err error)
	// Get retrieves the BackupPolicyFileShare from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.BackupPolicyFileShare, error)
	BackupPolicyFileShareNamespaceListerExpansion
}

// backupPolicyFileShareNamespaceLister implements the BackupPolicyFileShareNamespaceLister
// interface.
type backupPolicyFileShareNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all BackupPolicyFileShares in the indexer for a given namespace.
func (s backupPolicyFileShareNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.BackupPolicyFileShare, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.BackupPolicyFileShare))
	})
	return ret, err
}

// Get retrieves the BackupPolicyFileShare from the indexer for a given namespace and name.
func (s backupPolicyFileShareNamespaceLister) Get(name string) (*v1alpha1.BackupPolicyFileShare, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("backuppolicyfileshare"), name)
	}
	return obj.(*v1alpha1.BackupPolicyFileShare), nil
}
