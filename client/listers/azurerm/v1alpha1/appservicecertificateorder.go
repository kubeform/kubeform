/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AppServiceCertificateOrderLister helps list AppServiceCertificateOrders.
type AppServiceCertificateOrderLister interface {
	// List lists all AppServiceCertificateOrders in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.AppServiceCertificateOrder, err error)
	// AppServiceCertificateOrders returns an object that can list and get AppServiceCertificateOrders.
	AppServiceCertificateOrders(namespace string) AppServiceCertificateOrderNamespaceLister
	AppServiceCertificateOrderListerExpansion
}

// appServiceCertificateOrderLister implements the AppServiceCertificateOrderLister interface.
type appServiceCertificateOrderLister struct {
	indexer cache.Indexer
}

// NewAppServiceCertificateOrderLister returns a new AppServiceCertificateOrderLister.
func NewAppServiceCertificateOrderLister(indexer cache.Indexer) AppServiceCertificateOrderLister {
	return &appServiceCertificateOrderLister{indexer: indexer}
}

// List lists all AppServiceCertificateOrders in the indexer.
func (s *appServiceCertificateOrderLister) List(selector labels.Selector) (ret []*v1alpha1.AppServiceCertificateOrder, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AppServiceCertificateOrder))
	})
	return ret, err
}

// AppServiceCertificateOrders returns an object that can list and get AppServiceCertificateOrders.
func (s *appServiceCertificateOrderLister) AppServiceCertificateOrders(namespace string) AppServiceCertificateOrderNamespaceLister {
	return appServiceCertificateOrderNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AppServiceCertificateOrderNamespaceLister helps list and get AppServiceCertificateOrders.
type AppServiceCertificateOrderNamespaceLister interface {
	// List lists all AppServiceCertificateOrders in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.AppServiceCertificateOrder, err error)
	// Get retrieves the AppServiceCertificateOrder from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.AppServiceCertificateOrder, error)
	AppServiceCertificateOrderNamespaceListerExpansion
}

// appServiceCertificateOrderNamespaceLister implements the AppServiceCertificateOrderNamespaceLister
// interface.
type appServiceCertificateOrderNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AppServiceCertificateOrders in the indexer for a given namespace.
func (s appServiceCertificateOrderNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AppServiceCertificateOrder, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AppServiceCertificateOrder))
	})
	return ret, err
}

// Get retrieves the AppServiceCertificateOrder from the indexer for a given namespace and name.
func (s appServiceCertificateOrderNamespaceLister) Get(name string) (*v1alpha1.AppServiceCertificateOrder, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("appservicecertificateorder"), name)
	}
	return obj.(*v1alpha1.AppServiceCertificateOrder), nil
}
