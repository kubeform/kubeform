/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ApiManagementGroupUserLister helps list ApiManagementGroupUsers.
type ApiManagementGroupUserLister interface {
	// List lists all ApiManagementGroupUsers in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ApiManagementGroupUser, err error)
	// ApiManagementGroupUsers returns an object that can list and get ApiManagementGroupUsers.
	ApiManagementGroupUsers(namespace string) ApiManagementGroupUserNamespaceLister
	ApiManagementGroupUserListerExpansion
}

// apiManagementGroupUserLister implements the ApiManagementGroupUserLister interface.
type apiManagementGroupUserLister struct {
	indexer cache.Indexer
}

// NewApiManagementGroupUserLister returns a new ApiManagementGroupUserLister.
func NewApiManagementGroupUserLister(indexer cache.Indexer) ApiManagementGroupUserLister {
	return &apiManagementGroupUserLister{indexer: indexer}
}

// List lists all ApiManagementGroupUsers in the indexer.
func (s *apiManagementGroupUserLister) List(selector labels.Selector) (ret []*v1alpha1.ApiManagementGroupUser, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ApiManagementGroupUser))
	})
	return ret, err
}

// ApiManagementGroupUsers returns an object that can list and get ApiManagementGroupUsers.
func (s *apiManagementGroupUserLister) ApiManagementGroupUsers(namespace string) ApiManagementGroupUserNamespaceLister {
	return apiManagementGroupUserNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ApiManagementGroupUserNamespaceLister helps list and get ApiManagementGroupUsers.
type ApiManagementGroupUserNamespaceLister interface {
	// List lists all ApiManagementGroupUsers in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ApiManagementGroupUser, err error)
	// Get retrieves the ApiManagementGroupUser from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ApiManagementGroupUser, error)
	ApiManagementGroupUserNamespaceListerExpansion
}

// apiManagementGroupUserNamespaceLister implements the ApiManagementGroupUserNamespaceLister
// interface.
type apiManagementGroupUserNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ApiManagementGroupUsers in the indexer for a given namespace.
func (s apiManagementGroupUserNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ApiManagementGroupUser, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ApiManagementGroupUser))
	})
	return ret, err
}

// Get retrieves the ApiManagementGroupUser from the indexer for a given namespace and name.
func (s apiManagementGroupUserNamespaceLister) Get(name string) (*v1alpha1.ApiManagementGroupUser, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("apimanagementgroupuser"), name)
	}
	return obj.(*v1alpha1.ApiManagementGroupUser), nil
}
