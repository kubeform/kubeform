/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// RecoveryServicesProtectedVmLister helps list RecoveryServicesProtectedVms.
type RecoveryServicesProtectedVmLister interface {
	// List lists all RecoveryServicesProtectedVms in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.RecoveryServicesProtectedVm, err error)
	// RecoveryServicesProtectedVms returns an object that can list and get RecoveryServicesProtectedVms.
	RecoveryServicesProtectedVms(namespace string) RecoveryServicesProtectedVmNamespaceLister
	RecoveryServicesProtectedVmListerExpansion
}

// recoveryServicesProtectedVmLister implements the RecoveryServicesProtectedVmLister interface.
type recoveryServicesProtectedVmLister struct {
	indexer cache.Indexer
}

// NewRecoveryServicesProtectedVmLister returns a new RecoveryServicesProtectedVmLister.
func NewRecoveryServicesProtectedVmLister(indexer cache.Indexer) RecoveryServicesProtectedVmLister {
	return &recoveryServicesProtectedVmLister{indexer: indexer}
}

// List lists all RecoveryServicesProtectedVms in the indexer.
func (s *recoveryServicesProtectedVmLister) List(selector labels.Selector) (ret []*v1alpha1.RecoveryServicesProtectedVm, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RecoveryServicesProtectedVm))
	})
	return ret, err
}

// RecoveryServicesProtectedVms returns an object that can list and get RecoveryServicesProtectedVms.
func (s *recoveryServicesProtectedVmLister) RecoveryServicesProtectedVms(namespace string) RecoveryServicesProtectedVmNamespaceLister {
	return recoveryServicesProtectedVmNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// RecoveryServicesProtectedVmNamespaceLister helps list and get RecoveryServicesProtectedVms.
type RecoveryServicesProtectedVmNamespaceLister interface {
	// List lists all RecoveryServicesProtectedVms in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.RecoveryServicesProtectedVm, err error)
	// Get retrieves the RecoveryServicesProtectedVm from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.RecoveryServicesProtectedVm, error)
	RecoveryServicesProtectedVmNamespaceListerExpansion
}

// recoveryServicesProtectedVmNamespaceLister implements the RecoveryServicesProtectedVmNamespaceLister
// interface.
type recoveryServicesProtectedVmNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all RecoveryServicesProtectedVms in the indexer for a given namespace.
func (s recoveryServicesProtectedVmNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.RecoveryServicesProtectedVm, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RecoveryServicesProtectedVm))
	})
	return ret, err
}

// Get retrieves the RecoveryServicesProtectedVm from the indexer for a given namespace and name.
func (s recoveryServicesProtectedVmNamespaceLister) Get(name string) (*v1alpha1.RecoveryServicesProtectedVm, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("recoveryservicesprotectedvm"), name)
	}
	return obj.(*v1alpha1.RecoveryServicesProtectedVm), nil
}
