/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SchedulerJobCollectionLister helps list SchedulerJobCollections.
type SchedulerJobCollectionLister interface {
	// List lists all SchedulerJobCollections in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.SchedulerJobCollection, err error)
	// SchedulerJobCollections returns an object that can list and get SchedulerJobCollections.
	SchedulerJobCollections(namespace string) SchedulerJobCollectionNamespaceLister
	SchedulerJobCollectionListerExpansion
}

// schedulerJobCollectionLister implements the SchedulerJobCollectionLister interface.
type schedulerJobCollectionLister struct {
	indexer cache.Indexer
}

// NewSchedulerJobCollectionLister returns a new SchedulerJobCollectionLister.
func NewSchedulerJobCollectionLister(indexer cache.Indexer) SchedulerJobCollectionLister {
	return &schedulerJobCollectionLister{indexer: indexer}
}

// List lists all SchedulerJobCollections in the indexer.
func (s *schedulerJobCollectionLister) List(selector labels.Selector) (ret []*v1alpha1.SchedulerJobCollection, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SchedulerJobCollection))
	})
	return ret, err
}

// SchedulerJobCollections returns an object that can list and get SchedulerJobCollections.
func (s *schedulerJobCollectionLister) SchedulerJobCollections(namespace string) SchedulerJobCollectionNamespaceLister {
	return schedulerJobCollectionNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SchedulerJobCollectionNamespaceLister helps list and get SchedulerJobCollections.
type SchedulerJobCollectionNamespaceLister interface {
	// List lists all SchedulerJobCollections in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.SchedulerJobCollection, err error)
	// Get retrieves the SchedulerJobCollection from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.SchedulerJobCollection, error)
	SchedulerJobCollectionNamespaceListerExpansion
}

// schedulerJobCollectionNamespaceLister implements the SchedulerJobCollectionNamespaceLister
// interface.
type schedulerJobCollectionNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SchedulerJobCollections in the indexer for a given namespace.
func (s schedulerJobCollectionNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SchedulerJobCollection, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SchedulerJobCollection))
	})
	return ret, err
}

// Get retrieves the SchedulerJobCollection from the indexer for a given namespace and name.
func (s schedulerJobCollectionNamespaceLister) Get(name string) (*v1alpha1.SchedulerJobCollection, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("schedulerjobcollection"), name)
	}
	return obj.(*v1alpha1.SchedulerJobCollection), nil
}
