/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// StreamAnalyticsOutputServicebusQueueLister helps list StreamAnalyticsOutputServicebusQueues.
type StreamAnalyticsOutputServicebusQueueLister interface {
	// List lists all StreamAnalyticsOutputServicebusQueues in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.StreamAnalyticsOutputServicebusQueue, err error)
	// StreamAnalyticsOutputServicebusQueues returns an object that can list and get StreamAnalyticsOutputServicebusQueues.
	StreamAnalyticsOutputServicebusQueues(namespace string) StreamAnalyticsOutputServicebusQueueNamespaceLister
	StreamAnalyticsOutputServicebusQueueListerExpansion
}

// streamAnalyticsOutputServicebusQueueLister implements the StreamAnalyticsOutputServicebusQueueLister interface.
type streamAnalyticsOutputServicebusQueueLister struct {
	indexer cache.Indexer
}

// NewStreamAnalyticsOutputServicebusQueueLister returns a new StreamAnalyticsOutputServicebusQueueLister.
func NewStreamAnalyticsOutputServicebusQueueLister(indexer cache.Indexer) StreamAnalyticsOutputServicebusQueueLister {
	return &streamAnalyticsOutputServicebusQueueLister{indexer: indexer}
}

// List lists all StreamAnalyticsOutputServicebusQueues in the indexer.
func (s *streamAnalyticsOutputServicebusQueueLister) List(selector labels.Selector) (ret []*v1alpha1.StreamAnalyticsOutputServicebusQueue, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.StreamAnalyticsOutputServicebusQueue))
	})
	return ret, err
}

// StreamAnalyticsOutputServicebusQueues returns an object that can list and get StreamAnalyticsOutputServicebusQueues.
func (s *streamAnalyticsOutputServicebusQueueLister) StreamAnalyticsOutputServicebusQueues(namespace string) StreamAnalyticsOutputServicebusQueueNamespaceLister {
	return streamAnalyticsOutputServicebusQueueNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// StreamAnalyticsOutputServicebusQueueNamespaceLister helps list and get StreamAnalyticsOutputServicebusQueues.
type StreamAnalyticsOutputServicebusQueueNamespaceLister interface {
	// List lists all StreamAnalyticsOutputServicebusQueues in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.StreamAnalyticsOutputServicebusQueue, err error)
	// Get retrieves the StreamAnalyticsOutputServicebusQueue from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.StreamAnalyticsOutputServicebusQueue, error)
	StreamAnalyticsOutputServicebusQueueNamespaceListerExpansion
}

// streamAnalyticsOutputServicebusQueueNamespaceLister implements the StreamAnalyticsOutputServicebusQueueNamespaceLister
// interface.
type streamAnalyticsOutputServicebusQueueNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all StreamAnalyticsOutputServicebusQueues in the indexer for a given namespace.
func (s streamAnalyticsOutputServicebusQueueNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.StreamAnalyticsOutputServicebusQueue, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.StreamAnalyticsOutputServicebusQueue))
	})
	return ret, err
}

// Get retrieves the StreamAnalyticsOutputServicebusQueue from the indexer for a given namespace and name.
func (s streamAnalyticsOutputServicebusQueueNamespaceLister) Get(name string) (*v1alpha1.StreamAnalyticsOutputServicebusQueue, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("streamanalyticsoutputservicebusqueue"), name)
	}
	return obj.(*v1alpha1.StreamAnalyticsOutputServicebusQueue), nil
}
