/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ApiManagementAPIOperationLister helps list ApiManagementAPIOperations.
type ApiManagementAPIOperationLister interface {
	// List lists all ApiManagementAPIOperations in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ApiManagementAPIOperation, err error)
	// ApiManagementAPIOperations returns an object that can list and get ApiManagementAPIOperations.
	ApiManagementAPIOperations(namespace string) ApiManagementAPIOperationNamespaceLister
	ApiManagementAPIOperationListerExpansion
}

// apiManagementAPIOperationLister implements the ApiManagementAPIOperationLister interface.
type apiManagementAPIOperationLister struct {
	indexer cache.Indexer
}

// NewApiManagementAPIOperationLister returns a new ApiManagementAPIOperationLister.
func NewApiManagementAPIOperationLister(indexer cache.Indexer) ApiManagementAPIOperationLister {
	return &apiManagementAPIOperationLister{indexer: indexer}
}

// List lists all ApiManagementAPIOperations in the indexer.
func (s *apiManagementAPIOperationLister) List(selector labels.Selector) (ret []*v1alpha1.ApiManagementAPIOperation, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ApiManagementAPIOperation))
	})
	return ret, err
}

// ApiManagementAPIOperations returns an object that can list and get ApiManagementAPIOperations.
func (s *apiManagementAPIOperationLister) ApiManagementAPIOperations(namespace string) ApiManagementAPIOperationNamespaceLister {
	return apiManagementAPIOperationNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ApiManagementAPIOperationNamespaceLister helps list and get ApiManagementAPIOperations.
type ApiManagementAPIOperationNamespaceLister interface {
	// List lists all ApiManagementAPIOperations in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ApiManagementAPIOperation, err error)
	// Get retrieves the ApiManagementAPIOperation from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ApiManagementAPIOperation, error)
	ApiManagementAPIOperationNamespaceListerExpansion
}

// apiManagementAPIOperationNamespaceLister implements the ApiManagementAPIOperationNamespaceLister
// interface.
type apiManagementAPIOperationNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ApiManagementAPIOperations in the indexer for a given namespace.
func (s apiManagementAPIOperationNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ApiManagementAPIOperation, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ApiManagementAPIOperation))
	})
	return ret, err
}

// Get retrieves the ApiManagementAPIOperation from the indexer for a given namespace and name.
func (s apiManagementAPIOperationNamespaceLister) Get(name string) (*v1alpha1.ApiManagementAPIOperation, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("apimanagementapioperation"), name)
	}
	return obj.(*v1alpha1.ApiManagementAPIOperation), nil
}
