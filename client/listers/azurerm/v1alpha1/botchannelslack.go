/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// BotChannelSlackLister helps list BotChannelSlacks.
type BotChannelSlackLister interface {
	// List lists all BotChannelSlacks in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.BotChannelSlack, err error)
	// BotChannelSlacks returns an object that can list and get BotChannelSlacks.
	BotChannelSlacks(namespace string) BotChannelSlackNamespaceLister
	BotChannelSlackListerExpansion
}

// botChannelSlackLister implements the BotChannelSlackLister interface.
type botChannelSlackLister struct {
	indexer cache.Indexer
}

// NewBotChannelSlackLister returns a new BotChannelSlackLister.
func NewBotChannelSlackLister(indexer cache.Indexer) BotChannelSlackLister {
	return &botChannelSlackLister{indexer: indexer}
}

// List lists all BotChannelSlacks in the indexer.
func (s *botChannelSlackLister) List(selector labels.Selector) (ret []*v1alpha1.BotChannelSlack, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.BotChannelSlack))
	})
	return ret, err
}

// BotChannelSlacks returns an object that can list and get BotChannelSlacks.
func (s *botChannelSlackLister) BotChannelSlacks(namespace string) BotChannelSlackNamespaceLister {
	return botChannelSlackNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// BotChannelSlackNamespaceLister helps list and get BotChannelSlacks.
type BotChannelSlackNamespaceLister interface {
	// List lists all BotChannelSlacks in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.BotChannelSlack, err error)
	// Get retrieves the BotChannelSlack from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.BotChannelSlack, error)
	BotChannelSlackNamespaceListerExpansion
}

// botChannelSlackNamespaceLister implements the BotChannelSlackNamespaceLister
// interface.
type botChannelSlackNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all BotChannelSlacks in the indexer for a given namespace.
func (s botChannelSlackNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.BotChannelSlack, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.BotChannelSlack))
	})
	return ret, err
}

// Get retrieves the BotChannelSlack from the indexer for a given namespace and name.
func (s botChannelSlackNamespaceLister) Get(name string) (*v1alpha1.BotChannelSlack, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("botchannelslack"), name)
	}
	return obj.(*v1alpha1.BotChannelSlack), nil
}
