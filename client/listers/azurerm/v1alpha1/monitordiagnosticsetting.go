/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// MonitorDiagnosticSettingLister helps list MonitorDiagnosticSettings.
type MonitorDiagnosticSettingLister interface {
	// List lists all MonitorDiagnosticSettings in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.MonitorDiagnosticSetting, err error)
	// MonitorDiagnosticSettings returns an object that can list and get MonitorDiagnosticSettings.
	MonitorDiagnosticSettings(namespace string) MonitorDiagnosticSettingNamespaceLister
	MonitorDiagnosticSettingListerExpansion
}

// monitorDiagnosticSettingLister implements the MonitorDiagnosticSettingLister interface.
type monitorDiagnosticSettingLister struct {
	indexer cache.Indexer
}

// NewMonitorDiagnosticSettingLister returns a new MonitorDiagnosticSettingLister.
func NewMonitorDiagnosticSettingLister(indexer cache.Indexer) MonitorDiagnosticSettingLister {
	return &monitorDiagnosticSettingLister{indexer: indexer}
}

// List lists all MonitorDiagnosticSettings in the indexer.
func (s *monitorDiagnosticSettingLister) List(selector labels.Selector) (ret []*v1alpha1.MonitorDiagnosticSetting, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MonitorDiagnosticSetting))
	})
	return ret, err
}

// MonitorDiagnosticSettings returns an object that can list and get MonitorDiagnosticSettings.
func (s *monitorDiagnosticSettingLister) MonitorDiagnosticSettings(namespace string) MonitorDiagnosticSettingNamespaceLister {
	return monitorDiagnosticSettingNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// MonitorDiagnosticSettingNamespaceLister helps list and get MonitorDiagnosticSettings.
type MonitorDiagnosticSettingNamespaceLister interface {
	// List lists all MonitorDiagnosticSettings in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.MonitorDiagnosticSetting, err error)
	// Get retrieves the MonitorDiagnosticSetting from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.MonitorDiagnosticSetting, error)
	MonitorDiagnosticSettingNamespaceListerExpansion
}

// monitorDiagnosticSettingNamespaceLister implements the MonitorDiagnosticSettingNamespaceLister
// interface.
type monitorDiagnosticSettingNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all MonitorDiagnosticSettings in the indexer for a given namespace.
func (s monitorDiagnosticSettingNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.MonitorDiagnosticSetting, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MonitorDiagnosticSetting))
	})
	return ret, err
}

// Get retrieves the MonitorDiagnosticSetting from the indexer for a given namespace and name.
func (s monitorDiagnosticSettingNamespaceLister) Get(name string) (*v1alpha1.MonitorDiagnosticSetting, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("monitordiagnosticsetting"), name)
	}
	return obj.(*v1alpha1.MonitorDiagnosticSetting), nil
}
