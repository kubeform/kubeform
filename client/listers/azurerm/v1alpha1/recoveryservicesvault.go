/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// RecoveryServicesVaultLister helps list RecoveryServicesVaults.
type RecoveryServicesVaultLister interface {
	// List lists all RecoveryServicesVaults in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.RecoveryServicesVault, err error)
	// RecoveryServicesVaults returns an object that can list and get RecoveryServicesVaults.
	RecoveryServicesVaults(namespace string) RecoveryServicesVaultNamespaceLister
	RecoveryServicesVaultListerExpansion
}

// recoveryServicesVaultLister implements the RecoveryServicesVaultLister interface.
type recoveryServicesVaultLister struct {
	indexer cache.Indexer
}

// NewRecoveryServicesVaultLister returns a new RecoveryServicesVaultLister.
func NewRecoveryServicesVaultLister(indexer cache.Indexer) RecoveryServicesVaultLister {
	return &recoveryServicesVaultLister{indexer: indexer}
}

// List lists all RecoveryServicesVaults in the indexer.
func (s *recoveryServicesVaultLister) List(selector labels.Selector) (ret []*v1alpha1.RecoveryServicesVault, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RecoveryServicesVault))
	})
	return ret, err
}

// RecoveryServicesVaults returns an object that can list and get RecoveryServicesVaults.
func (s *recoveryServicesVaultLister) RecoveryServicesVaults(namespace string) RecoveryServicesVaultNamespaceLister {
	return recoveryServicesVaultNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// RecoveryServicesVaultNamespaceLister helps list and get RecoveryServicesVaults.
type RecoveryServicesVaultNamespaceLister interface {
	// List lists all RecoveryServicesVaults in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.RecoveryServicesVault, err error)
	// Get retrieves the RecoveryServicesVault from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.RecoveryServicesVault, error)
	RecoveryServicesVaultNamespaceListerExpansion
}

// recoveryServicesVaultNamespaceLister implements the RecoveryServicesVaultNamespaceLister
// interface.
type recoveryServicesVaultNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all RecoveryServicesVaults in the indexer for a given namespace.
func (s recoveryServicesVaultNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.RecoveryServicesVault, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RecoveryServicesVault))
	})
	return ret, err
}

// Get retrieves the RecoveryServicesVault from the indexer for a given namespace and name.
func (s recoveryServicesVaultNamespaceLister) Get(name string) (*v1alpha1.RecoveryServicesVault, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("recoveryservicesvault"), name)
	}
	return obj.(*v1alpha1.RecoveryServicesVault), nil
}
