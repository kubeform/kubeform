/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"
)

// DevTestWindowsVirtualMachineLister helps list DevTestWindowsVirtualMachines.
type DevTestWindowsVirtualMachineLister interface {
	// List lists all DevTestWindowsVirtualMachines in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.DevTestWindowsVirtualMachine, err error)
	// DevTestWindowsVirtualMachines returns an object that can list and get DevTestWindowsVirtualMachines.
	DevTestWindowsVirtualMachines(namespace string) DevTestWindowsVirtualMachineNamespaceLister
	DevTestWindowsVirtualMachineListerExpansion
}

// devTestWindowsVirtualMachineLister implements the DevTestWindowsVirtualMachineLister interface.
type devTestWindowsVirtualMachineLister struct {
	indexer cache.Indexer
}

// NewDevTestWindowsVirtualMachineLister returns a new DevTestWindowsVirtualMachineLister.
func NewDevTestWindowsVirtualMachineLister(indexer cache.Indexer) DevTestWindowsVirtualMachineLister {
	return &devTestWindowsVirtualMachineLister{indexer: indexer}
}

// List lists all DevTestWindowsVirtualMachines in the indexer.
func (s *devTestWindowsVirtualMachineLister) List(selector labels.Selector) (ret []*v1alpha1.DevTestWindowsVirtualMachine, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DevTestWindowsVirtualMachine))
	})
	return ret, err
}

// DevTestWindowsVirtualMachines returns an object that can list and get DevTestWindowsVirtualMachines.
func (s *devTestWindowsVirtualMachineLister) DevTestWindowsVirtualMachines(namespace string) DevTestWindowsVirtualMachineNamespaceLister {
	return devTestWindowsVirtualMachineNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DevTestWindowsVirtualMachineNamespaceLister helps list and get DevTestWindowsVirtualMachines.
type DevTestWindowsVirtualMachineNamespaceLister interface {
	// List lists all DevTestWindowsVirtualMachines in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.DevTestWindowsVirtualMachine, err error)
	// Get retrieves the DevTestWindowsVirtualMachine from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.DevTestWindowsVirtualMachine, error)
	DevTestWindowsVirtualMachineNamespaceListerExpansion
}

// devTestWindowsVirtualMachineNamespaceLister implements the DevTestWindowsVirtualMachineNamespaceLister
// interface.
type devTestWindowsVirtualMachineNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DevTestWindowsVirtualMachines in the indexer for a given namespace.
func (s devTestWindowsVirtualMachineNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.DevTestWindowsVirtualMachine, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DevTestWindowsVirtualMachine))
	})
	return ret, err
}

// Get retrieves the DevTestWindowsVirtualMachine from the indexer for a given namespace and name.
func (s devTestWindowsVirtualMachineNamespaceLister) Get(name string) (*v1alpha1.DevTestWindowsVirtualMachine, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("devtestwindowsvirtualmachine"), name)
	}
	return obj.(*v1alpha1.DevTestWindowsVirtualMachine), nil
}
