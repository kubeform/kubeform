/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SiteRecoveryReplicatedVmLister helps list SiteRecoveryReplicatedVms.
type SiteRecoveryReplicatedVmLister interface {
	// List lists all SiteRecoveryReplicatedVms in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.SiteRecoveryReplicatedVm, err error)
	// SiteRecoveryReplicatedVms returns an object that can list and get SiteRecoveryReplicatedVms.
	SiteRecoveryReplicatedVms(namespace string) SiteRecoveryReplicatedVmNamespaceLister
	SiteRecoveryReplicatedVmListerExpansion
}

// siteRecoveryReplicatedVmLister implements the SiteRecoveryReplicatedVmLister interface.
type siteRecoveryReplicatedVmLister struct {
	indexer cache.Indexer
}

// NewSiteRecoveryReplicatedVmLister returns a new SiteRecoveryReplicatedVmLister.
func NewSiteRecoveryReplicatedVmLister(indexer cache.Indexer) SiteRecoveryReplicatedVmLister {
	return &siteRecoveryReplicatedVmLister{indexer: indexer}
}

// List lists all SiteRecoveryReplicatedVms in the indexer.
func (s *siteRecoveryReplicatedVmLister) List(selector labels.Selector) (ret []*v1alpha1.SiteRecoveryReplicatedVm, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SiteRecoveryReplicatedVm))
	})
	return ret, err
}

// SiteRecoveryReplicatedVms returns an object that can list and get SiteRecoveryReplicatedVms.
func (s *siteRecoveryReplicatedVmLister) SiteRecoveryReplicatedVms(namespace string) SiteRecoveryReplicatedVmNamespaceLister {
	return siteRecoveryReplicatedVmNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SiteRecoveryReplicatedVmNamespaceLister helps list and get SiteRecoveryReplicatedVms.
type SiteRecoveryReplicatedVmNamespaceLister interface {
	// List lists all SiteRecoveryReplicatedVms in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.SiteRecoveryReplicatedVm, err error)
	// Get retrieves the SiteRecoveryReplicatedVm from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.SiteRecoveryReplicatedVm, error)
	SiteRecoveryReplicatedVmNamespaceListerExpansion
}

// siteRecoveryReplicatedVmNamespaceLister implements the SiteRecoveryReplicatedVmNamespaceLister
// interface.
type siteRecoveryReplicatedVmNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SiteRecoveryReplicatedVms in the indexer for a given namespace.
func (s siteRecoveryReplicatedVmNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SiteRecoveryReplicatedVm, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SiteRecoveryReplicatedVm))
	})
	return ret, err
}

// Get retrieves the SiteRecoveryReplicatedVm from the indexer for a given namespace and name.
func (s siteRecoveryReplicatedVmNamespaceLister) Get(name string) (*v1alpha1.SiteRecoveryReplicatedVm, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("siterecoveryreplicatedvm"), name)
	}
	return obj.(*v1alpha1.SiteRecoveryReplicatedVm), nil
}
