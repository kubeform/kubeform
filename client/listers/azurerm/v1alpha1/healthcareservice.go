/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// HealthcareServiceLister helps list HealthcareServices.
type HealthcareServiceLister interface {
	// List lists all HealthcareServices in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.HealthcareService, err error)
	// HealthcareServices returns an object that can list and get HealthcareServices.
	HealthcareServices(namespace string) HealthcareServiceNamespaceLister
	HealthcareServiceListerExpansion
}

// healthcareServiceLister implements the HealthcareServiceLister interface.
type healthcareServiceLister struct {
	indexer cache.Indexer
}

// NewHealthcareServiceLister returns a new HealthcareServiceLister.
func NewHealthcareServiceLister(indexer cache.Indexer) HealthcareServiceLister {
	return &healthcareServiceLister{indexer: indexer}
}

// List lists all HealthcareServices in the indexer.
func (s *healthcareServiceLister) List(selector labels.Selector) (ret []*v1alpha1.HealthcareService, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.HealthcareService))
	})
	return ret, err
}

// HealthcareServices returns an object that can list and get HealthcareServices.
func (s *healthcareServiceLister) HealthcareServices(namespace string) HealthcareServiceNamespaceLister {
	return healthcareServiceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// HealthcareServiceNamespaceLister helps list and get HealthcareServices.
type HealthcareServiceNamespaceLister interface {
	// List lists all HealthcareServices in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.HealthcareService, err error)
	// Get retrieves the HealthcareService from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.HealthcareService, error)
	HealthcareServiceNamespaceListerExpansion
}

// healthcareServiceNamespaceLister implements the HealthcareServiceNamespaceLister
// interface.
type healthcareServiceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all HealthcareServices in the indexer for a given namespace.
func (s healthcareServiceNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.HealthcareService, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.HealthcareService))
	})
	return ret, err
}

// Get retrieves the HealthcareService from the indexer for a given namespace and name.
func (s healthcareServiceNamespaceLister) Get(name string) (*v1alpha1.HealthcareService, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("healthcareservice"), name)
	}
	return obj.(*v1alpha1.HealthcareService), nil
}
