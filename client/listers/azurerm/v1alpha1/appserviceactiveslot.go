/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"
)

// AppServiceActiveSlotLister helps list AppServiceActiveSlots.
type AppServiceActiveSlotLister interface {
	// List lists all AppServiceActiveSlots in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.AppServiceActiveSlot, err error)
	// AppServiceActiveSlots returns an object that can list and get AppServiceActiveSlots.
	AppServiceActiveSlots(namespace string) AppServiceActiveSlotNamespaceLister
	AppServiceActiveSlotListerExpansion
}

// appServiceActiveSlotLister implements the AppServiceActiveSlotLister interface.
type appServiceActiveSlotLister struct {
	indexer cache.Indexer
}

// NewAppServiceActiveSlotLister returns a new AppServiceActiveSlotLister.
func NewAppServiceActiveSlotLister(indexer cache.Indexer) AppServiceActiveSlotLister {
	return &appServiceActiveSlotLister{indexer: indexer}
}

// List lists all AppServiceActiveSlots in the indexer.
func (s *appServiceActiveSlotLister) List(selector labels.Selector) (ret []*v1alpha1.AppServiceActiveSlot, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AppServiceActiveSlot))
	})
	return ret, err
}

// AppServiceActiveSlots returns an object that can list and get AppServiceActiveSlots.
func (s *appServiceActiveSlotLister) AppServiceActiveSlots(namespace string) AppServiceActiveSlotNamespaceLister {
	return appServiceActiveSlotNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AppServiceActiveSlotNamespaceLister helps list and get AppServiceActiveSlots.
type AppServiceActiveSlotNamespaceLister interface {
	// List lists all AppServiceActiveSlots in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.AppServiceActiveSlot, err error)
	// Get retrieves the AppServiceActiveSlot from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.AppServiceActiveSlot, error)
	AppServiceActiveSlotNamespaceListerExpansion
}

// appServiceActiveSlotNamespaceLister implements the AppServiceActiveSlotNamespaceLister
// interface.
type appServiceActiveSlotNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AppServiceActiveSlots in the indexer for a given namespace.
func (s appServiceActiveSlotNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AppServiceActiveSlot, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AppServiceActiveSlot))
	})
	return ret, err
}

// Get retrieves the AppServiceActiveSlot from the indexer for a given namespace and name.
func (s appServiceActiveSlotNamespaceLister) Get(name string) (*v1alpha1.AppServiceActiveSlot, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("appserviceactiveslot"), name)
	}
	return obj.(*v1alpha1.AppServiceActiveSlot), nil
}
