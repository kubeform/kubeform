/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PrivateLinkEndpointLister helps list PrivateLinkEndpoints.
type PrivateLinkEndpointLister interface {
	// List lists all PrivateLinkEndpoints in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.PrivateLinkEndpoint, err error)
	// PrivateLinkEndpoints returns an object that can list and get PrivateLinkEndpoints.
	PrivateLinkEndpoints(namespace string) PrivateLinkEndpointNamespaceLister
	PrivateLinkEndpointListerExpansion
}

// privateLinkEndpointLister implements the PrivateLinkEndpointLister interface.
type privateLinkEndpointLister struct {
	indexer cache.Indexer
}

// NewPrivateLinkEndpointLister returns a new PrivateLinkEndpointLister.
func NewPrivateLinkEndpointLister(indexer cache.Indexer) PrivateLinkEndpointLister {
	return &privateLinkEndpointLister{indexer: indexer}
}

// List lists all PrivateLinkEndpoints in the indexer.
func (s *privateLinkEndpointLister) List(selector labels.Selector) (ret []*v1alpha1.PrivateLinkEndpoint, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PrivateLinkEndpoint))
	})
	return ret, err
}

// PrivateLinkEndpoints returns an object that can list and get PrivateLinkEndpoints.
func (s *privateLinkEndpointLister) PrivateLinkEndpoints(namespace string) PrivateLinkEndpointNamespaceLister {
	return privateLinkEndpointNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PrivateLinkEndpointNamespaceLister helps list and get PrivateLinkEndpoints.
type PrivateLinkEndpointNamespaceLister interface {
	// List lists all PrivateLinkEndpoints in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.PrivateLinkEndpoint, err error)
	// Get retrieves the PrivateLinkEndpoint from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.PrivateLinkEndpoint, error)
	PrivateLinkEndpointNamespaceListerExpansion
}

// privateLinkEndpointNamespaceLister implements the PrivateLinkEndpointNamespaceLister
// interface.
type privateLinkEndpointNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all PrivateLinkEndpoints in the indexer for a given namespace.
func (s privateLinkEndpointNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.PrivateLinkEndpoint, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PrivateLinkEndpoint))
	})
	return ret, err
}

// Get retrieves the PrivateLinkEndpoint from the indexer for a given namespace and name.
func (s privateLinkEndpointNamespaceLister) Get(name string) (*v1alpha1.PrivateLinkEndpoint, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("privatelinkendpoint"), name)
	}
	return obj.(*v1alpha1.PrivateLinkEndpoint), nil
}
