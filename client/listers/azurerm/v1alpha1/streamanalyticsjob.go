/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"
)

// StreamAnalyticsJobLister helps list StreamAnalyticsJobs.
type StreamAnalyticsJobLister interface {
	// List lists all StreamAnalyticsJobs in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.StreamAnalyticsJob, err error)
	// StreamAnalyticsJobs returns an object that can list and get StreamAnalyticsJobs.
	StreamAnalyticsJobs(namespace string) StreamAnalyticsJobNamespaceLister
	StreamAnalyticsJobListerExpansion
}

// streamAnalyticsJobLister implements the StreamAnalyticsJobLister interface.
type streamAnalyticsJobLister struct {
	indexer cache.Indexer
}

// NewStreamAnalyticsJobLister returns a new StreamAnalyticsJobLister.
func NewStreamAnalyticsJobLister(indexer cache.Indexer) StreamAnalyticsJobLister {
	return &streamAnalyticsJobLister{indexer: indexer}
}

// List lists all StreamAnalyticsJobs in the indexer.
func (s *streamAnalyticsJobLister) List(selector labels.Selector) (ret []*v1alpha1.StreamAnalyticsJob, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.StreamAnalyticsJob))
	})
	return ret, err
}

// StreamAnalyticsJobs returns an object that can list and get StreamAnalyticsJobs.
func (s *streamAnalyticsJobLister) StreamAnalyticsJobs(namespace string) StreamAnalyticsJobNamespaceLister {
	return streamAnalyticsJobNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// StreamAnalyticsJobNamespaceLister helps list and get StreamAnalyticsJobs.
type StreamAnalyticsJobNamespaceLister interface {
	// List lists all StreamAnalyticsJobs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.StreamAnalyticsJob, err error)
	// Get retrieves the StreamAnalyticsJob from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.StreamAnalyticsJob, error)
	StreamAnalyticsJobNamespaceListerExpansion
}

// streamAnalyticsJobNamespaceLister implements the StreamAnalyticsJobNamespaceLister
// interface.
type streamAnalyticsJobNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all StreamAnalyticsJobs in the indexer for a given namespace.
func (s streamAnalyticsJobNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.StreamAnalyticsJob, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.StreamAnalyticsJob))
	})
	return ret, err
}

// Get retrieves the StreamAnalyticsJob from the indexer for a given namespace and name.
func (s streamAnalyticsJobNamespaceLister) Get(name string) (*v1alpha1.StreamAnalyticsJob, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("streamanalyticsjob"), name)
	}
	return obj.(*v1alpha1.StreamAnalyticsJob), nil
}
