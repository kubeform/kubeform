/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"
)

// LogicAppTriggerHTTPRequestLister helps list LogicAppTriggerHTTPRequests.
type LogicAppTriggerHTTPRequestLister interface {
	// List lists all LogicAppTriggerHTTPRequests in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.LogicAppTriggerHTTPRequest, err error)
	// LogicAppTriggerHTTPRequests returns an object that can list and get LogicAppTriggerHTTPRequests.
	LogicAppTriggerHTTPRequests(namespace string) LogicAppTriggerHTTPRequestNamespaceLister
	LogicAppTriggerHTTPRequestListerExpansion
}

// logicAppTriggerHTTPRequestLister implements the LogicAppTriggerHTTPRequestLister interface.
type logicAppTriggerHTTPRequestLister struct {
	indexer cache.Indexer
}

// NewLogicAppTriggerHTTPRequestLister returns a new LogicAppTriggerHTTPRequestLister.
func NewLogicAppTriggerHTTPRequestLister(indexer cache.Indexer) LogicAppTriggerHTTPRequestLister {
	return &logicAppTriggerHTTPRequestLister{indexer: indexer}
}

// List lists all LogicAppTriggerHTTPRequests in the indexer.
func (s *logicAppTriggerHTTPRequestLister) List(selector labels.Selector) (ret []*v1alpha1.LogicAppTriggerHTTPRequest, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.LogicAppTriggerHTTPRequest))
	})
	return ret, err
}

// LogicAppTriggerHTTPRequests returns an object that can list and get LogicAppTriggerHTTPRequests.
func (s *logicAppTriggerHTTPRequestLister) LogicAppTriggerHTTPRequests(namespace string) LogicAppTriggerHTTPRequestNamespaceLister {
	return logicAppTriggerHTTPRequestNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// LogicAppTriggerHTTPRequestNamespaceLister helps list and get LogicAppTriggerHTTPRequests.
type LogicAppTriggerHTTPRequestNamespaceLister interface {
	// List lists all LogicAppTriggerHTTPRequests in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.LogicAppTriggerHTTPRequest, err error)
	// Get retrieves the LogicAppTriggerHTTPRequest from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.LogicAppTriggerHTTPRequest, error)
	LogicAppTriggerHTTPRequestNamespaceListerExpansion
}

// logicAppTriggerHTTPRequestNamespaceLister implements the LogicAppTriggerHTTPRequestNamespaceLister
// interface.
type logicAppTriggerHTTPRequestNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all LogicAppTriggerHTTPRequests in the indexer for a given namespace.
func (s logicAppTriggerHTTPRequestNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.LogicAppTriggerHTTPRequest, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.LogicAppTriggerHTTPRequest))
	})
	return ret, err
}

// Get retrieves the LogicAppTriggerHTTPRequest from the indexer for a given namespace and name.
func (s logicAppTriggerHTTPRequestNamespaceLister) Get(name string) (*v1alpha1.LogicAppTriggerHTTPRequest, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("logicapptriggerhttprequest"), name)
	}
	return obj.(*v1alpha1.LogicAppTriggerHTTPRequest), nil
}
