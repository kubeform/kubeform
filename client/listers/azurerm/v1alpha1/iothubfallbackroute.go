/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// IothubFallbackRouteLister helps list IothubFallbackRoutes.
type IothubFallbackRouteLister interface {
	// List lists all IothubFallbackRoutes in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.IothubFallbackRoute, err error)
	// IothubFallbackRoutes returns an object that can list and get IothubFallbackRoutes.
	IothubFallbackRoutes(namespace string) IothubFallbackRouteNamespaceLister
	IothubFallbackRouteListerExpansion
}

// iothubFallbackRouteLister implements the IothubFallbackRouteLister interface.
type iothubFallbackRouteLister struct {
	indexer cache.Indexer
}

// NewIothubFallbackRouteLister returns a new IothubFallbackRouteLister.
func NewIothubFallbackRouteLister(indexer cache.Indexer) IothubFallbackRouteLister {
	return &iothubFallbackRouteLister{indexer: indexer}
}

// List lists all IothubFallbackRoutes in the indexer.
func (s *iothubFallbackRouteLister) List(selector labels.Selector) (ret []*v1alpha1.IothubFallbackRoute, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.IothubFallbackRoute))
	})
	return ret, err
}

// IothubFallbackRoutes returns an object that can list and get IothubFallbackRoutes.
func (s *iothubFallbackRouteLister) IothubFallbackRoutes(namespace string) IothubFallbackRouteNamespaceLister {
	return iothubFallbackRouteNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// IothubFallbackRouteNamespaceLister helps list and get IothubFallbackRoutes.
type IothubFallbackRouteNamespaceLister interface {
	// List lists all IothubFallbackRoutes in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.IothubFallbackRoute, err error)
	// Get retrieves the IothubFallbackRoute from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.IothubFallbackRoute, error)
	IothubFallbackRouteNamespaceListerExpansion
}

// iothubFallbackRouteNamespaceLister implements the IothubFallbackRouteNamespaceLister
// interface.
type iothubFallbackRouteNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all IothubFallbackRoutes in the indexer for a given namespace.
func (s iothubFallbackRouteNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.IothubFallbackRoute, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.IothubFallbackRoute))
	})
	return ret, err
}

// Get retrieves the IothubFallbackRoute from the indexer for a given namespace and name.
func (s iothubFallbackRouteNamespaceLister) Get(name string) (*v1alpha1.IothubFallbackRoute, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("iothubfallbackroute"), name)
	}
	return obj.(*v1alpha1.IothubFallbackRoute), nil
}
