/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AzureadServicePrincipalLister helps list AzureadServicePrincipals.
type AzureadServicePrincipalLister interface {
	// List lists all AzureadServicePrincipals in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.AzureadServicePrincipal, err error)
	// AzureadServicePrincipals returns an object that can list and get AzureadServicePrincipals.
	AzureadServicePrincipals(namespace string) AzureadServicePrincipalNamespaceLister
	AzureadServicePrincipalListerExpansion
}

// azureadServicePrincipalLister implements the AzureadServicePrincipalLister interface.
type azureadServicePrincipalLister struct {
	indexer cache.Indexer
}

// NewAzureadServicePrincipalLister returns a new AzureadServicePrincipalLister.
func NewAzureadServicePrincipalLister(indexer cache.Indexer) AzureadServicePrincipalLister {
	return &azureadServicePrincipalLister{indexer: indexer}
}

// List lists all AzureadServicePrincipals in the indexer.
func (s *azureadServicePrincipalLister) List(selector labels.Selector) (ret []*v1alpha1.AzureadServicePrincipal, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AzureadServicePrincipal))
	})
	return ret, err
}

// AzureadServicePrincipals returns an object that can list and get AzureadServicePrincipals.
func (s *azureadServicePrincipalLister) AzureadServicePrincipals(namespace string) AzureadServicePrincipalNamespaceLister {
	return azureadServicePrincipalNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AzureadServicePrincipalNamespaceLister helps list and get AzureadServicePrincipals.
type AzureadServicePrincipalNamespaceLister interface {
	// List lists all AzureadServicePrincipals in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.AzureadServicePrincipal, err error)
	// Get retrieves the AzureadServicePrincipal from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.AzureadServicePrincipal, error)
	AzureadServicePrincipalNamespaceListerExpansion
}

// azureadServicePrincipalNamespaceLister implements the AzureadServicePrincipalNamespaceLister
// interface.
type azureadServicePrincipalNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AzureadServicePrincipals in the indexer for a given namespace.
func (s azureadServicePrincipalNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AzureadServicePrincipal, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AzureadServicePrincipal))
	})
	return ret, err
}

// Get retrieves the AzureadServicePrincipal from the indexer for a given namespace and name.
func (s azureadServicePrincipalNamespaceLister) Get(name string) (*v1alpha1.AzureadServicePrincipal, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("azureadserviceprincipal"), name)
	}
	return obj.(*v1alpha1.AzureadServicePrincipal), nil
}
