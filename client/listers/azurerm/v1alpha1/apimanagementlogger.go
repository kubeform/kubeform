/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ApiManagementLoggerLister helps list ApiManagementLoggers.
type ApiManagementLoggerLister interface {
	// List lists all ApiManagementLoggers in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ApiManagementLogger, err error)
	// ApiManagementLoggers returns an object that can list and get ApiManagementLoggers.
	ApiManagementLoggers(namespace string) ApiManagementLoggerNamespaceLister
	ApiManagementLoggerListerExpansion
}

// apiManagementLoggerLister implements the ApiManagementLoggerLister interface.
type apiManagementLoggerLister struct {
	indexer cache.Indexer
}

// NewApiManagementLoggerLister returns a new ApiManagementLoggerLister.
func NewApiManagementLoggerLister(indexer cache.Indexer) ApiManagementLoggerLister {
	return &apiManagementLoggerLister{indexer: indexer}
}

// List lists all ApiManagementLoggers in the indexer.
func (s *apiManagementLoggerLister) List(selector labels.Selector) (ret []*v1alpha1.ApiManagementLogger, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ApiManagementLogger))
	})
	return ret, err
}

// ApiManagementLoggers returns an object that can list and get ApiManagementLoggers.
func (s *apiManagementLoggerLister) ApiManagementLoggers(namespace string) ApiManagementLoggerNamespaceLister {
	return apiManagementLoggerNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ApiManagementLoggerNamespaceLister helps list and get ApiManagementLoggers.
type ApiManagementLoggerNamespaceLister interface {
	// List lists all ApiManagementLoggers in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ApiManagementLogger, err error)
	// Get retrieves the ApiManagementLogger from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ApiManagementLogger, error)
	ApiManagementLoggerNamespaceListerExpansion
}

// apiManagementLoggerNamespaceLister implements the ApiManagementLoggerNamespaceLister
// interface.
type apiManagementLoggerNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ApiManagementLoggers in the indexer for a given namespace.
func (s apiManagementLoggerNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ApiManagementLogger, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ApiManagementLogger))
	})
	return ret, err
}

// Get retrieves the ApiManagementLogger from the indexer for a given namespace and name.
func (s apiManagementLoggerNamespaceLister) Get(name string) (*v1alpha1.ApiManagementLogger, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("apimanagementlogger"), name)
	}
	return obj.(*v1alpha1.ApiManagementLogger), nil
}
