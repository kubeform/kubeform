/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AppServiceSlotLister helps list AppServiceSlots.
type AppServiceSlotLister interface {
	// List lists all AppServiceSlots in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.AppServiceSlot, err error)
	// AppServiceSlots returns an object that can list and get AppServiceSlots.
	AppServiceSlots(namespace string) AppServiceSlotNamespaceLister
	AppServiceSlotListerExpansion
}

// appServiceSlotLister implements the AppServiceSlotLister interface.
type appServiceSlotLister struct {
	indexer cache.Indexer
}

// NewAppServiceSlotLister returns a new AppServiceSlotLister.
func NewAppServiceSlotLister(indexer cache.Indexer) AppServiceSlotLister {
	return &appServiceSlotLister{indexer: indexer}
}

// List lists all AppServiceSlots in the indexer.
func (s *appServiceSlotLister) List(selector labels.Selector) (ret []*v1alpha1.AppServiceSlot, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AppServiceSlot))
	})
	return ret, err
}

// AppServiceSlots returns an object that can list and get AppServiceSlots.
func (s *appServiceSlotLister) AppServiceSlots(namespace string) AppServiceSlotNamespaceLister {
	return appServiceSlotNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AppServiceSlotNamespaceLister helps list and get AppServiceSlots.
type AppServiceSlotNamespaceLister interface {
	// List lists all AppServiceSlots in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.AppServiceSlot, err error)
	// Get retrieves the AppServiceSlot from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.AppServiceSlot, error)
	AppServiceSlotNamespaceListerExpansion
}

// appServiceSlotNamespaceLister implements the AppServiceSlotNamespaceLister
// interface.
type appServiceSlotNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AppServiceSlots in the indexer for a given namespace.
func (s appServiceSlotNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AppServiceSlot, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AppServiceSlot))
	})
	return ret, err
}

// Get retrieves the AppServiceSlot from the indexer for a given namespace and name.
func (s appServiceSlotNamespaceLister) Get(name string) (*v1alpha1.AppServiceSlot, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("appserviceslot"), name)
	}
	return obj.(*v1alpha1.AppServiceSlot), nil
}
