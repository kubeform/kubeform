/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ApiManagementPropertyLister helps list ApiManagementProperties.
type ApiManagementPropertyLister interface {
	// List lists all ApiManagementProperties in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ApiManagementProperty, err error)
	// ApiManagementProperties returns an object that can list and get ApiManagementProperties.
	ApiManagementProperties(namespace string) ApiManagementPropertyNamespaceLister
	ApiManagementPropertyListerExpansion
}

// apiManagementPropertyLister implements the ApiManagementPropertyLister interface.
type apiManagementPropertyLister struct {
	indexer cache.Indexer
}

// NewApiManagementPropertyLister returns a new ApiManagementPropertyLister.
func NewApiManagementPropertyLister(indexer cache.Indexer) ApiManagementPropertyLister {
	return &apiManagementPropertyLister{indexer: indexer}
}

// List lists all ApiManagementProperties in the indexer.
func (s *apiManagementPropertyLister) List(selector labels.Selector) (ret []*v1alpha1.ApiManagementProperty, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ApiManagementProperty))
	})
	return ret, err
}

// ApiManagementProperties returns an object that can list and get ApiManagementProperties.
func (s *apiManagementPropertyLister) ApiManagementProperties(namespace string) ApiManagementPropertyNamespaceLister {
	return apiManagementPropertyNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ApiManagementPropertyNamespaceLister helps list and get ApiManagementProperties.
type ApiManagementPropertyNamespaceLister interface {
	// List lists all ApiManagementProperties in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ApiManagementProperty, err error)
	// Get retrieves the ApiManagementProperty from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ApiManagementProperty, error)
	ApiManagementPropertyNamespaceListerExpansion
}

// apiManagementPropertyNamespaceLister implements the ApiManagementPropertyNamespaceLister
// interface.
type apiManagementPropertyNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ApiManagementProperties in the indexer for a given namespace.
func (s apiManagementPropertyNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ApiManagementProperty, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ApiManagementProperty))
	})
	return ret, err
}

// Get retrieves the ApiManagementProperty from the indexer for a given namespace and name.
func (s apiManagementPropertyNamespaceLister) Get(name string) (*v1alpha1.ApiManagementProperty, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("apimanagementproperty"), name)
	}
	return obj.(*v1alpha1.ApiManagementProperty), nil
}
