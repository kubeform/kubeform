/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// DevTestScheduleLister helps list DevTestSchedules.
type DevTestScheduleLister interface {
	// List lists all DevTestSchedules in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.DevTestSchedule, err error)
	// DevTestSchedules returns an object that can list and get DevTestSchedules.
	DevTestSchedules(namespace string) DevTestScheduleNamespaceLister
	DevTestScheduleListerExpansion
}

// devTestScheduleLister implements the DevTestScheduleLister interface.
type devTestScheduleLister struct {
	indexer cache.Indexer
}

// NewDevTestScheduleLister returns a new DevTestScheduleLister.
func NewDevTestScheduleLister(indexer cache.Indexer) DevTestScheduleLister {
	return &devTestScheduleLister{indexer: indexer}
}

// List lists all DevTestSchedules in the indexer.
func (s *devTestScheduleLister) List(selector labels.Selector) (ret []*v1alpha1.DevTestSchedule, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DevTestSchedule))
	})
	return ret, err
}

// DevTestSchedules returns an object that can list and get DevTestSchedules.
func (s *devTestScheduleLister) DevTestSchedules(namespace string) DevTestScheduleNamespaceLister {
	return devTestScheduleNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DevTestScheduleNamespaceLister helps list and get DevTestSchedules.
type DevTestScheduleNamespaceLister interface {
	// List lists all DevTestSchedules in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.DevTestSchedule, err error)
	// Get retrieves the DevTestSchedule from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.DevTestSchedule, error)
	DevTestScheduleNamespaceListerExpansion
}

// devTestScheduleNamespaceLister implements the DevTestScheduleNamespaceLister
// interface.
type devTestScheduleNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DevTestSchedules in the indexer for a given namespace.
func (s devTestScheduleNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.DevTestSchedule, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DevTestSchedule))
	})
	return ret, err
}

// Get retrieves the DevTestSchedule from the indexer for a given namespace and name.
func (s devTestScheduleNamespaceLister) Get(name string) (*v1alpha1.DevTestSchedule, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("devtestschedule"), name)
	}
	return obj.(*v1alpha1.DevTestSchedule), nil
}
