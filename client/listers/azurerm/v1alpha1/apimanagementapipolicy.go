/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ApiManagementAPIPolicyLister helps list ApiManagementAPIPolicies.
type ApiManagementAPIPolicyLister interface {
	// List lists all ApiManagementAPIPolicies in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ApiManagementAPIPolicy, err error)
	// ApiManagementAPIPolicies returns an object that can list and get ApiManagementAPIPolicies.
	ApiManagementAPIPolicies(namespace string) ApiManagementAPIPolicyNamespaceLister
	ApiManagementAPIPolicyListerExpansion
}

// apiManagementAPIPolicyLister implements the ApiManagementAPIPolicyLister interface.
type apiManagementAPIPolicyLister struct {
	indexer cache.Indexer
}

// NewApiManagementAPIPolicyLister returns a new ApiManagementAPIPolicyLister.
func NewApiManagementAPIPolicyLister(indexer cache.Indexer) ApiManagementAPIPolicyLister {
	return &apiManagementAPIPolicyLister{indexer: indexer}
}

// List lists all ApiManagementAPIPolicies in the indexer.
func (s *apiManagementAPIPolicyLister) List(selector labels.Selector) (ret []*v1alpha1.ApiManagementAPIPolicy, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ApiManagementAPIPolicy))
	})
	return ret, err
}

// ApiManagementAPIPolicies returns an object that can list and get ApiManagementAPIPolicies.
func (s *apiManagementAPIPolicyLister) ApiManagementAPIPolicies(namespace string) ApiManagementAPIPolicyNamespaceLister {
	return apiManagementAPIPolicyNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ApiManagementAPIPolicyNamespaceLister helps list and get ApiManagementAPIPolicies.
type ApiManagementAPIPolicyNamespaceLister interface {
	// List lists all ApiManagementAPIPolicies in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ApiManagementAPIPolicy, err error)
	// Get retrieves the ApiManagementAPIPolicy from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ApiManagementAPIPolicy, error)
	ApiManagementAPIPolicyNamespaceListerExpansion
}

// apiManagementAPIPolicyNamespaceLister implements the ApiManagementAPIPolicyNamespaceLister
// interface.
type apiManagementAPIPolicyNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ApiManagementAPIPolicies in the indexer for a given namespace.
func (s apiManagementAPIPolicyNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ApiManagementAPIPolicy, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ApiManagementAPIPolicy))
	})
	return ret, err
}

// Get retrieves the ApiManagementAPIPolicy from the indexer for a given namespace and name.
func (s apiManagementAPIPolicyNamespaceLister) Get(name string) (*v1alpha1.ApiManagementAPIPolicy, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("apimanagementapipolicy"), name)
	}
	return obj.(*v1alpha1.ApiManagementAPIPolicy), nil
}
