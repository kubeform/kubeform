/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// LogicAppActionCustomLister helps list LogicAppActionCustoms.
type LogicAppActionCustomLister interface {
	// List lists all LogicAppActionCustoms in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.LogicAppActionCustom, err error)
	// LogicAppActionCustoms returns an object that can list and get LogicAppActionCustoms.
	LogicAppActionCustoms(namespace string) LogicAppActionCustomNamespaceLister
	LogicAppActionCustomListerExpansion
}

// logicAppActionCustomLister implements the LogicAppActionCustomLister interface.
type logicAppActionCustomLister struct {
	indexer cache.Indexer
}

// NewLogicAppActionCustomLister returns a new LogicAppActionCustomLister.
func NewLogicAppActionCustomLister(indexer cache.Indexer) LogicAppActionCustomLister {
	return &logicAppActionCustomLister{indexer: indexer}
}

// List lists all LogicAppActionCustoms in the indexer.
func (s *logicAppActionCustomLister) List(selector labels.Selector) (ret []*v1alpha1.LogicAppActionCustom, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.LogicAppActionCustom))
	})
	return ret, err
}

// LogicAppActionCustoms returns an object that can list and get LogicAppActionCustoms.
func (s *logicAppActionCustomLister) LogicAppActionCustoms(namespace string) LogicAppActionCustomNamespaceLister {
	return logicAppActionCustomNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// LogicAppActionCustomNamespaceLister helps list and get LogicAppActionCustoms.
type LogicAppActionCustomNamespaceLister interface {
	// List lists all LogicAppActionCustoms in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.LogicAppActionCustom, err error)
	// Get retrieves the LogicAppActionCustom from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.LogicAppActionCustom, error)
	LogicAppActionCustomNamespaceListerExpansion
}

// logicAppActionCustomNamespaceLister implements the LogicAppActionCustomNamespaceLister
// interface.
type logicAppActionCustomNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all LogicAppActionCustoms in the indexer for a given namespace.
func (s logicAppActionCustomNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.LogicAppActionCustom, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.LogicAppActionCustom))
	})
	return ret, err
}

// Get retrieves the LogicAppActionCustom from the indexer for a given namespace and name.
func (s logicAppActionCustomNamespaceLister) Get(name string) (*v1alpha1.LogicAppActionCustom, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("logicappactioncustom"), name)
	}
	return obj.(*v1alpha1.LogicAppActionCustom), nil
}
