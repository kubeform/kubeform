/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ApiManagementDiagnosticLister helps list ApiManagementDiagnostics.
type ApiManagementDiagnosticLister interface {
	// List lists all ApiManagementDiagnostics in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ApiManagementDiagnostic, err error)
	// ApiManagementDiagnostics returns an object that can list and get ApiManagementDiagnostics.
	ApiManagementDiagnostics(namespace string) ApiManagementDiagnosticNamespaceLister
	ApiManagementDiagnosticListerExpansion
}

// apiManagementDiagnosticLister implements the ApiManagementDiagnosticLister interface.
type apiManagementDiagnosticLister struct {
	indexer cache.Indexer
}

// NewApiManagementDiagnosticLister returns a new ApiManagementDiagnosticLister.
func NewApiManagementDiagnosticLister(indexer cache.Indexer) ApiManagementDiagnosticLister {
	return &apiManagementDiagnosticLister{indexer: indexer}
}

// List lists all ApiManagementDiagnostics in the indexer.
func (s *apiManagementDiagnosticLister) List(selector labels.Selector) (ret []*v1alpha1.ApiManagementDiagnostic, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ApiManagementDiagnostic))
	})
	return ret, err
}

// ApiManagementDiagnostics returns an object that can list and get ApiManagementDiagnostics.
func (s *apiManagementDiagnosticLister) ApiManagementDiagnostics(namespace string) ApiManagementDiagnosticNamespaceLister {
	return apiManagementDiagnosticNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ApiManagementDiagnosticNamespaceLister helps list and get ApiManagementDiagnostics.
type ApiManagementDiagnosticNamespaceLister interface {
	// List lists all ApiManagementDiagnostics in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ApiManagementDiagnostic, err error)
	// Get retrieves the ApiManagementDiagnostic from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ApiManagementDiagnostic, error)
	ApiManagementDiagnosticNamespaceListerExpansion
}

// apiManagementDiagnosticNamespaceLister implements the ApiManagementDiagnosticNamespaceLister
// interface.
type apiManagementDiagnosticNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ApiManagementDiagnostics in the indexer for a given namespace.
func (s apiManagementDiagnosticNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ApiManagementDiagnostic, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ApiManagementDiagnostic))
	})
	return ret, err
}

// Get retrieves the ApiManagementDiagnostic from the indexer for a given namespace and name.
func (s apiManagementDiagnosticNamespaceLister) Get(name string) (*v1alpha1.ApiManagementDiagnostic, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("apimanagementdiagnostic"), name)
	}
	return obj.(*v1alpha1.ApiManagementDiagnostic), nil
}
