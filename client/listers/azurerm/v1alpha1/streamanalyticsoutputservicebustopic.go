/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// StreamAnalyticsOutputServicebusTopicLister helps list StreamAnalyticsOutputServicebusTopics.
type StreamAnalyticsOutputServicebusTopicLister interface {
	// List lists all StreamAnalyticsOutputServicebusTopics in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.StreamAnalyticsOutputServicebusTopic, err error)
	// StreamAnalyticsOutputServicebusTopics returns an object that can list and get StreamAnalyticsOutputServicebusTopics.
	StreamAnalyticsOutputServicebusTopics(namespace string) StreamAnalyticsOutputServicebusTopicNamespaceLister
	StreamAnalyticsOutputServicebusTopicListerExpansion
}

// streamAnalyticsOutputServicebusTopicLister implements the StreamAnalyticsOutputServicebusTopicLister interface.
type streamAnalyticsOutputServicebusTopicLister struct {
	indexer cache.Indexer
}

// NewStreamAnalyticsOutputServicebusTopicLister returns a new StreamAnalyticsOutputServicebusTopicLister.
func NewStreamAnalyticsOutputServicebusTopicLister(indexer cache.Indexer) StreamAnalyticsOutputServicebusTopicLister {
	return &streamAnalyticsOutputServicebusTopicLister{indexer: indexer}
}

// List lists all StreamAnalyticsOutputServicebusTopics in the indexer.
func (s *streamAnalyticsOutputServicebusTopicLister) List(selector labels.Selector) (ret []*v1alpha1.StreamAnalyticsOutputServicebusTopic, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.StreamAnalyticsOutputServicebusTopic))
	})
	return ret, err
}

// StreamAnalyticsOutputServicebusTopics returns an object that can list and get StreamAnalyticsOutputServicebusTopics.
func (s *streamAnalyticsOutputServicebusTopicLister) StreamAnalyticsOutputServicebusTopics(namespace string) StreamAnalyticsOutputServicebusTopicNamespaceLister {
	return streamAnalyticsOutputServicebusTopicNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// StreamAnalyticsOutputServicebusTopicNamespaceLister helps list and get StreamAnalyticsOutputServicebusTopics.
type StreamAnalyticsOutputServicebusTopicNamespaceLister interface {
	// List lists all StreamAnalyticsOutputServicebusTopics in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.StreamAnalyticsOutputServicebusTopic, err error)
	// Get retrieves the StreamAnalyticsOutputServicebusTopic from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.StreamAnalyticsOutputServicebusTopic, error)
	StreamAnalyticsOutputServicebusTopicNamespaceListerExpansion
}

// streamAnalyticsOutputServicebusTopicNamespaceLister implements the StreamAnalyticsOutputServicebusTopicNamespaceLister
// interface.
type streamAnalyticsOutputServicebusTopicNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all StreamAnalyticsOutputServicebusTopics in the indexer for a given namespace.
func (s streamAnalyticsOutputServicebusTopicNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.StreamAnalyticsOutputServicebusTopic, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.StreamAnalyticsOutputServicebusTopic))
	})
	return ret, err
}

// Get retrieves the StreamAnalyticsOutputServicebusTopic from the indexer for a given namespace and name.
func (s streamAnalyticsOutputServicebusTopicNamespaceLister) Get(name string) (*v1alpha1.StreamAnalyticsOutputServicebusTopic, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("streamanalyticsoutputservicebustopic"), name)
	}
	return obj.(*v1alpha1.StreamAnalyticsOutputServicebusTopic), nil
}
