/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/azurerm/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SearchServiceLister helps list SearchServices.
type SearchServiceLister interface {
	// List lists all SearchServices in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.SearchService, err error)
	// SearchServices returns an object that can list and get SearchServices.
	SearchServices(namespace string) SearchServiceNamespaceLister
	SearchServiceListerExpansion
}

// searchServiceLister implements the SearchServiceLister interface.
type searchServiceLister struct {
	indexer cache.Indexer
}

// NewSearchServiceLister returns a new SearchServiceLister.
func NewSearchServiceLister(indexer cache.Indexer) SearchServiceLister {
	return &searchServiceLister{indexer: indexer}
}

// List lists all SearchServices in the indexer.
func (s *searchServiceLister) List(selector labels.Selector) (ret []*v1alpha1.SearchService, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SearchService))
	})
	return ret, err
}

// SearchServices returns an object that can list and get SearchServices.
func (s *searchServiceLister) SearchServices(namespace string) SearchServiceNamespaceLister {
	return searchServiceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SearchServiceNamespaceLister helps list and get SearchServices.
type SearchServiceNamespaceLister interface {
	// List lists all SearchServices in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.SearchService, err error)
	// Get retrieves the SearchService from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.SearchService, error)
	SearchServiceNamespaceListerExpansion
}

// searchServiceNamespaceLister implements the SearchServiceNamespaceLister
// interface.
type searchServiceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SearchServices in the indexer for a given namespace.
func (s searchServiceNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SearchService, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SearchService))
	})
	return ret, err
}

// Get retrieves the SearchService from the indexer for a given namespace and name.
func (s searchServiceNamespaceLister) Get(name string) (*v1alpha1.SearchService, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("searchservice"), name)
	}
	return obj.(*v1alpha1.SearchService), nil
}
