/*
Copyright The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/kubeform/apis/linode/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ObjectStorageKeyLister helps list ObjectStorageKeys.
type ObjectStorageKeyLister interface {
	// List lists all ObjectStorageKeys in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ObjectStorageKey, err error)
	// ObjectStorageKeys returns an object that can list and get ObjectStorageKeys.
	ObjectStorageKeys(namespace string) ObjectStorageKeyNamespaceLister
	ObjectStorageKeyListerExpansion
}

// objectStorageKeyLister implements the ObjectStorageKeyLister interface.
type objectStorageKeyLister struct {
	indexer cache.Indexer
}

// NewObjectStorageKeyLister returns a new ObjectStorageKeyLister.
func NewObjectStorageKeyLister(indexer cache.Indexer) ObjectStorageKeyLister {
	return &objectStorageKeyLister{indexer: indexer}
}

// List lists all ObjectStorageKeys in the indexer.
func (s *objectStorageKeyLister) List(selector labels.Selector) (ret []*v1alpha1.ObjectStorageKey, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ObjectStorageKey))
	})
	return ret, err
}

// ObjectStorageKeys returns an object that can list and get ObjectStorageKeys.
func (s *objectStorageKeyLister) ObjectStorageKeys(namespace string) ObjectStorageKeyNamespaceLister {
	return objectStorageKeyNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ObjectStorageKeyNamespaceLister helps list and get ObjectStorageKeys.
type ObjectStorageKeyNamespaceLister interface {
	// List lists all ObjectStorageKeys in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ObjectStorageKey, err error)
	// Get retrieves the ObjectStorageKey from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ObjectStorageKey, error)
	ObjectStorageKeyNamespaceListerExpansion
}

// objectStorageKeyNamespaceLister implements the ObjectStorageKeyNamespaceLister
// interface.
type objectStorageKeyNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ObjectStorageKeys in the indexer for a given namespace.
func (s objectStorageKeyNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ObjectStorageKey, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ObjectStorageKey))
	})
	return ret, err
}

// Get retrieves the ObjectStorageKey from the indexer for a given namespace and name.
func (s objectStorageKeyNamespaceLister) Get(name string) (*v1alpha1.ObjectStorageKey, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("objectstoragekey"), name)
	}
	return obj.(*v1alpha1.ObjectStorageKey), nil
}
