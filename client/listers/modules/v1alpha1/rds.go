/*
Copyright 2019 The Kubeform Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/kubeform/apis/modules/v1alpha1"
)

// RDSLister helps list RDSs.
type RDSLister interface {
	// List lists all RDSs in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.RDS, err error)
	// RDSs returns an object that can list and get RDSs.
	RDSs(namespace string) RDSNamespaceLister
	RDSListerExpansion
}

// rDSLister implements the RDSLister interface.
type rDSLister struct {
	indexer cache.Indexer
}

// NewRDSLister returns a new RDSLister.
func NewRDSLister(indexer cache.Indexer) RDSLister {
	return &rDSLister{indexer: indexer}
}

// List lists all RDSs in the indexer.
func (s *rDSLister) List(selector labels.Selector) (ret []*v1alpha1.RDS, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RDS))
	})
	return ret, err
}

// RDSs returns an object that can list and get RDSs.
func (s *rDSLister) RDSs(namespace string) RDSNamespaceLister {
	return rDSNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// RDSNamespaceLister helps list and get RDSs.
type RDSNamespaceLister interface {
	// List lists all RDSs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.RDS, err error)
	// Get retrieves the RDS from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.RDS, error)
	RDSNamespaceListerExpansion
}

// rDSNamespaceLister implements the RDSNamespaceLister
// interface.
type rDSNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all RDSs in the indexer for a given namespace.
func (s rDSNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.RDS, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RDS))
	})
	return ret, err
}

// Get retrieves the RDS from the indexer for a given namespace and name.
func (s rDSNamespaceLister) Get(name string) (*v1alpha1.RDS, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("rds"), name)
	}
	return obj.(*v1alpha1.RDS), nil
}
